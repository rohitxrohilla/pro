

	

    <!DOCTYPE html>
<html>

<head>
	<title>Timeline - Chitkara University</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">

		
<link rel="shortcut icon" type="image/x-icon" href="https://cuiet.codebrigade.in/faviconCB.ico">
<link rel="apple-touch-icon" sizes="180x180" href="https://cuiet.codebrigade.in/apple-touch-iconCB.png">
<link rel="icon" type="image/png" sizes="32x32" href="https://cuiet.codebrigade.in/faviconCB-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="https://cuiet.codebrigade.in/faviconCB-16x16.png">
<link rel="manifest" href="https://cuiet.codebrigade.in/site.webmanifest">

<link href="https://cuiet.codebrigade.in/css/tipsy.css" rel="stylesheet" type="text/css" />
<link href="https://cuiet.codebrigade.in/css/pikaday.css" rel="stylesheet" type="text/css" />

	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/timeline/style-timeline.css?modified=2015">
	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/timeline/bootstrap.css">
	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/timeline/bootstrap-theme.css">
	<style>
@font-face {
    font-family: 'r-regular';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.svg#robotoregular') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-semi';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.svg#robotomedium') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-bold';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.svg#robotobold') format('svg');
    font-weight: normal;
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-thin';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.svg#robotothin') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-black';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.ttf');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.svg#robotoblack') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-light';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.ttf');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.svg#robotolight') format('svg');
    font-weight: normal;
    font-style: normal;

}
</style>	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/font/font-face.css">
	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/timeline/slide.css?modified=2015">
	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/timeline/modal-slide.css">
	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/jquery.qtip.css">
	<link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/swiper.css">

	<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery.min.js"></script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery.simplemodal.js"></script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery.form.js?1"></script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/socket.io.min.js"></script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/guiders-1.2.3.js"></script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery.watermark.min.js"></script>
<script type='text/javascript' src="https://cuiet.codebrigade.in/scripts/tipsy.js"></script>
<script type='text/javascript' src="https://cuiet.codebrigade.in/scripts/moment.js"></script>
<script type='text/javascript' src="https://cuiet.codebrigade.in/scripts/pikaday.js"></script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery.qtip.js"></script>
<!-- Amanpreet - Feb 2021 - Google sign out -->
  <meta name="google-signin-client_id" content="907753617702-8t6t7dvgft5mhut0a3jaunmqg126p6k7.apps.googleusercontent.com">
<!-- ends - Google sign out -->
<script>
/**!
*
* Copyright 2013 LinkedIn Corp. All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
!function(a,b){var c,d,e,f,g,h,i,j,k,l,m=window.Sizzle||null,n=a[b],o="undefined",p=!1,q=typeof window.jQuery!==o,r=typeof window.sessionStorage!==o,s=window.document;l={smoothScroll:!0,scrollDuration:1e3,scrollTopMargin:200,showCloseButton:!0,showPrevButton:!1,showNextButton:!0,bubbleWidth:280,bubblePadding:15,arrowWidth:20,skipIfNoElement:!0,cookieName:"hopscotch.tour.state"},n||(Array.isArray||(Array.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)}),k=function(){p&&n.startTour()},h={addClass:function(a,b){var c,d,e,f;if(a.className){for(d=b.split(/\s+/),c=" "+a.className+" ",e=0,f=d.length;f>e;++e)c.indexOf(" "+d[e]+" ")<0&&(c+=d[e]+" ");a.className=c.replace(/^\s+|\s+$/g,"")}else a.className=b},removeClass:function(a,b){var c,d,e,f;for(d=b.split(/\s+/),c=" "+a.className+" ",e=0,f=d.length;f>e;++e)c=c.replace(" "+d[e]+" "," ");a.className=c.replace(/^\s+|\s+$/g,"")},getPixelValue:function(a){var b=typeof a;return"number"===b?a:"string"===b?parseInt(a,10):0},valOrDefault:function(a,b){return typeof a!==o?a:b},invokeCallbackArrayHelper:function(a){var b;return Array.isArray(a)&&(b=j[a[0]],"function"==typeof b)?b.apply(this,a.slice(1)):void 0},invokeCallbackArray:function(a){var b,c;if(Array.isArray(a)){if("string"==typeof a[0])return h.invokeCallbackArrayHelper(a);for(b=0,c=a.length;c>b;++b)h.invokeCallback(a[b])}},invokeCallback:function(a){return"function"==typeof a?a():"string"==typeof a&&j[a]?j[a]():h.invokeCallbackArray(a)},invokeEventCallbacks:function(a,b){var c,d,e=i[a];if(b)return this.invokeCallback(b);for(c=0,d=e.length;d>c;++c)this.invokeCallback(e[c].cb)},getScrollTop:function(){var a;return a=typeof window.pageYOffset!==o?window.pageYOffset:s.documentElement.scrollTop},getScrollLeft:function(){var a;return a=typeof window.pageXOffset!==o?window.pageXOffset:s.documentElement.scrollLeft},getWindowHeight:function(){return window.innerHeight||s.documentElement.clientHeight},getWindowWidth:function(){return window.innerWidth||s.documentElement.clientWidth},addEvtListener:function(a,b,c){return a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent("on"+b,c)},removeEvtListener:function(a,b,c){return a.removeEventListener?a.removeEventListener(b,c,!1):a.detachEvent("on"+b,c)},documentIsReady:function(){return"complete"===s.readyState||"interactive"===s.readyState},evtPreventDefault:function(a){a.preventDefault?a.preventDefault():event&&(event.returnValue=!1)},extend:function(a,b){var c;for(c in b)b.hasOwnProperty(c)&&(a[c]=b[c])},getStepTargetHelper:function(a){var b;return/^[#\.]/.test(a)?s.querySelector?s.querySelector(a):q?(b=jQuery(a),b.length?b[0]:null):m?(b=new m(a),b.length?b[0]:null):/^#[a-zA-Z][\w-_:.]*$/.test(a)?s.getElementById(a.substring(1)):null:s.getElementById(a)},getStepTarget:function(a){var b;if(!a||!a.target)return null;if("string"==typeof a.target)return a.target=h.getStepTargetHelper(a.target),a.target;if(Array.isArray(a.target)){var c,d;for(c=0,d=a.target.length;d>c;c++)if("string"==typeof a.target[c]&&(b=h.getStepTargetHelper(a.target[c])))return a.target=b,b;return null}return a.target},getI18NString:function(a){return g[a]||f[a]},setState:function(a,b,c){var d,e="";r?sessionStorage.setItem(a,b):(c&&(d=new Date,d.setTime(d.getTime()+1e3*60*60*24*c),e="; expires="+d.toGMTString()),s.cookie=a+"="+b+e+"; path=/")},getState:function(a){var b,c,d,e=a+"=",f=s.cookie.split(";");if(r)d=sessionStorage.getItem(a);else for(b=0;b<f.length;b++){for(c=f[b];" "===c.charAt(0);)c=c.substring(1,c.length);if(0===c.indexOf(e)){d=c.substring(e.length,c.length);break}}return d},clearState:function(a){r?sessionStorage.removeItem(a):this.setState(a,"",-1)}},h.addEvtListener(window,"load",k),i={next:[],prev:[],start:[],end:[],show:[],error:[],close:[]},j={},f={stepNums:null,nextBtn:"Next",prevBtn:"Back",doneBtn:"Done",skipBtn:"Skip",closeTooltip:"Close"},g={},d=function(a){this.init(a)},d.prototype={isShowing:!1,currStep:void 0,_createButton:function(a,b){var c=s.createElement("button"),d="hopscotch-nav-button";return c.id=a,b&&(c.innerHTML=b),d+=a.indexOf("prev")>=0?" prev":" next",h.addClass(c,d),c},setPosition:function(a){var b,c,d,e,f,g,i,j=6,k=h.getStepTarget(a),l=this.element,m=this.arrowEl;b=h.getPixelValue(a.width)||this.opt.bubbleWidth,d=h.valOrDefault(a.padding,this.opt.bubblePadding),h.removeClass(l,"fade-in-down fade-in-up fade-in-left fade-in-right"),!a.placement&&a.orientation&&(a.placement=a.orientation),e=k.getBoundingClientRect(),"top"===a.placement?(c=l.offsetHeight,f=e.top-c-this.opt.arrowWidth,g=e.left):"bottom"===a.placement?(f=e.bottom+this.opt.arrowWidth,g=e.left):"left"===a.placement?(f=e.top,g=e.left-b-2*d-2*j-this.opt.arrowWidth):"right"===a.placement&&(f=e.top,g=e.right+this.opt.arrowWidth),i="center"!==a.arrowOffset?h.getPixelValue(a.arrowOffset):a.arrowOffset,i?"top"===a.placement||"bottom"===a.placement?(m.style.top="",m.style.left="center"===i?b/2+d-m.offsetWidth/2+"px":i+"px"):("left"===a.placement||"right"===a.placement)&&(m.style.left="","center"===i?(c=c||l.offsetHeight,m.style.top=c/2+d-m.offsetHeight/2+"px"):m.style.top=i+"px"):(m.style.top="",m.style.left=""),"center"===a.xOffset?g=e.left+k.offsetWidth/2-b/2-d:g+=h.getPixelValue(a.xOffset),"center"===a.yOffset?(c=c||l.offsetHeight,f=e.top+k.offsetHeight/2-c/2-d):f+=h.getPixelValue(a.yOffset),a.fixedElement||(f+=h.getScrollTop(),g+=h.getScrollLeft()),l.style.position=a.fixedElement?"fixed":"absolute",l.style.top=f+"px",l.style.left=g+"px"},_initNavButtons:function(){var a=s.createElement("div");return this.prevBtnEl=this._createButton("hopscotch-prev",h.getI18NString("prevBtn")),this.nextBtnEl=this._createButton("hopscotch-next",h.getI18NString("nextBtn")),this.doneBtnEl=this._createButton("hopscotch-done",h.getI18NString("doneBtn")),this.ctaBtnEl=this._createButton("hopscotch-cta"),h.addClass(this.doneBtnEl,"hide"),a.appendChild(this.prevBtnEl),a.appendChild(this.ctaBtnEl),a.appendChild(this.nextBtnEl),a.appendChild(this.doneBtnEl),h.addEvtListener(this.prevBtnEl,"click",function(){n.prevStep(!0)}),h.addEvtListener(this.nextBtnEl,"click",function(){n.nextStep(!0)}),h.addEvtListener(this.doneBtnEl,"click",function(){n.endTour()}),a.className="hopscotch-actions",this.buttonsEl=a,this.containerEl.appendChild(a),this},_getCloseFn:function(){var a=this;return this.closeFn||(this.closeFn=function(b){a.opt.onClose&&h.invokeCallback(a.opt.onClose),a.opt.id&&!a.opt.isTourBubble?n.getCalloutManager().removeCallout(a.opt.id):a.destroy(),h.evtPreventDefault(b)}),this.closeFn},initCloseButton:function(){var a=s.createElement("a");return a.className="hopscotch-bubble-close",a.href="#",a.title=h.getI18NString("closeTooltip"),a.innerHTML=h.getI18NString("closeTooltip"),this.opt.isTourBubble?h.addEvtListener(a,"click",function(a){var b=n.getCurrStepNum(),c=n.getCurrTour(),d=b===c.steps.length-1;h.invokeEventCallbacks("close"),n.endTour(!0,d),a.preventDefault?a.preventDefault():event&&(event.returnValue=!1)}):h.addEvtListener(a,"click",this._getCloseFn()),h.valOrDefault(this.opt.showCloseButton,!0)||h.addClass(a,"hide"),this.closeBtnEl=a,this.containerEl.appendChild(a),this},_initArrow:function(){var a,b;return this.arrowEl=s.createElement("div"),this.arrowEl.className="hopscotch-bubble-arrow-container",b=s.createElement("div"),b.className="hopscotch-bubble-arrow-border",a=s.createElement("div"),a.className="hopscotch-bubble-arrow",this.arrowEl.appendChild(b),this.arrowEl.appendChild(a),this.element.appendChild(this.arrowEl),this},_setupCTAButton:function(a){var b=this;this._showButton(this.ctaBtnEl,!!a.showCTAButton),a.showCTAButton&&a.ctaLabel&&(this.ctaBtnEl.innerHTML=a.ctaLabel,this._ctaFn=function(){b.opt.isTourBubble||n.getCalloutManager().removeCallout(a.id),a.onCTA&&"function"==typeof a.onCTA&&a.onCTA()},h.addEvtListener(this.ctaBtnEl,"click",this._ctaFn))},_removeCTACallback:function(){this.ctaBtnEl&&this._ctaFn&&(h.removeEvtListener(this.ctaBtnEl,"click",this._ctaFn),this._ctaFn=null)},render:function(a,b,c,d){var e,f,g,i,j=this.element;return a?this.currStep=a:this.currStep&&(a=this.currStep),!a.placement&&a.orientation&&(a.placement=a.orientation),e=h.valOrDefault(a.showNextButton,this.opt.showNextButton),f=h.valOrDefault(a.showPrevButton,this.opt.showPrevButton),this.setTitle(a.title||""),this.setContent(a.content||""),this.opt.isTourBubble&&this.setNum(b),this.placement=a.placement,this.showPrevButton(this.prevBtnEl&&f&&b>0),this.showNextButton(this.nextBtnEl&&e&&!c),this.nextBtnEl.innerHTML=a.showSkip?h.getI18NString("skipBtn"):h.getI18NString("nextBtn"),c?h.removeClass(this.doneBtnEl,"hide"):h.addClass(this.doneBtnEl,"hide"),this._setupCTAButton(a),this._setArrow(a.placement),g=h.getPixelValue(a.width)||this.opt.bubbleWidth,i=h.valOrDefault(a.padding,this.opt.bubblePadding),this.containerEl.style.width=g+"px",this.containerEl.style.padding=i+"px",j.style.zIndex=a.zindex||"","top"===a.placement?(j.style.top="-9999px",j.style.left="-9999px",h.removeClass(j,"hide"),this.setPosition(a),h.addClass(j,"hide")):this.setPosition(a),d&&d(!a.fixedElement),this},setTitle:function(a){return a?(this.titleEl.innerHTML=a,h.removeClass(this.titleEl,"hide")):h.addClass(this.titleEl,"hide"),this},setContent:function(a){return a?(this.contentEl.innerHTML=a,h.removeClass(this.contentEl,"hide")):h.addClass(this.contentEl,"hide"),this},setNum:function(a){var b=h.getI18NString("stepNums");b&&a<b.length?a=b[a]:a+=1,this.numberEl.innerHTML=a},_setArrow:function(a){h.removeClass(this.arrowEl,"down up right left"),"top"===a?h.addClass(this.arrowEl,"down"):"bottom"===a?h.addClass(this.arrowEl,"up"):"left"===a?h.addClass(this.arrowEl,"right"):"right"===a&&h.addClass(this.arrowEl,"left")},_getArrowDirection:function(){return"top"===this.placement?"down":"bottom"===this.placement?"up":"left"===this.placement?"right":"right"===this.placement?"left":void 0},show:function(){var a=this,b="fade-in-"+this._getArrowDirection(),c=1e3;return h.removeClass(this.element,"hide"),h.addClass(this.element,b),setTimeout(function(){h.removeClass(a.element,"invisible")},50),setTimeout(function(){h.removeClass(a.element,b)},c),this.isShowing=!0,this},hide:function(a){var b=this.element;return a=h.valOrDefault(a,!0),b.style.top="",b.style.left="",a?(h.addClass(b,"hide"),h.removeClass(b,"invisible")):(h.removeClass(b,"hide"),h.addClass(b,"invisible")),h.removeClass(b,"animate fade-in-up fade-in-down fade-in-right fade-in-left"),this.isShowing=!1,this},_showButton:function(a,b,c){var d="hide";c&&(d="hide-all"),typeof b===o&&(b=!0),b?h.removeClass(a,d):h.addClass(a,d)},showPrevButton:function(a){this._showButton(this.prevBtnEl,a)},showNextButton:function(a){this._showButton(this.nextBtnEl,a)},showCloseButton:function(a){this._showButton(this.closeBtnEl,a)},destroy:function(){var a=this.element;a&&a.parentNode.removeChild(a),this.closeBtnEl&&h.removeEvtListener(this.closeBtnEl,"click",this._getCloseFn()),this.ctaBtnEl&&this.onCTA&&this._removeCTACallback()},updateButtons:function(){this.showPrevButton(this.opt.showPrevButton),this.showNextButton(this.opt.showNextButton),this.showCloseButton(this.opt.showCloseButton),this.prevBtnEl.innerHTML=h.getI18NString("prevBtn"),this.nextBtnEl.innerHTML=h.getI18NString("nextBtn"),this.doneBtnEl.innerHTML=h.getI18NString("doneBtn")},init:function(a){var b,c,d,e=s.createElement("div"),f=s.createElement("div"),g=s.createElement("div"),i=this,j=!1;this.element=e,this.containerEl=f,this.titleEl=s.createElement("h3"),this.contentEl=s.createElement("div"),h.addClass(this.titleEl,"hopscotch-title"),h.addClass(this.contentEl,"hopscotch-content"),d={showPrevButton:l.showPrevButton,showNextButton:l.showNextButton,bubbleWidth:l.bubbleWidth,bubblePadding:l.bubblePadding,arrowWidth:l.arrowWidth,showNumber:!0,isTourBubble:!0},a=typeof a===o?{}:a,h.extend(d,a),this.opt=d,e.className="hopscotch-bubble animated",f.className="hopscotch-bubble-container",d.isTourBubble||(e.className+=" hopscotch-callout"),d.isTourBubble?(this.numberEl=s.createElement("span"),this.numberEl.className="hopscotch-bubble-number",f.appendChild(this.numberEl)):h.addClass(e,"no-number"),g.appendChild(this.titleEl),g.appendChild(this.contentEl),g.className="hopscotch-bubble-content",f.appendChild(g),e.appendChild(f),this._initNavButtons(),this.initCloseButton(),this._initArrow(),b=function(){!j&&i.isShowing&&(j=!0,setTimeout(function(){i.setPosition(i.currStep),j=!1},100))},h.addEvtListener(window,"resize",b),this.hide(),h.documentIsReady()?s.body.appendChild(e):(s.addEventListener?(c=function(){s.removeEventListener("DOMContentLoaded",c),window.removeEventListener("load",c),s.body.appendChild(e)},s.addEventListener("DOMContentLoaded",c,!1)):(c=function(){"complete"===s.readyState&&(s.detachEvent("onreadystatechange",c),window.detachEvent("onload",c),s.body.appendChild(e))},s.attachEvent("onreadystatechange",c)),h.addEvtListener(window,"load",c))}},e=function(){var a={};this.createCallout=function(b){var c;if(!b.id)throw"Must specify a callout id.";if(a[b.id])throw"Callout by that id already exists. Please choose a unique id.";return b.showNextButton=b.showPrevButton=!1,b.isTourBubble=!1,c=new d(b),a[b.id]=c,b.target&&c.render(b,null,null,function(){c.show()}),c},this.getCallout=function(b){return a[b]},this.removeAllCallouts=function(){var b;for(b in a)a.hasOwnProperty(b)&&this.removeCallout(b)},this.removeCallout=function(b){var c=a[b];a[b]=null,c&&c.destroy()}},c=function(a){var b,c,f,k,m,n,r,t,u=this,v=function(a){return b||(b=new d(f)),a&&(h.extend(b.opt,{bubblePadding:w("bubblePadding"),bubbleWidth:w("bubbleWidth"),showNextButton:w("showNextButton"),showPrevButton:w("showPrevButton"),showCloseButton:w("showCloseButton"),arrowWidth:w("arrowWidth")}),b.updateButtons()),b},w=function(a){return"undefined"==typeof f?l[a]:h.valOrDefault(f[a],l[a])},x=function(){var a;return a=0>m||m>=k.steps.length?null:k.steps[m]},y=function(){u.nextStep()},z=function(a){var b,c,d,e,f,g,i=v(),j=i.element,k=h.getPixelValue(j.style.top),l=k+h.getPixelValue(j.offsetHeight),m=h.getStepTarget(x()),n=m.getBoundingClientRect(),p=n.top+h.getScrollTop(),r=n.bottom+h.getScrollTop(),t=p>k?k:p,u=l>r?l:r,y=h.getScrollTop(),z=y+h.getWindowHeight(),A=t-w("scrollTopMargin");t>=y&&(t<=y+w("scrollTopMargin")||z>=u)?a&&a():w("smoothScroll")?typeof YAHOO!==o&&typeof YAHOO.env!==o&&typeof YAHOO.env.ua!==o&&typeof YAHOO.util!==o&&typeof YAHOO.util.Scroll!==o?(b=YAHOO.env.ua.webkit?s.body:s.documentElement,d=YAHOO.util.Easing?YAHOO.util.Easing.easeOut:void 0,c=new YAHOO.util.Scroll(b,{scroll:{to:[0,A]}},w("scrollDuration")/1e3,d),c.onComplete.subscribe(a),c.animate()):q?jQuery("body, html").animate({scrollTop:A},w("scrollDuration"),a):(0>A&&(A=0),e=y>t?-1:1,f=Math.abs(y-A)/(w("scrollDuration")/10),g=function(){var b=h.getScrollTop(),c=b+e*f;return e>0&&c>=A||0>e&&A>=c?(c=A,a&&a(),window.scrollTo(0,c),void 0):(window.scrollTo(0,c),h.getScrollTop()===b?(a&&a(),void 0):(setTimeout(g,10),void 0))},g()):(window.scrollTo(0,A),a&&a())},A=function(a,b){var c,d,e;m+a>=0&&m+a<k.steps.length?(m+=a,d=x(),e=function(){c=h.getStepTarget(d),c?b(m):(h.invokeEventCallbacks("error"),A(a,b))},d.delay?setTimeout(e,d.delay):e()):b(-1)},B=function(a,b){var c,d,e,f,g=v(),i=this;if(g.hide()._removeCTACallback(),a=h.valOrDefault(a,!0),c=x(),d=c,e=b>0?d.multipage:m>0&&k.steps[m-1].multipage,f=function(c){var f;return-1===c?this.endTour(!0):(a&&(f=b>0?h.invokeEventCallbacks("next",d.onNext):h.invokeEventCallbacks("prev",d.onPrev)),e?(h.setState(w("cookieName"),k.id+":"+m,1),void 0):(f=h.valOrDefault(f,!0),f?this.showStep(c):this.endTour(!1),void 0))},!e&&w("skipIfNoElement"))A(b,function(a){f.call(i,a)});else if(m+b>=0&&m+b<k.steps.length){if(m+=b,c=x(),!h.getStepTarget(c)&&!e)return h.invokeEventCallbacks("error"),this.endTour(!0,!1);f.call(this,m)}return this},C=function(a){var b,c,d,e={};for(b in a)a.hasOwnProperty(b)&&"id"!==b&&"steps"!==b&&(e[b]=a[b]);return t.call(this,e,!0),c=h.getState(w("cookieName")),c&&(d=c.split(":"),n=d[0],r=d[1],r=parseInt(r,10)),this},D=function(a,b){var c,d;if(m=a||0,c=x(),d=h.getStepTarget(c))return b(m),void 0;if(!d){if(h.invokeEventCallbacks("error"),w("skipIfNoElement"))return A(1,b),void 0;m=-1,b(m)}},E=function(a){var b,c,d=k.steps[a],e=k.steps,f=e.length,g=k.id+":"+a,i=v(),j=h.getStepTarget(d);c=function(){i.show(),h.invokeEventCallbacks("show",d.onShow)},m=a,i.hide(!1),b=a===f-1,i.render(d,a,b,function(a){a?z(c):c(),d.nextOnTargetClick&&h.addEvtListener(j,"click",y)}),h.setState(w("cookieName"),g,1)},F=function(a){a&&this.configure(a)};this.getCalloutManager=function(){return typeof c===o&&(c=new e),c},this.startTour=function(a,b){var c,d=this;if(k||(k=a,C.call(this,a)),typeof b!==o){if(b>=k.steps.length)throw"Specified step number out of bounds.";m=b}return h.documentIsReady()?(m||k.id!==n||typeof r===o?m||(m=0):m=r,D(m,function(a){var b=-1!==a&&h.getStepTarget(k.steps[a]);return b?(h.invokeEventCallbacks("start"),c=v(),c.hide(!1),d.isActive=!0,h.getStepTarget(x())?d.showStep(a):(h.invokeEventCallbacks("error"),w("skipIfNoElement")&&d.nextStep(!1)),void 0):(d.endTour(!1,!1),void 0)}),this):(p=!0,this)},this.showStep=function(a){var b=k.steps[a];return b.delay?setTimeout(function(){E(a)},b.delay):E(a),this},this.prevStep=function(a){return B.call(this,a,-1),this},this.nextStep=function(a){var b=x(),c=h.getStepTarget(b);return b.nextOnTargetClick&&h.removeEvtListener(c,"click",y),B.call(this,a,1),this},this.endTour=function(a,b){var c=v();return a=h.valOrDefault(a,!0),b=h.valOrDefault(b,!0),m=0,r=void 0,c.hide(),a&&h.clearState(w("cookieName")),this.isActive&&(this.isActive=!1,k&&b&&h.invokeEventCallbacks("end")),this.removeCallbacks(null,!0),this.resetDefaultOptions(),k=null,this},this.getCurrTour=function(){return k},this.getCurrTarget=function(){return h.getStepTarget(x())},this.getCurrStepNum=function(){return m},this.listen=function(a,b,c){return a&&i[a].push({cb:b,fromTour:c}),this},this.unlisten=function(a,b){var c,d,e=i[a];for(c=0,d=e.length;d>c;++c)e[c]===b&&e.splice(c,1);return this},this.removeCallbacks=function(a,b){var c,d,e,f;for(f in i)if(!a||a===f)if(b)for(c=i[f],d=0,e=c.length;e>d;++d)c[d].fromTour&&(c.splice(d--,1),--e);else i[f]=[];return this},this.registerHelper=function(a,b){"string"==typeof a&&"function"==typeof b&&(j[a]=b)},this.unregisterHelper=function(a){j[a]=null},this.invokeHelper=function(a){var b,c,d=[];for(b=1,c=arguments.length;c>b;++b)d.push(arguments[b]);j[a]&&j[a].call(null,d)},this.setCookieName=function(a){return f.cookieName=a,this},this.resetDefaultOptions=function(){return f={},this},this.resetDefaultI18N=function(){return g={},this},this.getState=function(){return h.getState(w("cookieName"))},t=function(a,b){var c,d,e,i,j=["next","prev","start","end","show","error","close"];for(f||this.resetDefaultOptions(),h.extend(f,a),a&&h.extend(g,a.i18n),e=0,i=j.length;i>e;++e)d="on"+j[e].charAt(0).toUpperCase()+j[e].substring(1),a[d]&&this.listen(j[e],a[d],b);return c=v(!0),this},this.configure=function(a){return t.call(this,a,!1)},F.call(this,a)},n=new c,a[b]=n)}(window,"hopscotch");
$(document).ready(function(){
    //this just checkes if the error code 401 is returned then 
    //it logs out the user
    $(document).ajaxError(function(e, jqxhr, settings, exception){
        if(jqxhr.status==401){
            alert('You are now logged out. Please login again.');
            window.location="https://cuiet.codebrigade.in/loginManager/load";
        }
    });

    $.ajax({
        url: "https://cuiet.codebrigade.in/loginManager/checkInactive",
        type: "POST",
        success: function(msg){
          if(msg==0)
          {
            window.location="https://cuiet.codebrigade.in/loginManager/logout";
          }
        }
});
    
});
	 iFlag=0;

	$(document).click(function(event) {
	
	var a=$(event.target);
	
	// e.target is the element which has been clicked.
	
 	var lnk=a.attr("href");
	if(lnk!=null)
	{
	if(lnk.toString()=="#")
	{
	a.attr("href","#!");
	} 
	}
	});

/**
    *@Description:This function is used to ccheck whther a number is numeric or not
    *@Author: [Ankur Bansal]
    *@Created: [22-01-2012]
    *@Copyright: 2011-2012 Chalkpad Technologies Pvt. Ltd.
    */
function is_int(value){
  if((parseFloat(value) == parseInt(value)) && !isNaN(value)){
      return true;
  } else {
      return false;
  }
}



function clearForm(formId)
{
  document.forms[formId].reset();
}

 /**
    *@Description:This function is used to create a dropdown options from database to select values�
    *@Params:tableName(name of the table),column1(value of option),column2(display value of the option),selectedId(default value)
    *@Return html of the dropdown options
    *@Author: [Muskaan]
    *@Created: [ 27-01-2010]
    *@Copyright: 2010-2011 Chalkpad Technologies Pvt. Ltd.
    */
function dropDownOptions(tableName,column1,column2,selectedId,whereClause)
{ 
 var   optionArray;
/* if(showLoader==1)
	{
		showLoader();
	}*/
    $.ajax({
        url: "https://cuiet.codebrigade.in/miscLibrary/dropDownOptions",
        type: "POST",
        async:false,
        data: ({tableName:tableName,column1:column1,column2:column2,selectedId:selectedId,whereClause:whereClause}),
        success: function(msg){
   
		 if(document.getElementById('loaderDiv') && document.getElementById('loaderDiv').style.display!="none")
		 {
                hideLoader();
		 }
             optionArray= msg;
        }
});
return optionArray;
}


 /**
    *@Description:This function is used to create a dropdown options from database to select values along the the extra parameter on '0' value
    *@Params:tableName(name of the table),column1(value of option),column2(display value of the option),selectedId(default value),defaultValue (Default string want to display)
    *@Return html of the dropdown options
    *@Author: [Ankur Aggarwal]
    *@Created: [ 27-09-2011]
    *@Copyright: 2011-2012 Chalkpad Technologies Pvt. Ltd.
    */
function dropDownOptionsAdvanced(tableName,column1,column2,selectedId,whereClause,defaultValue)
{
 var   optionArray;
/* if(showLoader==1)
	{
		showLoader();
	}*/
    $.ajax({
        url: "https://cuiet.codebrigade.in/miscLibrary/dropDownOptions",
        type: "POST",
        async:false,
        data: ({tableName:tableName,column1:column1,column2:column2,selectedId:selectedId,whereClause:whereClause,defaultValue:defaultValue}),
        success: function(msg){
   
		 if(document.getElementById('loaderDiv') && document.getElementById('loaderDiv').style.display!="none")
		 {
                hideLoader();
		 }
             optionArray= msg;
        }
});
return optionArray;
}

function groupDropDownOptions(classId)
{
    var optionArray;
    $.ajax({
        url: "https://cuiet.codebrigade.in/miscLibrary/groupDropDownOptions",
        type: "POST",
        async:false,
        data: ({classId:classId}),
        success: function(msg){
            if(document.getElementById('loaderDiv') && document.getElementById('loaderDiv').style.display!="none")
            {
                hideLoader();
            }
             optionArray= msg;
        }
});
return optionArray;
}

/**
    *@Description:This function is used to select all the values in multiple dropdown menu
    *@Params:selectBox - Id of the selectBox , Select All : Values Will Be True Or False
    *@Author: [Ankur Aggarwal]
    *@Created: [ 03-11-2011]
    *@Copyright: 2011-2012 Chalkpad Technologies Pvt. Ltd.
    */
function selectAll(selectBox,selectAll) {
    // have we been passed an ID
    if (typeof selectBox == "string") {
        selectBox = document.getElementById(selectBox);
    }

    // is the select box a multiple select box?
    if (selectBox.type == "select-multiple") {
        for (var i = 0; i < selectBox.options.length; i++) {
            selectBox.options[i].selected = selectAll;
        }
    }
}



/**
    *@Description:This function is used to hide the Div
    *@Params:divId
    *@Author: [Muskaan]
    *@Created: [ 27-01-2010]
    *@Copyright: 2010-2011 Chalkpad Technologies Pvt. Ltd.
    */
function hideDiv(divId)
{

    document.getElementById(divId).style.display='none';
}
/**
    *@Description:This function is used to show the Div
    *@Params:divId
    *@Author: [Muskaan]
    *@Created: [ 27-01-2010]
    *@Copyright: 2010-2011 Chalkpad Technologies Pvt. Ltd.
    */
function showDiv(divId)
{
 // alert (divId) ;
    document.getElementById(divId).style.display='';
}
/**
    *@Description:This function is used to show the EditModal and Add Modal
    *@Params:divId
    *@Author: [Muskaan]
    *@Created: [ 27-01-2010]
    *@Copyright: 2010-2011 Chalkpad Technologies Pvt. Ltd.
    */
function showEditModal(divId,topMargin)
{
    $('#'+divId).modal({position:[topMargin]});
}
function showAddModal(divId,topMargin)
{
    $('#'+divId).modal({position:[topMargin]});
}
function showModal(divId,topMargin)
{
    $('#'+divId).modal({position:[topMargin]});
}


function showModalAdvance(divId,topMargin)
{
//$('#'+divId).modal({position:[topMargin]});

 $("#"+divId).modal({onClose: function (dialog) {
				$.modal.close(); 
				if(uploadCheck==1)
				{
				window.location.reload();
				}
}});

}
function hideModal(divId)
{
    $.modal.close();
  // document.getElementById(divId).style.display='none';
}
function showExcelModal()
{
    $('#excelUpload').modal({position:[100]});
    
    //var picker3 = new Pikaday({ field: document.getElementById('excelDate'), format: 'DD-MM-YYYY', yearRange: [1940,2020], showTime: false });
}
function showLoader()
{

    document.getElementById('loaderDiv').style.display='';
}
function showLoaderInsideDiv(divId)
{
	$('#'+divId).show();
	$('#'+divId).html("<div id='internalLoaderDiv' style='width:100%; text-align:center'><img src='https://cuiet.codebrigade.in/images/loader.gif' align='center'></div>")
}
function hideLoader()
{
    document.getElementById('loaderDiv').style.display='none';
}
function showSuccessAlert(txt)
{
	
   var temp;
     temp = "<tr><td colspan=2><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td align='left' height='33' class='gridPanelTitle' style='padding-left:10px'>&nbsp;<b>Success</b></td></tr></table></td></tr><tr><td id='error' width='70' valign='top' style='padding:10px 0px 0px 10px'><img src='https://cuiet.codebrigade.in/images/tickIcon.png' ></td><td valign='left' align='center'><div class='textVerdana11' style='padding:20px 0px 10px 10px; width:90%;'><strong>"+txt+"</strong></div></td></tr><tr><td style='text-align:right; height:25px; padding-bottom:15px; padding-right:30px;' colspan='2'><input type='button' class='submitBtn button_small'  style='height:25px;' name='submit' onclick='$.modal.close();' value='OK'  /> </td></tr>";
     showModal('alertModal',100);
      $('#alertModal #alertContent').html(temp);
      $('#alertModal #alertContent').css('display','');
}

function showLoaderAdvanced()
{
	
   var temp;
     temp = "<tr><td id='loaderAdvanced' valign='middle' align=center><img src='https://cuiet.codebrigade.in/images/loader.gif' ></td></tr>";
     showModal('alertModal',100);
      $('#alertModal #alertContent').html(temp);
      $('#alertModal #alertContent').css('display','');
}


function showErrorAlert(txt)
{
    
  var temp;
     temp = "<tr><td colspan=2><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td align='left' height='33' class='gridPanelTitle'>&nbsp;<b>Error</b></td></tr></table></td></tr><tr><td id='error' width='70' valign='top' style='padding:10px 0px 0px 10px'><img src='https://cuiet.codebrigade.in/images/error_64.png'></td><td align='left'><div class='textVerdana11' style='padding:20px 0px 10px 10px; width:90%;'><strong>"+txt+"</strong></div></td></tr><tr><td style='text-align:right; height:25px; padding-bottom:15px; padding-right:30px;' colspan='2'><input type='button' class='submitBtn'  style='height:25px;' name='submit' onclick='$.modal.close();' value='OK'  /> </td></tr>";
     showModal('alertModal',100);
     $('#alertModal #alertContent').html(temp);
      $('#alertModal #alertContent').css('display','');
     //document.getElementById('content').style.display='';
}



function changeSessionId()
{
    var sessionId = document.getElementById('sessionHeader').value;
   

       $.ajax({
            url: "https://cuiet.codebrigade.in/miscLibrary/changeSessionId",
            type: "POST",
           
            data: ({sessionId:sessionId}),
            success: function(msg){
            var strlocation=location.href;
            var lastChar=strlocation.slice(-2);
            if(lastChar=='#!')
            {
        	var loc=strlocation.substring(0, strlocation.length - 2);
        	if(msg!=""){
        		loc = msg;
        	}
            window.location.href=(loc);
            }
            else
            {
            if(msg!=""){
        		loc = msg;
        		window.location.href=(loc);
        	}else{
        		window.location.href=(location.href);
        	}
            }
               

                 }
       });


}

function getEmployeeCode(instituteId){
    var sessionId = document.getElementById('sessionHeader').value;
    var userId = document.getElementById('userId').value;
    $.ajax({
            url: "https://cuiet.codebrigade.in/loginManager/getEmployeeCode",
            type: "POST",
           
            data: ({instituteId:instituteId,userId:userId}),
            success: function(msg){
                 //alert(msg);
                if (msg==0) {
                    alert("You cannot switch to this institute.");
                }else{
                    fetchUrlAfterLogin(sessionId,instituteId,msg);
                }
                 }
       });
}

function fetchUrlAfterLogin(sessionId,instituteId,employeeCode){
    $.ajax({
            url: "https://cuiet.codebrigade.in/loginManager/fetchUrlAfterLogin",
            type: "POST",
           
            data: ({instituteId:instituteId}),
            success: function(msg){
                obj = $.parseJSON(msg);
                obj+='/loginManager/checkLoginWithoutPassword/'+employeeCode;
               var a = window.open(obj, "_blank");
                 }
       });
}

function changeSiblingId(siblingId)
{
    //var siblingId = document.getElementById('siblingId').value;
   
//alert(siblingId);
       $.ajax({
            url: "https://cuiet.codebrigade.in/loginManager/changeSiblingId",
            type: "POST",
           
            data: ({siblingId:siblingId}),
            success: function(msg){
                //alert(msg);
                if (msg==0) {
                    alert("You cannot switch to this profile as the selected student is no more a part of the school.");
                }else{
                    window.location.href=(location.href);
                }
                 }
       });


}
function changeInstituteId()
{
    var instituteId = document.getElementById('txtInstitute').value;
    $.ajax({
            url: "https://cuiet.codebrigade.in/miscLibrary/changeInstituteId",
            type: "POST",
            async:false,
            data: ({instituteId:instituteId}),
            success: function(msg){

                if(msg ==1)
                {
                    window.location.reload();
                }

                }
       });
}

function showEditor(id)
{
    var instance = CKEDITOR.instances[id];
    if(instance)
    {
        CKEDITOR.remove(instance);
    }
    CKEDITOR.replace(id); 
                                                     
}
/**  @Description:This function is used to create several ckEditors for activities
*@Author: [Kaushik Handoo]
*@Created: [ 11-11-2011]
*@Copyright: 2011-2012 Chalkpad Technologies Pvt. Ltd.
*/
function showEditorActivities(id)
{
    var instance = CKEDITOR.instances[id];
    if(instance)
    {
        CKEDITOR.removeAll(instance);
    }
    CKEDITOR.replaceAll(id); 
                                                     
}
/**  @Description:This function is used to remove html tags 
*@Params:input  : string form which we need to remove html tags
     allowed : tags which we need in the string
*@Author: [Manpreet Kaur]
*@Created: [ 27-09-2011]
*@Copyright: 2011-2012 Chalkpad Technologies Pvt. Ltd.
*/
  function stripTags (input, allowed) {

    allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join(''); // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
    var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
        commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
    return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {        return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
    });
  }
    
function showTip(id,direction)
{
	$(function() {
   	$('#'+id).tipsy({gravity: direction,live: true});
   	});
}     



//Code for google analytics
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-42678977-1', 'schoolpad.in');
  ga('send', 'pageview');




var ScrollSneak = function(prefix, wait) {
    // clean up arguments (allows prefix to be optional - a bit of overkill)
    if (typeof(wait) == 'undefined' && prefix === true) prefix = null, wait = true;
    prefix = (typeof(prefix) == 'string' ? prefix : window.location.host).split('_').join('');
    var pre_name;

    // scroll function, if window.name matches, then scroll to that position and clean up window.name
    this.scroll = function() {
        if (window.name.search('^'+prefix+'_(\\d+)_(\\d+)_') == 0) {
            var name = window.name.split('_');
            window.scrollTo(name[1], name[2]);
            window.name = name.slice(3).join('_');
        }
    }
    // if not wait, scroll immediately
    if (!wait) this.scroll();

    this.sneak = function() {
  // prevent multiple clicks from getting stored on window.name
  if (typeof(pre_name) == 'undefined') pre_name = window.name;

  // get the scroll positions
        var top = 0, left = 0;
        if (typeof(window.pageYOffset) == 'number') { // netscape
            top = window.pageYOffset, left = window.pageXOffset;
        } else if (document.body && (document.body.scrollLeft || document.body.scrollTop)) { // dom
            top = document.body.scrollTop, left = document.body.scrollLeft;
        } else if (document.documentElement && (document.documentElement.scrollLeft || document.documentElement.scrollTop)) { // ie6
            top = document.documentElement.scrollTop, left = document.documentElement.scrollLeft;
        }
  // store the scroll
        if (top || left) window.name = prefix + '_' + left + '_' + top + '_' + pre_name;
        return true;
    }
}

function mixpanelEvent(eventName)
{
	
	
	//mixpanel.track(eventName,{"InstituteName":"Chitkara University Institute of Engineering and Technology"});
}

// Amanpreet - Feb 2021 - Google sign out
  var auth2;
  function onLoad(){
    gapi.load('auth2', function() {
    auth2 = gapi.auth2.init({
    client_id: '907753617702-8t6t7dvgft5mhut0a3jaunmqg126p6k7.apps.googleusercontent.com',
    // Scopes to request in addition to 'profile' and 'email'
    //scope: 'additional_scope'
    });
    });
  }
  function googleSignOut(){
    auth2.signOut().then(function () {
    // console.log('User signed out.');
    auth2.disconnect();
    });
  }
  //  ends - Google sign out

</script>
<!-- Amanpreet - Feb 2021 - Google sign out -->
<script src="https://apis.google.com/js/platform.js?onload=onLoad" async defer></script>
<!-- ends - Google sign out -->    <script>
        function getRandomColor() {
            var colors = ['#8A8FEA', '#E87272', '#72C1E8', '#EA8AEA', '#8AE872'];
            return colors[Math.floor(Math.random() * colors.length)];
        }

        $.ajax({
            url: "https://cuiet.codebrigade.in/dashboardFeed/getQuickSearchValue",
            type: "POST",
            data: ({}),
            success: function(msg) {
                var obj = JSON.parse(msg);
                if (obj == 0 || obj == 1) {
                    const firstOption = document.querySelector('.search-select-option');
                    if (firstOption) {
                        const firstOptionText = firstOption.textContent;
                        var sBtnText = document.querySelector('.sBtn-text');
                        sBtnText.innerHTML = firstOptionText;
                    }
                } else {
                    var option = document.createElement('li');
                    option.className = 'option search-select-option';
                    option.setAttribute('onclick', 'selectOption(this)');
                    option.innerText = 'Employees';
                    selectOption(option);
                }
                selectMenu.classList.remove('active');
                var selecticonsvg = document.querySelector('.select-menu-icon-svg');
                selecticonsvg.classList.add('hide');
                var selectdownsvg = document.querySelector('.select-menu-icondown-svg');
                selectdownsvg.classList.remove('hide');
            }
        });

        function menuLookup1() {
            var DropDownValue = document.getElementsByClassName('sBtn-text')[0].innerText;
                            var msg = "";

            
            document.getElementById('menuLookupContainer1').style.display = "none";

            if (document.getElementById('ui-student-lookup').value.length > 1) {

                if ($.trim(msg) != "") {
                    var obj = $.parseJSON(JSON.stringify(msg));


                    var display = "<ul class='search-list-box'>";

                    var headerDisplayed = false;
                    var headerDisplayedEmployee = false;
                    if (obj) {
                        var len = obj.length;
                        var br = 0;
                        var isActiveStr = "";
                        var disabledLogin = "";
                        var searchValue = document.getElementById('ui-student-lookup').value.toLowerCase();

                        var name1Matches = [];
                        var fatherNameMatches = [];
                        var motherNameMatches = [];
                        var otherMatches = [];
                        var empName1Matches = [];
                        var empCodeMatches = [];
                        var roleMatches = [];
                        var departmentMatches = [];
                        var mobileMatches = [];
                        var emailMatches = [];
                        var empotherMatches = [];
                        var latestSessionId = -Infinity;
                        if (DropDownValue == 'Students') {
                            for (var arrayIndex = 0; arrayIndex < len; arrayIndex++) {
                                if (obj[arrayIndex].hasOwnProperty('studentId') && obj[arrayIndex].hasOwnProperty('sessionId')) {
                                    var sessionId = parseInt(obj[arrayIndex].sessionId, 10);
                                    if (sessionId > latestSessionId) {
                                        latestSessionId = sessionId;
                                    }
                                }
                            }

                            for (var arrayIndex = 0; arrayIndex < len; arrayIndex++) {
                                if (obj[arrayIndex].hasOwnProperty('studentId') && obj[arrayIndex].hasOwnProperty('className')) {
                                    var name1 = obj[arrayIndex].Name1.toLowerCase();
                                    var fatherName = obj[arrayIndex].fatherName.toLowerCase();
                                    var motherName = obj[arrayIndex].motherName.toLowerCase();
                                    var sessionId = parseInt(obj[arrayIndex].sessionId, 10);
                                    var isActive = obj[arrayIndex].isActive == 1;
                                    var withdrawn = obj[arrayIndex].withdrawn == 0;
                                    var isPriority = (sessionId === latestSessionId) && (isActive && withdrawn);


                                    if (name1.includes(searchValue)) {
                                        if (isPriority) {
                                            name1Matches.unshift(arrayIndex); // Add to the front for highest priority
                                        } else {
                                            name1Matches.push(arrayIndex); // Add to the back for normal priority
                                        }
                                    } else if (
                                        fatherName.includes(searchValue) ||
                                        motherName.includes(searchValue) ||
                                        obj[arrayIndex].regNo.toLowerCase().startsWith(searchValue) ||
                                        obj[arrayIndex].fieldValue.toLowerCase().startsWith(searchValue) ||
                                        obj[arrayIndex].rollNo.toLowerCase().startsWith(searchValue) ||
                                        obj[arrayIndex].className.toLowerCase().startsWith(searchValue) ||
                                        (searchValue.length > 4 && obj[arrayIndex].fatherMobileNo.toLowerCase().indexOf(searchValue) > -1) ||
                                        (searchValue.length > 4 && obj[arrayIndex].motherMobileNo.toLowerCase().indexOf(searchValue) > -1)
                                    ) {
                                        if (sessionId === latestSessionId) {
                                            if (fatherName.includes(searchValue)) {
                                                fatherNameMatches.unshift(arrayIndex);
                                            } else if (motherName.includes(searchValue)) {
                                                motherNameMatches.unshift(arrayIndex);
                                            } else {
                                                otherMatches.unshift(arrayIndex);
                                            }
                                        } else {
                                            if (fatherName.includes(searchValue)) {
                                                fatherNameMatches.push(arrayIndex);
                                            } else if (motherName.includes(searchValue)) {
                                                motherNameMatches.push(arrayIndex);
                                            } else {
                                                otherMatches.push(arrayIndex);
                                            }
                                        }
                                    }
                                }
                            }

                            // Concatenate the results in the desired order: Name1, fatherName, motherName, others
                            var sortedResults = name1Matches.concat(fatherNameMatches, motherNameMatches, otherMatches);
                        } else if (DropDownValue == 'Employees') {
                            for (var arrayIndex = 0; arrayIndex < len; arrayIndex++) {
                               
                                if (obj[arrayIndex].hasOwnProperty('employeeCode') && obj[arrayIndex].hasOwnProperty('employeeId')) {
                                    var name1 = obj[arrayIndex].Name1.toLowerCase();
                                    var employeeCode = obj[arrayIndex].employeeCode;
                                    var roleNameMatch = obj[arrayIndex].roleName;
                                    var departmentMatch = obj[arrayIndex].departmentName;
                                    var mobileMatch = obj[arrayIndex].mobileNumber;
                                    var emailMatch = obj[arrayIndex].emailAddress;
                                    var isPriority = obj[arrayIndex].isActive == 1;
                                    if (name1.includes(searchValue) || roleNameMatch.toLowerCase().includes(searchValue) || departmentMatch.toLowerCase().includes(searchValue)) {
                                        if (isPriority) {
                                            empName1Matches.unshift(arrayIndex); // Add to the front for highest priority
                                        } else {
                                            empName1Matches.push(arrayIndex); // Add to the back for normal priority
                                        }
                                    } else if (
                                        employeeCode.includes(searchValue) ||
                                        roleNameMatch.toLowerCase().startsWith(searchValue) ||
                                        departmentMatch.toLowerCase().startsWith(searchValue) ||
                                        (searchValue.length > 4 && mobileMatch.indexOf(searchValue) > -1) ||
                                        (searchValue.length > 4 && emailMatch.toLowerCase().indexOf(searchValue) > -1)
                                    ) {
                                        if (employeeCode.includes(searchValue)) {
                                            empCodeMatches.push(arrayIndex);
                                        } else if (roleNameMatch.includes(searchValue)) {
                                            roleMatches.push(arrayIndex);
                                        } else if (departmentMatch.includes(searchValue)) {
                                            departmentMatches.push(arrayIndex);
                                        } else if (mobileMatch.includes(searchValue)) {
                                            mobileMatches.push(arrayIndex);
                                        } else if (emailMatch.includes(searchValue)) {
                                            emailMatches.push(arrayIndex);
                                        } else {
                                            empotherMatches.push(arrayIndex);
                                        }
                                    }
                                }
                            }

                            // Concatenate the results in the desired order: Name1, fatherName, motherName, others
                            var empSortedResults = empName1Matches.concat(empCodeMatches, roleMatches, departmentMatches, mobileMatches, emailMatches, empotherMatches);
                        }
                        var placeholder = "";
                        if (DropDownValue == 'Students') {
                            placeholder = sortedResults.length;
                        } else {
                            placeholder = empSortedResults.length;
                        }
                      for (var i = placeholder - 1; i >= 0; i--) {
                            if (DropDownValue == 'Students') {
                                var arrayIndex = sortedResults[i];
                            } else {
                                var arrayIndex = empSortedResults[i];
                            }
                            // var customFiled = obj[arrayIndex].customFields;
                            // console.log(obj[arrayIndex].customFiled);
                            //    var keys = Object.keys(customFiled);
                            if (obj[arrayIndex].hasOwnProperty('studentId') && obj[arrayIndex].hasOwnProperty('className')) {
                                var customStr = "";

                                var disabledLogin = "";
                                                                    if (obj[arrayIndex].Name1.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 && DropDownValue == 'Students' ||

                                        document.getElementById('ui-student-lookup').value.length > 4 &&
                                        (
                                            obj[arrayIndex].fatherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].motherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].fatherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].motherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1
                                        )
                                        // obj[arrayIndex].fatherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        // obj[arrayIndex].motherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        // obj[arrayIndex].regNo.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                        // obj[arrayIndex].fieldValue.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                        // obj[arrayIndex].rollNo.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                        // obj[arrayIndex].className.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                        // (document.getElementById('ui-student-lookup').value.length > 4 && obj[arrayIndex].fatherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > -1) ||
                                        // (document.getElementById('ui-student-lookup').value.length > 4 && obj[arrayIndex].motherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > -1)
                                    )

                                     {
                                        // var parentStr = "<span class='stuSubDetails'>Father's Name: " + obj[arrayIndex].fatherName + "<br>Mother's Name: " + obj[arrayIndex].motherName + "</span>";
                                        //parentStr+="<span class='stuSubDetails'>";
                                        // parentStr+='<div style="background:url('+obj[arrayIndex].photo+');position:relative;float:right;top:-20px" class="stu-img-small"></div>';
                                        // parentStr+="</span>";
                                        parentStr = "<div>";
                                        if (obj[arrayIndex].fatherMobileNo != "") {
                                            parentStr += "<div>Father's Mobile: <strong>" + obj[arrayIndex].fatherMobileNo + "</strong></div>";
                                        } else {
                                            parentStr += "Father's Mobile: ---";
                                        }
                                        if (obj[arrayIndex].motherMobileNo != "") {
                                            parentStr += "<div>Mother's Mobile: <strong>" + obj[arrayIndex].motherMobileNo + "</strong></div>";
                                        } else {
                                            parentStr += "Mother's Mobile: --- ";
                                        }
                                        parentStr += "</div>";
                                        if (obj[arrayIndex].customField != "---") {
                                            //             for (var j = 0; j < keys.length; j++) {
                                            //                 var fieldName = keys[j];
                                            //                 var fieldValue = customFiled[fieldName];
                                            //          customStr += "<span class='stuSubDetails'>" + fieldName + " : " + fieldValue + "</span><br>";                                   
                                            //  }
                                            customStr += "<div class='stuSubDetails student_menuLookup_new custom-field-quick-search'>" + obj[arrayIndex].fieldName + " : <strong>" + obj[arrayIndex].fieldValue + "</strong></div><br>";
                                            //  customStr += "<span class='stuSubDetails'>"+obj[arrayIndex].customFiled+"</span><br>";                                   

                                        } else {
                                            customStr += "";
                                        }

                                        //parentStr+="<div class='stuSubDetails'>Father's Mobile: "+obj[arrayIndex].fatherMobileNo+"<br>Mother's Mobile: "+obj[arrayIndex].motherMobileNo+"</div>";
                                        var userCheck = obj[arrayIndex].sessionId; //alert(userCheck);
                                        $disableBit = 0;
                                        $isActiveBit = 0;
                                        if (obj[arrayIndex].userStatus) {
                                            if (obj[arrayIndex].isActive == 1 &&
                                                obj[arrayIndex].userStatus == 0) {
                                                $disableBit++;
                                                var disabledLogin = "<div class='stuSubDetails student_menuLookup_new'><span class='login-disabled-status'>Login Disabled</span></div>";
                                            }
                                        }
                                        var flaggedStatus = "";
                                        var searchRollNo = "";
                                        $showRollNo = 0;
                                        if (obj[arrayIndex].rollNo == "") {
                                            searchRollNo = "";
                                        } else {
                                            $showRollNo++;
                                            searchRollNo = "Roll No: <strong>" + obj[arrayIndex].rollNo + "</strong>";
                                        }
                                        if (obj[arrayIndex].flaggedStatusBit == 1) {
                                            var flaggedStatus = "<span>&nbsp;<img src='https://cuiet.codebrigade.in/css/images/red-flag.svg'></span>";
                                        }
                                        if (userCheck == 18) {

                                            if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawn == 0) {
                                                $isActiveBit++;
                                                var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-inactive-status'>Inactive</span></div>";
                                            } else if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawn == 1) {
                                                $isActiveBit++;
                                                var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-withdrawn-status'>Withdrawn (" + obj[arrayIndex].withdrawnName + ")</span></div>";
                                            } else {
                                                var isActiveStr = "";


                                            }
                                            // display += "<li class='notif_menulookup navigation_class'><a id='up_down_" + arrayIndex + "' class='student_up_down' style='padding:10px;' onclick='' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'><span id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup' style='font:bold 12px Tahoma'>" + obj[arrayIndex].firstName + "</span>" + flaggedStatus + " " + disabledLogin + " <div class='stuSubDetails'>" + obj[arrayIndex].regNo + " :: " + obj[arrayIndex].className + searchRollNo + "</div><div>" + parentStr + "</div><div>" + customStr + "</div><div class='stuSubDetai'>" + isActiveStr + "</div> </a>";

                                            /*
                                            lnk1 = "https://cuiet.codebrigade.in/dashboardFeed/printView/"+obj[arrayIndex].studentId+"/0";
                                            lnk2 = "https://cuiet.codebrigade.in/dashboardFeed/printView/"+obj[arrayIndex].studentId+"/1";
                                            display+="<div class='student_menuLookup' style='font:bold 12px Tahoma'>";
                                            display+="<a style='cursor:pointer;width:40%;float:left;' target='_blank' href='"+lnk1+"'>Admin Result</a>";
                                            display+="<a style='cursor:pointer;width:40%;float:right;' target='_blank' href='"+lnk2+"'>Publish Result</a>";
                                            display+="</div><div style='clear:both;'></div>";
                                            */
                                            // display += "</li>";

                                            if (DropDownValue == 'Students') {
                                                display += "<li class='notif_menulookup navigation_class student_menuLookup_new student-content-hover'>";
                                                display += "<a id='up_down_" + arrayIndex + "' class='student_up_down student-search-container default-fixed' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'>";
                                                if (!obj[arrayIndex].studentPhoto || obj[arrayIndex].studentPhoto.includes("student-profile.svg")) {
                                                    const backgroundColor = getRandomColor();
                                                    const firstName = obj[arrayIndex].firstName;
                                                    const lastName = obj[arrayIndex].firstName;
                                                    const firstLetter = firstName.charAt(0).toUpperCase();
                                                    const lastNameWords = lastName.split(' ');
                                                    if (lastName.split(' ').length > 1) {
                                                        const lastWord = lastNameWords[lastNameWords.length - 1];
                                                        var lastLetter = lastWord.charAt(0).toUpperCase();
                                                    } else {
                                                        var lastLetter = "";
                                                    }
                                                    display += `<div class='user-default-pic user-first-last-name ' style='margin:0px 22px 0px 20px; background-color: ${backgroundColor}; color: white;'>${firstLetter}${lastLetter}</div>`;

                                                } else {
                                                    display += "<div class='profile-pic student_menuLookup_new student-profile-image'>";
                                                    display += "<img src='" + obj[arrayIndex].studentPhoto + "' class='profile-tag-image'>";
                                                    display += "</div>";
                                                }
                                                display += "<div class='content student_menuLookup_new d-flex flex-column student-all-details' >";
                                                display += "<div class='stuSubDetails student_menuLookup_new student-detail-view-box'>";
                                                display += "<div class='new-name-student-employee-box'>";
                                                display += "<div id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup student_menuLookup_new student-name-tag '><div class='student-name-tag'>" + obj[arrayIndex].firstName + flaggedStatus + "</div></div>";
                                                if ($disableBit == 0) {
                                                    if (isActiveStr != "") {
                                                        display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                    }
                                                } else {
                                                    if ($isActiveBit != 0) {
                                                        display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                    } else {
                                                        display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                    }
                                                }
                                                display += "</div>";
                                                display += "</div>";
                                                display += "<div class='new-student-employee-box'>";
                                                display += "<div class='left-right-box-gap'>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div>" + "Roll. No" + ": <strong class='label-values'>" + obj[arrayIndex].regNo + "</strong></div>";
                                                display += "</div>";
                                                if ($showRollNo != 0) {
                                                    display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                    display += "<div class='stuSubDetails student_menuLookup_new'>" + searchRollNo + "</div>";
                                                    display += "</div>";
                                                }
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Class: <strong class='label-values'>" + obj[arrayIndex].className + "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += customStr;
                                                display += "</div>";
                                                display += "</div>";
                                                display += "<div class='left-right-box-gap'>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div> Father's Name:<strong class='label-values'>" + obj[arrayIndex].fatherName + "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Father's Mobile: <strong class='label-values'>" "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Mother's Name: <strong class='label-values'>" + obj[arrayIndex].motherName + "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Mother's Mobile: <strong class='label-values'>" + obj[arrayIndex].motherMobileNo + "</strong></div>";
                                                display += "</div>";
                                                display += "</div>";
                                                display += "</div>";
                                                display += "</div>";
                                                display += "</div>"
                                                display += "</a>";
                                                display += "</li>";
                                            }
                                            //display+="<li class='notif_menulookup navigation_class'><a id='up_down_"+arrayIndex+"' class='student_up_down' style='padding:10px;' onclick='mixpanel.track(\"Quick Student Search\",{\"InstituteName\":\"Chitkara University Institute of Engineering and Technology\"});' href='https://cuiet.codebrigade.in/studentInfo/display/"+obj[arrayIndex].studentId+"'><div id='student_menuLookup_"+arrayIndex+"' class='student_menuLookup' style='font:bold 12px Tahoma'>"+obj[arrayIndex].firstName+"</div><div class='stuSubDetails'>"+obj[arrayIndex].regNo+" :: "+obj[arrayIndex].className+"</div><div>"+parentStr+"</div> </a></li>";
                                        } else {

                                            if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawnName == '---') {
                                                $isActiveBit++;
                                                var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-inactive-status'>Inactive(" + obj[arrayIndex].sessionName + ")</span></div>";
                                            } else if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawn == 1) {
                                                $isActiveBit++;
                                                var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-withdrawn-status'>Withdrawn (" + obj[arrayIndex].withdrawnName + " : " + obj[arrayIndex].sessionName + ")</span></div>";
                                            } else if (obj[arrayIndex].isActive == 1) {
                                                $isActiveBit++;
                                                var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-active-status'>Active(" + obj[arrayIndex].sessionName + ")</span></div>";
                                            } else {
                                                var isActiveStr = "";
                                            }

                                            /*if (obj[arrayIndex].isActive==1) {
                                	var isActiveStr="<span style='background:#ff7a7a;color:#FFF;padding:2px 7px 3px 5px;border-radius:40px;margin-left:10px;font-size:11px;font-weight:600;'>Active("+obj[arrayIndex].sessionName+")</span>";	
                                    }
                                    if (obj[arrayIndex].isActive==0) {
                                	var isActiveStr="<span style='background:#ff7a7a;color:#FFF;padding:2px 7px 3px 5px;border-radius:40px;margin-left:10px;font-size:11px;font-weight:600;'>Inactive("+obj[arrayIndex].sessionName+")</span>";	
                                    }*/
                                            // display += "<li class='notif_menulookup navigation_class'><a id='up_down_" + arrayIndex + "' class='student_up_down' style='padding:10px;' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'><span id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup' style='font:bold 12px Tahoma'>" + obj[arrayIndex].firstName + "</span>" + flaggedStatus + "  " + disabledLogin + " <div class='stuSubDetails'>" + obj[arrayIndex].regNo + " :: " + obj[arrayIndex].className + searchRollNo + "</div><div>" + parentStr + "</div><div>" + customStr + "</div><div class='stuSubDetai'>" + isActiveStr + "</div></a>";
                                            /*
                                            lnk1 = "https://cuiet.codebrigade.in/dashboardFeed/printView/"+obj[arrayIndex].studentId+"/0";
                                            lnk2 = "https://cuiet.codebrigade.in/dashboardFeed/printView/"+obj[arrayIndex].studentId+"/1";
                                            display+="<div class='student_menuLookup' style='font:bold 12px Tahoma'>";
                                            display+="<a style='cursor:pointer;width:40%;float:left;' target='_blank' href='"+lnk1+"'>Admin Result</a>";
                                            display+="<a style='cursor:pointer;width:40%;float:right;' target='_blank' href='"+lnk2+"'>Publish Result</a>";
                                            display+="</div><div style='clear:both;'></div>";
                                            */
                                            // display += "</li>";
                                            if (DropDownValue == 'Students') {
                                                display += "<li class='notif_menulookup navigation_class student_menuLookup_new student-content-hover'>";
                                                display += "<a id='up_down_" + arrayIndex + "' class='student_up_down student-search-container default-fixed' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'>";
                                                if (!obj[arrayIndex].studentPhoto || obj[arrayIndex].studentPhoto.includes("student-profile.svg")) {
                                                    const backgroundColor = getRandomColor();
                                                    const firstName = obj[arrayIndex].firstName;
                                                    const lastName = obj[arrayIndex].firstName;
                                                    const firstLetter = firstName.charAt(0).toUpperCase();
                                                    const lastNameWords = lastName.split(' ');
                                                    if (lastName.split(' ').length > 1) {
                                                        const lastWord = lastNameWords[lastNameWords.length - 1];
                                                        var lastLetter = lastWord.charAt(0).toUpperCase();
                                                    } else {
                                                        var lastLetter = "";
                                                    }
                                                    display += `<div class='user-default-pic user-first-last-name ' style='margin:0px 22px 0px 20px; background-color: ${backgroundColor}; color: white;'>${firstLetter}${lastLetter}</div>`;

                                                } else {
                                                    display += "<div class='profile-pic student_menuLookup_new student-profile-image'>";
                                                    display += "<img src='" + obj[arrayIndex].studentPhoto + "' class='profile-tag-image'>";
                                                    display += "</div>";
                                                }
                                                display += "<div class='content student_menuLookup_new d-flex flex-column student-all-details' >";
                                                display += "<div class='stuSubDetails student_menuLookup_new student-detail-view-box'>";
                                                display += "<div class='new-name-student-employee-box'>";
                                                display += "<div id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup student_menuLookup_new student-name-tag '><div class='student-name-tag'>" + obj[arrayIndex].firstName + flaggedStatus + "</div></div>";
                                                if ($disableBit == 0) {
                                                    if (isActiveStr != "") {
                                                        display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                    }
                                                } else {
                                                    if ($isActiveBit != 0) {
                                                        display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                    } else {
                                                        display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                    }
                                                }
                                                display += "</div>";
                                                display += "</div>";
                                                display += "<div class='new-student-employee-box'>";
                                                display += "<div class='left-right-box-gap'>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div>" + "Roll. No" + ": <strong class='label-values'>" + obj[arrayIndex].regNo + "</strong></div>";
                                                display += "</div>";
                                                if ($showRollNo != 0) {
                                                    display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                    display += "<div class='stuSubDetails student_menuLookup_new'>" + searchRollNo + "</div>";
                                                    display += "</div>";
                                                }
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Class: <strong class='label-values'>" + obj[arrayIndex].className + "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += customStr;
                                                display += "</div>";
                                                display += "</div>";
                                                display += "<div class='left-right-box-gap'>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div> Father's Name:<strong class='label-values'>" + obj[arrayIndex].fatherName + "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Father's Mobile: <strong class='label-values'>" + obj[arrayIndex].fatherMobileNo + "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Mother's Name: <strong class='label-values'>" + obj[arrayIndex].motherName + "</strong></div>";
                                                display += "</div>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='student-content-width'>Mother's Mobile: <strong class='label-values'>" + obj[arrayIndex].motherMobileNo + "</strong></div>";
                                                display += "</div>";
                                                display += "</div>";
                                                display += "</div>";
                                                display += "</div>";
                                                display += "</div>"
                                                display += "</a>";
                                                display += "</li>";
                                            }
                                        }

                                        if (br == 14) {
                                            break;
                                        }
                                        br++;
                                    }
                            } else {
                                if (

                                    obj[arrayIndex].Name1.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                    (
                                        document.getElementById('ui-student-lookup').value.length > 2 &&
                                        (
                                            obj[arrayIndex].employeeName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].employeeCode.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].roleName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].departmentName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].mobileNumber.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                            obj[arrayIndex].emailAddress.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1
                                        )
                                    )
                                ) {
                                    if (obj[arrayIndex].roleName == "") {
                                        obj[arrayIndex].roleName = "---"
                                    }
                                    if (obj[arrayIndex].departmentName == "") {
                                        obj[arrayIndex].departmentName = "---"
                                    }
                                    if (obj[arrayIndex].mobileNumber == "") {
                                        obj[arrayIndex].mobileNumber = "---"
                                    }
                                    if (obj[arrayIndex].emailAddress == "") {
                                        obj[arrayIndex].emailAddress = "---"
                                    }
                                    var isActiveStr = "";
                                    if (obj[arrayIndex].isActive == 0) {
                                        var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-inactive-status'><strong>Inactive </strong></span></div>";
                                    } else if (obj[arrayIndex].isActive == 1) {
                                        var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-active-status'> <strong>Active </strong></span></div>";
                                    } else {
                                        var isActiveStr = "<div style= display:none;></div>";
                                    }
                                    

                                    if (DropDownValue == 'Employees') {
                                        display += "<li class='notif_menulookup navigation_class student_menuLookup_new student-content-hover'>";
                                        display += "<a id='up_down_" + arrayIndex + "' class='student_up_down student-search-container default-fixed' href='https://cuiet.codebrigade.in/staffInfo/display/0/0/0/" + obj[arrayIndex].employeeId + "'>";
                                        if (!obj[arrayIndex].employeePhoto || obj[arrayIndex].employeePhoto.includes("student-profile.svg")) {
                                            const backgroundColor = getRandomColor();
                                            const firstName = obj[arrayIndex].employeeName;
                                            const lastName = obj[arrayIndex].employeeName;
                                            const firstLetter = firstName.charAt(0).toUpperCase();
                                            const lastNameWords = lastName.split(' ');
                                            if (lastName.split(' ').length > 1) {
                                                const lastWord = lastNameWords[lastNameWords.length - 1];
                                                var lastLetter = lastWord.charAt(0).toUpperCase();
                                            } else {
                                                var lastLetter = "";
                                            }
                                            display += `<div class='user-default-pic user-first-last-name ' style='margin:0px 22px 0px 20px; background-color: ${backgroundColor}; color: white;'>${firstLetter}${lastLetter}</div>`;

                                        } else {
                                            display += "<div class='profile-pic student_menuLookup_new student-profile-image'>";
                                            display += "<img src='" + obj[arrayIndex].employeePhoto + "' class='profile-tag-image'>";
                                            display += "</div>";
                                        }
                                        display += "<div class='content student_menuLookup_new d-flex flex-column student-all-details' >";
                                        display += "<div class='stuSubDetails student_menuLookup_new student-detail-view-box'>";
                                        display += "<div class='new-name-student-employee-box'>";
                                        display += "<div id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup student_menuLookup_new student-name-tag '><div class='student-name-tag'>" + obj[arrayIndex].employeeName + "</div></div>" + isActiveStr;
                                        display += "</div>";
                                        display += "</div>";
                                        display += "<div class='new-student-employee-box'>";
                                        display += "<div class='left-right-box-gap'>";
                                        display += "<div class='stuSubDetails student_menuLookup_new'>";
                                        display += "<div class='student-content-width'>Employee Code: <strong class='label-values'>" + obj[arrayIndex].employeeCode + "</strong></div>";
                                        display += "</div>";
                                        display += "<div class='stuSubDetails student_menuLookup_new'>";
                                        display += "<div class='student-content-width'>Role: <strong class='label-values'>" + obj[arrayIndex].roleName + "</strong></div>";
                                        display += "</div>";
                                        display += "<div class='stuSubDetails student_menuLookup_new'>";
                                        display += "<div> Department: <strong class='label-values'>" + obj[arrayIndex].departmentName + "</strong></div>";
                                        display += "</div>";
                                        display += "</div>";
                                        display += "<div class='left-right-box-gap'>";
                                        display += "<div class='stuSubDetails student_menuLookup_new'>";
                                        display += "<div class='student-content-width'>Mobile No: <strong class='label-values'>" + obj[arrayIndex].mobileNumber + "</strong></div>";
                                        display += "</div>";
                                        display += "<div class='stuSubDetails student_menuLookup_new'>";
                                        display += "<div class='student-content-width'>Email: <strong class='label-values'>" + obj[arrayIndex].emailAddress + "</strong></div>";
                                        display += "</div>";
                                        display += "</div>";
                                        display += "</div>";
                                        display += "</div>";
                                        display += "</div>"
                                        display += "</a>";
                                        display += "</li>";

                                    }

                                    if (br == 14) {
                                        break;
                                    }
                                    br++;
                                }
                            }
                        }
                    }
                    display += "</ul>";

                    document.getElementById('menuLookupContainer1').style.display = "";

                    document.getElementById('menuLookupContainer1').style.display = "block";

                    document.getElementById('menuLookupContainer1').innerHTML = display;

                }

                $(".student_up_down").keydown(function(e) {

                    if (e.keyCode == 38) {
                        $(this).parent().prev().find(".student_up_down").focus();

                        var get_id = $(this).parent().prev().find(".student_up_down div").attr('id');
                        var insert_text = $("#" + get_id).html();

                        $("#ui-student-lookup").val(insert_text);

                        return false;
                    }

                    if (e.keyCode == 40) {
                        $(this).parent().next().find(".student_up_down").focus();

                        var get_id = $(this).parent().next().find(".student_up_down div").attr('id');
                        var insert_text = $("#" + get_id).html();
                        $("#ui-student-lookup").val(insert_text);

                        return false;
                    }

                    if (e.keyCode == 27) {
                        $('#menuLookupContainer1').slideUp(150);
                    }

                    if (e.keyCode == 8) {
                        $('#ui-student-lookup').focus();
                    }

                    if (e.keyCode == 13) {
                        $('#menuLookupContainer1').slideUp(150);
                    }


                });

                $(".student_up_down:last").keydown(function(e) {

                    if (e.keyCode == 40) {
                        $(".navigation_class:first a").focus();

                        var get_id = $(".navigation_class:first a div").attr('id');
                        var insert_text = $("#" + get_id).html();
                        $("#ui-student-lookup").val(insert_text);
                    }
                });

                $('.student_up_down:first').keydown(function(e) {
                    if (e.keyCode == 38) {
                        $('.student_up_down:first').parent().parent().parent().prev('#ui-student-lookup').focus();
                    }
                });

            }
        }


        
    </script>
<script>
    function getRandomColor() {
        var colors = ['#8A8FEA', '#E87272', '#72C1E8', '#EA8AEA', '#8AE872'];
        return colors[Math.floor(Math.random() * colors.length)];
    }

    $.ajax({
        url: "https://cuiet.codebrigade.in/dashboardFeed/getQuickSearchValue",
        type: "POST",
        data: ({}),
        success: function(msg) {
            var obj = JSON.parse(msg);
            if (obj == 0 || obj == 1) {
                const firstOption = document.querySelector('.search-select-option');
                if (firstOption) {
                    const firstOptionText = firstOption.textContent;
                    var sBtnText = document.querySelector('.sBtn-text');
                    sBtnText.innerHTML = firstOptionText;
                }
            } else {
                var option = document.createElement('li');
                option.className = 'option search-select-option';
                option.setAttribute('onclick', 'selectOption(this)');
                option.innerText = 'Employees';
                selectOption(option);
            }
            selectMenu.classList.remove('active');
            var selecticonsvg = document.querySelector('.select-menu-icon-svg');
            selecticonsvg.classList.add('hide');
            var selectdownsvg = document.querySelector('.select-menu-icondown-svg');
            selectdownsvg.classList.remove('hide');
        }
    });

    function menuLookup1() {
        //alert(1);
        var DropDownValue = document.getElementsByClassName('sBtn-text')[0].innerText;
        var client_id = "373";
        //alert(client_id);
                    var msg = "";

        
        document.getElementById('menuLookupContainer1').style.display = "none";

        if (document.getElementById('ui-student-lookup').value.length > 1) {

            if ($.trim(msg) != "") {
                var obj = $.parseJSON(JSON.stringify(msg));



                var display = "<ul style='list-style:none;padding:0;margin:0;'>";
                var headerDisplayed = false;
                var headerDisplayedEmployee = false;
                if (obj) {
                    var len = obj.length;
                    var br = 0;
                    var isActiveStr = "";
                    var disabledLogin = "";
                    var searchValue = document.getElementById('ui-student-lookup').value.toLowerCase();

                    var name1Matches = [];
                    var fatherNameMatches = [];
                    var motherNameMatches = [];
                    var otherMatches = [];
                    var empName1Matches = [];
                    var empCodeMatches = [];
                    var roleMatches = [];
                    var departmentMatches = [];
                    var mobileMatches = [];
                    var emailMatches = [];
                    var empotherMatches = [];
                    var latestSessionId = -Infinity;
                    if (DropDownValue == 'Students') {
                        for (var arrayIndex = 0; arrayIndex < len; arrayIndex++) {
                            if (obj[arrayIndex].hasOwnProperty('studentId') && obj[arrayIndex].hasOwnProperty('sessionId')) {
                                var sessionId = parseInt(obj[arrayIndex].sessionId, 10);
                                if (sessionId > latestSessionId) {
                                    latestSessionId = sessionId;
                                }
                            }
                        }
                        for (var arrayIndex = 0; arrayIndex < len; arrayIndex++) {
                            if (obj[arrayIndex].hasOwnProperty('studentId') && obj[arrayIndex].hasOwnProperty('className')) {
                                var name1 = obj[arrayIndex].Name1.toLowerCase();
                                var fatherName = obj[arrayIndex].fatherName.toLowerCase();
                                var motherName = obj[arrayIndex].motherName.toLowerCase();
                                var sessionId = parseInt(obj[arrayIndex].sessionId, 10);
                                var isActive = obj[arrayIndex].isActive == 1;
                                var withdrawn = obj[arrayIndex].withdrawn == 0;
                                var isPriority = (sessionId === latestSessionId) && (isActive && withdrawn);
                                if (name1.includes(searchValue)) {
                                    if (isPriority) {
                                        name1Matches.unshift(arrayIndex); // Add to the front for highest priority
                                    } else {
                                        name1Matches.push(arrayIndex); // Add to the back for normal priority
                                    }
                                } else if (
                                    fatherName.includes(searchValue) ||
                                    motherName.includes(searchValue) ||
                                    obj[arrayIndex].regNo.toLowerCase().startsWith(searchValue) ||
                                    obj[arrayIndex].fieldValue.toLowerCase().startsWith(searchValue) ||
                                    obj[arrayIndex].rollNo.toLowerCase().startsWith(searchValue) ||
                                    obj[arrayIndex].className.toLowerCase().startsWith(searchValue) ||
                                    (searchValue.length > 4 && obj[arrayIndex].fatherMobileNo.toLowerCase().indexOf(searchValue) > -1) ||
                                    (searchValue.length > 4 && obj[arrayIndex].motherMobileNo.toLowerCase().indexOf(searchValue) > -1)
                                ) {
                                    if (sessionId === latestSessionId) {
                                        if (fatherName.includes(searchValue)) {
                                            fatherNameMatches.unshift(arrayIndex);
                                        } else if (motherName.includes(searchValue)) {
                                            motherNameMatches.unshift(arrayIndex);
                                        } else {
                                            otherMatches.unshift(arrayIndex);
                                        }
                                    } else {
                                        if (fatherName.includes(searchValue)) {
                                            fatherNameMatches.push(arrayIndex);
                                        } else if (motherName.includes(searchValue)) {
                                            motherNameMatches.push(arrayIndex);
                                        } else {
                                            otherMatches.push(arrayIndex);
                                        }
                                    }
                                }
                            }
                        }

                        // Concatenate the results in the desired order: Name1, fatherName, motherName, others
                        var sortedResults = name1Matches.concat(fatherNameMatches, motherNameMatches, otherMatches);
                    } else if (DropDownValue == 'Employees') {
                        for (var arrayIndex = 0; arrayIndex < len; arrayIndex++) {
                            if (obj[arrayIndex].hasOwnProperty('employeeCode') && obj[arrayIndex].hasOwnProperty('employeeId')) {
                                var name1 = obj[arrayIndex].Name1.toLowerCase();
                                var employeeCode = obj[arrayIndex].employeeCode;
                                var roleNameMatch = obj[arrayIndex].roleName;
                                var departmentMatch = obj[arrayIndex].departmentName;
                                var mobileMatch = obj[arrayIndex].mobileNumber;
                                var emailMatch = obj[arrayIndex].emailAddress;
                                var isPriority = obj[arrayIndex].isActive == 1;
                                if (name1.includes(searchValue) || roleNameMatch.toLowerCase().includes(searchValue) || departmentMatch.toLowerCase().includes(searchValue)) {
                                    if (isPriority) {
                                        empName1Matches.unshift(arrayIndex); // Add to the front for highest priority
                                    } else {
                                        empName1Matches.push(arrayIndex); // Add to the back for normal priority
                                    }
                                } else if (
                                    employeeCode.includes(searchValue) ||
                                    roleNameMatch.toLowerCase().startsWith(searchValue) ||
                                    departmentMatch.toLowerCase().startsWith(searchValue) ||
                                    (searchValue.length > 4 && mobileMatch.indexOf(searchValue) > -1) ||
                                    (searchValue.length > 4 && emailMatch.toLowerCase().indexOf(searchValue) > -1)
                                ) {
                                    if (employeeCode.includes(searchValue)) {
                                        empCodeMatches.push(arrayIndex);
                                    } else if (roleNameMatch.includes(searchValue)) {
                                        roleMatches.push(arrayIndex);
                                    } else if (departmentMatch.includes(searchValue)) {
                                        departmentMatches.push(arrayIndex);
                                    } else if (mobileMatch.includes(searchValue)) {
                                        mobileMatches.push(arrayIndex);
                                    } else if (emailMatch.includes(searchValue)) {
                                        emailMatches.push(arrayIndex);
                                    } else {
                                        empotherMatches.push(arrayIndex);
                                    }
                                }
                            }
                        }

                        // Concatenate the results in the desired order: Name1, fatherName, motherName, others
                        var empSortedResults = empName1Matches.concat(empCodeMatches, roleMatches, departmentMatches, mobileMatches, emailMatches, empotherMatches);
                    }
                    var placeholder = "";
                    if (DropDownValue == 'Students') {
                        placeholder = sortedResults.length;
                    } else {
                        placeholder = empSortedResults.length;
                    }
                    for (var i = placeholder - 1; i >= 0; i--) {
                        if (DropDownValue == 'Students') {
                            var arrayIndex = sortedResults[i];
                        } else {
                            var arrayIndex = empSortedResults[i];
                        }
                        if (obj[arrayIndex].hasOwnProperty('studentId') && obj[arrayIndex].hasOwnProperty('className')) {

                            // Get the student information based on the arrayIndex
                            // var studentInfo = obj[arrayIndex];
                            var customStr = "";
                            var disabledLogin = "";
                                                            if (obj[arrayIndex].Name1.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 && DropDownValue == 'Students'

                                    ||
                                    document.getElementById('ui-student-lookup').value.length > 4 &&
                                    (
                                        obj[arrayIndex].fatherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].motherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].fatherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].motherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1
                                    )
                                    // obj[arrayIndex].regNo.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                    // obj[arrayIndex].rollNo.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                    // obj[arrayIndex].fieldValue.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                    // obj[arrayIndex].className.toLowerCase().startsWith(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > 0 ||
                                    // obj[arrayIndex].fatherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                    // obj[arrayIndex].motherName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                    // (document.getElementById('ui-student-lookup').value.length > 4 && obj[arrayIndex].fatherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > -1) ||
                                    // (document.getElementById('ui-student-lookup').value.length > 4 && obj[arrayIndex].motherMobileNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase(), 0) > -1)
                                )

                                                                /*|| obj[arrayIndex].regNo.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase())>-1*/

                                {
                                    // var parentStr = "<span class='stuSubDetails'>Father's Name: " + obj[arrayIndex].fatherName + "<br>Mother's Name: " + obj[arrayIndex].motherName + "</span>";
                                    //parentStr+="<span class='stuSubDetails'>";
                                    // parentStr+='<div style="background:url('+obj[arrayIndex].photo+');position:relative;float:right;top:-20px" class="stu-img-small"></div>';
                                    //parentStr+="</span>";
                                    parentStr = "<div>";
                                    if (obj[arrayIndex].fatherMobileNo != "") {
                                        parentStr += "<div>Father's Mobile: <strong>" + obj[arrayIndex].fatherMobileNo + "</strong></div>";
                                    } else {
                                        parentStr += "Father's Mobile: ---";
                                    }
                                    if (obj[arrayIndex].motherMobileNo != "") {
                                        parentStr += "<div>Mother's Mobile: <strong>" + obj[arrayIndex].motherMobileNo + "</strong></div>";
                                    } else {
                                        parentStr += "Mother's Mobile: --- ";
                                    }
                                    parentStr += "</div>";
                                    if (obj[arrayIndex].customField != "---") {
                                        //             for (var j = 0; j < keys.length; j++) {
                                        //                 var fieldName = keys[j];
                                        //                 var fieldValue = customFiled[fieldName];
                                        //          customStr += "<span class='stuSubDetails'>" + fieldName + " : " + fieldValue + "</span><br>";                                   
                                        //  }
                                        customStr += "<div class='stuSubDetails student_menuLookup_new custom-field-quick-search'>" + obj[arrayIndex].fieldName + " : <strong>" + obj[arrayIndex].fieldValue + "</strong></div><br>";
                                        //  customStr += "<span class='stuSubDetails'>"+obj[arrayIndex].customFiled+"</span><br>";                                   

                                    } else {
                                        customStr += "";
                                    }
                                    var userCheck = obj[arrayIndex].sessionId; //alert(userCheck);
                                    $disableBit = 0;
                                    $isActiveBit = 0;
                                    if (obj[arrayIndex].userStatus) {
                                        if (obj[arrayIndex].isActive == 1 &&
                                            obj[arrayIndex].userStatus == 0) {
                                            $disableBit++;
                                            var disabledLogin = "<div class='stuSubDetails student_menuLookup_new'><span class='login-disabled-status'>Login Disabled</span></div>";
                                        }
                                    }
                                    var flaggedStatus = "";
                                    var searchRollNo = "";
                                    $showRollNo = 0;
                                    if (obj[arrayIndex].rollNo == "") {
                                        searchRollNo = "";
                                    } else {
                                        $showRollNo++;
                                        searchRollNo = "Roll No: <strong>" + obj[arrayIndex].rollNo + "</strong>";
                                    }
                                    if (obj[arrayIndex].flaggedStatusBit == 1) {
                                        var flaggedStatus = "<span>&nbsp;<img src='https://cuiet.codebrigade.in/css/images/red-flag.svg'></span>";
                                    }
                                    if (userCheck == 18) { //alert(obj[arrayIndex].isActive);
                                        if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawn == 0) {
                                            $isActiveBit++;
                                            var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-inactive-status'>Inactive</span></div>";
                                        } else if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawn == 1) {
                                            $isActiveBit++;
                                            var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-withdrawn-status'>Withdrawn (" + obj[arrayIndex].withdrawnName + ")</span></div>";
                                        } else {
                                            var isActiveStr = "";


                                        }
                                        // display += "<li class='notif_menulookup navigation_class'><a id='up_down_" + arrayIndex + "' class='student_up_down' style='padding:10px;' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'><span id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup' style='font:bold 12px Tahoma'>" + obj[arrayIndex].firstName + "</span>" + flaggedStatus + "" + disabledLogin + " <div class='stuSubDetails'>" + obj[arrayIndex].regNo + " :: " + obj[arrayIndex].className + searchRollNo + "</div><div>" + parentStr + "</div><div>" + customStr + "</div><div class='stuSubDetai'>" + isActiveStr + "</div> </a></li>";


                                        if (DropDownValue == 'Students') {
                                            display += "<li class='notif_menulookup navigation_class student_menuLookup_new student-content-hover'>";
                                            display += "<a id='up_down_" + arrayIndex + "' class='student_up_down student-search-container default-fixed' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'>";
                                            if (!obj[arrayIndex].studentPhoto || obj[arrayIndex].studentPhoto.includes("student-profile.svg")) {
                                                const backgroundColor = getRandomColor();
                                                const firstName = obj[arrayIndex].firstName;
                                                const lastName = obj[arrayIndex].firstName;
                                                const firstLetter = firstName.charAt(0).toUpperCase();
                                                const lastNameWords = lastName.split(' ');
                                                if (lastName.split(' ').length > 1) {
                                                    const lastWord = lastNameWords[lastNameWords.length - 1];
                                                    var lastLetter = lastWord.charAt(0).toUpperCase();
                                                } else {
                                                    var lastLetter = "";
                                                }
                                                display += `<div class='user-default-pic user-first-last-name ' style='margin:0px 22px 0px 20px; background-color: ${backgroundColor}; color: white;'>${firstLetter}${lastLetter}</div>`;

                                            } else {
                                                display += "<div class='profile-pic student_menuLookup_new student-profile-image'>";
                                                display += "<img src='" + obj[arrayIndex].studentPhoto + "' class='profile-tag-image'>";
                                                display += "</div>";
                                            }
                                            display += "<div class='content student_menuLookup_new d-flex flex-column student-all-details' >";
                                            display += "<div class='stuSubDetails student_menuLookup_new student-detail-view-box'>";
                                            display += "<div class='new-name-student-employee-box'>";
                                            display += "<div id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup student_menuLookup_new student-name-tag '><div class='student-name-tag'>" + obj[arrayIndex].firstName + flaggedStatus + "</div></div>";
                                            if ($disableBit == 0) {
                                                if (isActiveStr != "") {
                                                    display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                }
                                            } else {
                                                if ($isActiveBit != 0) {
                                                    display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                } else {
                                                    display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                }
                                            }
                                            display += "</div>";
                                            display += "</div>";
                                            display += "<div class='new-student-employee-box'>";
                                            display += "<div class='left-right-box-gap'>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div>" + "Roll. No" + ": <strong class='label-values'>" + obj[arrayIndex].regNo + "</strong></div>";
                                            display += "</div>";
                                            if ($showRollNo != 0) {
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>" + searchRollNo + "</div>";
                                                display += "</div>";
                                            }
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Class: <strong class='label-values'>" + obj[arrayIndex].className + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += customStr;
                                            display += "</div>";
                                            display += "</div>";
                                            display += "<div class='left-right-box-gap'>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div> Father's Name:<strong class='label-values'>" + obj[arrayIndex].fatherName + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Father's Mobile: <strong class='label-values'>" + obj[arrayIndex].fatherMobileNo + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Mother's Name: <strong class='label-values'>" + obj[arrayIndex].motherName + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Mother's Mobile: <strong class='label-values'>" + obj[arrayIndex].motherMobileNo + "</strong></div>";
                                            display += "</div>";
                                            display += "</div>";
                                            display += "</div>";
                                            display += "</div>";
                                            display += "</div>"
                                            display += "</a>";
                                            display += "</li>";

                                        }

                                    } else {

                                        if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawnName == '---') {
                                            $isActiveBit++;
                                            var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-inactive-status'>Inactive(" + obj[arrayIndex].sessionName + ")</span></div>";
                                        } else if (obj[arrayIndex].isActive == 0 && obj[arrayIndex].withdrawn == 1) {
                                            $isActiveBit++;
                                            var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-withdrawn-status'>Withdrawn ( " + obj[arrayIndex].withdrawnName + " : " + obj[arrayIndex].sessionName + " )</span></div>";
                                        } else if (obj[arrayIndex].isActive == 1) {
                                            $isActiveBit++;
                                            var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-active-status'>Active(" + obj[arrayIndex].sessionName + ")</span></div>";
                                        } else {
                                            var isActiveStr = "";
                                        }

                                        /*      if (obj[arrayIndex].isActive==1) {
                                          	var isActiveStr="<span style='background:#ff7a7a;color:#FFF;padding:2px 7px 3px 5px;border-radius:40px;margin-left:10px;font-size:11px;font-weight:600;'>Active("+obj[arrayIndex].sessionName+")</span>";	
                                              }
                                              if (obj[arrayIndex].isActive==0) {
                                          	var isActiveStr="<span style='background:#ff7a7a;color:#FFF;padding:2px 7px 3px 5px;border-radius:40px;margin-left:10px;font-size:11px;font-weight:600;'>Inactive("+obj[arrayIndex].sessionName+")</span>";	
                                              }*/
                                        // display += "<li class='notif_menulookup navigation_class'><a id='up_down_" + arrayIndex + "' class='student_up_down' style='padding:10px;' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'><span id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup' style='font:bold 12px Tahoma'>" + obj[arrayIndex].firstName + "</span> " + disabledLogin + "</div>" + " <div class='stuSubDetails'>" + obj[arrayIndex].regNo + " :: " + obj[arrayIndex].className + searchRollNo + "</div><div>" + parentStr + "</div><div>" + customStr + "</div><div class='stuSubDetails'>" + isActiveStr + "</div> </a></li>";

                                        if (DropDownValue == 'Students') {
                                            display += "<li class='notif_menulookup navigation_class student_menuLookup_new student-content-hover'>";
                                            display += "<a id='up_down_" + arrayIndex + "' class='student_up_down student-search-container default-fixed' href='https://cuiet.codebrigade.in/studentInfo/display/" + obj[arrayIndex].studentId + "'>";
                                            if (!obj[arrayIndex].studentPhoto || obj[arrayIndex].studentPhoto.includes("student-profile.svg")) {
                                                const backgroundColor = getRandomColor();
                                                const firstName = obj[arrayIndex].firstName;
                                                const lastName = obj[arrayIndex].firstName;
                                                const firstLetter = firstName.charAt(0).toUpperCase();
                                                const lastNameWords = lastName.split(' ');
                                                if (lastName.split(' ').length > 1) {
                                                    const lastWord = lastNameWords[lastNameWords.length - 1];
                                                    var lastLetter = lastWord.charAt(0).toUpperCase();
                                                } else {
                                                    var lastLetter = "";
                                                }
                                                display += `<div class='user-default-pic user-first-last-name ' style='margin:0px 22px 0px 20px; background-color: ${backgroundColor}; color: white;'>${firstLetter}${lastLetter}</div>`;

                                            } else {
                                                display += "<div class='profile-pic student_menuLookup_new student-profile-image'>";
                                                display += "<img src='" + obj[arrayIndex].studentPhoto + "' class='profile-tag-image'>";
                                                display += "</div>";
                                            }
                                            display += "<div class='content student_menuLookup_new d-flex flex-column student-all-details' >";
                                            display += "<div class='stuSubDetails student_menuLookup_new student-detail-view-box'>";
                                            display += "<div class='new-name-student-employee-box'>";
                                            display += "<div id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup student_menuLookup_new student-name-tag '><div class='student-name-tag'>" + obj[arrayIndex].firstName + flaggedStatus + "</div></div>";
                                            if ($disableBit == 0) {
                                                if (isActiveStr != "") {
                                                    display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                }
                                            } else {
                                                if ($isActiveBit != 0) {
                                                    display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                } else {
                                                    display += "<div class='stuSubDetails student_menuLookup_new status-div-gap'>" + isActiveStr + disabledLogin + "</div>";
                                                }
                                            }
                                            display += "</div>";
                                            display += "</div>";
                                            display += "<div class='new-student-employee-box'>";
                                            display += "<div class='left-right-box-gap'>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div>" + "Roll. No" + ": <strong class='label-values'>" + obj[arrayIndex].regNo + "</strong></div>";
                                            display += "</div>";
                                            if ($showRollNo != 0) {
                                                display += "<div class='stuSubDetails student_menuLookup_new'>";
                                                display += "<div class='stuSubDetails student_menuLookup_new'>" + searchRollNo + "</div>";
                                                display += "</div>";
                                            }
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Class: <strong class='label-values'>" + obj[arrayIndex].className + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += customStr;
                                            display += "</div>";
                                            display += "</div>";
                                            display += "<div class='left-right-box-gap'>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div> Father's Name:<strong class='label-values'>" + obj[arrayIndex].fatherName + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Father's Mobile: <strong class='label-values'>" + obj[arrayIndex].fatherMobileNo + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Mother's Name: <strong class='label-values'>" + obj[arrayIndex].motherName + "</strong></div>";
                                            display += "</div>";
                                            display += "<div class='stuSubDetails student_menuLookup_new'>";
                                            display += "<div class='student-content-width'>Mother's Mobile: <strong class='label-values'>" + obj[arrayIndex].motherMobileNo + "</strong></div>";
                                            display += "</div>";
                                            display += "</div>";
                                            display += "</div>";
                                            display += "</div>";
                                            display += "</div>"
                                            display += "</a>";
                                            display += "</li>";

                                        }
                                    }

                                    if (br == 14) {
                                        break;
                                    }
                                    br++;
                                }

                        } else {
                            if (

                                obj[arrayIndex].Name1.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                (
                                    document.getElementById('ui-student-lookup').value.length > 2 &&
                                    (
                                        obj[arrayIndex].employeeName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].employeeCode.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].roleName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].departmentName.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].mobileNumber.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1 ||
                                        obj[arrayIndex].emailAddress.toLowerCase().indexOf(document.getElementById('ui-student-lookup').value.toLowerCase()) > -1
                                    )
                                )
                            ) {
                                if (obj[arrayIndex].roleName == "") {
                                    obj[arrayIndex].roleName = "---"
                                }
                                if (obj[arrayIndex].departmentName == "") {
                                    obj[arrayIndex].departmentName = "---"
                                }
                                if (obj[arrayIndex].mobileNumber == "") {
                                    obj[arrayIndex].mobileNumber = "---"
                                }
                                if (obj[arrayIndex].emailAddress == "") {
                                    obj[arrayIndex].emailAddress = "---"
                                }
                                var isActiveStr = "";
                                if (obj[arrayIndex].isActive == 0) {
                                    var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-inactive-status''> <strong>Inactive </strong></span></div>";
                                } else if (obj[arrayIndex].isActive == 1) {
                                    var isActiveStr = "<div class='stuSubDetails student_menuLookup_new'><span class='student-active-status'> <strong>Active </strong></span></div>";
                                } else {
                                    var isActiveStr = "<div style= display:none;></div>";
                                }
                                                                if (DropDownValue == 'Employees') {
                                    display += "<li class='notif_menulookup navigation_class student_menuLookup_new student-content-hover'>";
                                    display += "<a id='up_down_" + arrayIndex + "' class='student_up_down student-search-container default-fixed' href='https://cuiet.codebrigade.in/staffInfo/display/0/0/0/" + obj[arrayIndex].employeeId + "'>";
                                    if (!obj[arrayIndex].employeePhoto || obj[arrayIndex].employeePhoto.includes("student-profile.svg")) {
                                        const backgroundColor = getRandomColor();
                                        const firstName = obj[arrayIndex].employeeName;
                                        const lastName = obj[arrayIndex].employeeName;
                                        const firstLetter = firstName.charAt(0).toUpperCase();
                                        const lastNameWords = lastName.split(' ');
                                        if (lastName.split(' ').length > 1) {
                                            const lastWord = lastNameWords[lastNameWords.length - 1];
                                            var lastLetter = lastWord.charAt(0).toUpperCase();
                                        } else {
                                            var lastLetter = "";
                                        }
                                        display += `<div class='user-default-pic user-first-last-name ' style='margin:0px 22px 0px 20px; background-color: ${backgroundColor}; color: white;'>${firstLetter}${lastLetter}</div>`;

                                    } else {
                                        display += "<div class='profile-pic student_menuLookup_new student-profile-image'>";
                                        display += "<img src='" + obj[arrayIndex].employeePhoto + "' class='profile-tag-image'>";
                                        display += "</div>";
                                    }
                                    display += "<div class='content student_menuLookup_new d-flex flex-column student-all-details' >";
                                    display += "<div class='stuSubDetails student_menuLookup_new student-detail-view-box'>";
                                    display += "<div class='new-name-student-employee-box'>";
                                    display += "<div id='student_menuLookup_" + arrayIndex + "' class='student_menuLookup student_menuLookup_new student-name-tag '><div class='student-name-tag'>" + obj[arrayIndex].employeeName + "</div></div>" + isActiveStr;
                                    display += "</div>";
                                    display += "</div>";
                                    display += "<div class='new-student-employee-box'>";
                                    display += "<div class='left-right-box-gap'>";
                                    display += "<div class='stuSubDetails student_menuLookup_new'>";
                                    display += "<div class='student-content-width'>Employee Code: <strong class='label-values'>" + obj[arrayIndex].employeeCode + "</strong></div>";
                                    display += "</div>";
                                    display += "<div class='stuSubDetails student_menuLookup_new'>";
                                    display += "<div class='student-content-width'>Role: <strong class='label-values'>" + obj[arrayIndex].roleName + "</strong></div>";
                                    display += "</div>";
                                    display += "<div class='stuSubDetails student_menuLookup_new'>";
                                    display += "<div> Department: <strong class='label-values'>" + obj[arrayIndex].departmentName + "</strong></div>";
                                    display += "</div>";
                                    display += "</div>";
                                    display += "<div class='left-right-box-gap'>";
                                    display += "<div class='stuSubDetails student_menuLookup_new'>";
                                    display += "<div class='student-content-width'>Mobile No: <strong class='label-values'>" + obj[arrayIndex].mobileNumber + "</strong></div>";
                                    display += "</div>";
                                    display += "<div class='stuSubDetails student_menuLookup_new'>";
                                    display += "<div class='student-content-width'>Email: <strong class='label-values'>" + obj[arrayIndex].emailAddress + "</strong></div>";
                                    display += "</div>";
                                    display += "</div>";
                                    display += "</div>";
                                    display += "</div>";
                                    display += "</div>"
                                    display += "</a>";
                                    display += "</li>";
                                }

                                if (br == 14) {
                                    break;
                                }
                                br++;
                            }
                        }


                    }
                }

                display += "</ul>";

                document.getElementById('menuLookupContainer1').style.display = "";

                document.getElementById('menuLookupContainer1').style.display = "block";

                document.getElementById('menuLookupContainer1').innerHTML = display;

            }

            $(".student_up_down").keydown(function(e) {

                if (e.keyCode == 38) {
                    $(this).parent().prev().find(".student_up_down").focus();

                    var get_id = $(this).parent().prev().find(".student_up_down div").attr('id');
                    var insert_text = $("#" + get_id).html();

                    $("#ui-student-lookup").val(insert_text);

                    return false;
                }

                if (e.keyCode == 40) {
                    $(this).parent().next().find(".student_up_down").focus();

                    var get_id = $(this).parent().next().find(".student_up_down div").attr('id');
                    var insert_text = $("#" + get_id).html();
                    $("#ui-student-lookup").val(insert_text);

                    return false;
                }

                if (e.keyCode == 27) {
                    $('#menuLookupContainer1').slideUp(150);
                }

                if (e.keyCode == 8) {
                    $('#ui-student-lookup').focus();
                }

                if (e.keyCode == 13) {
                    $('#menuLookupContainer1').slideUp(150);
                }


            });

            $(".student_up_down:last").keydown(function(e) {

                if (e.keyCode == 40) {
                    $(".navigation_class:first a").focus();

                    var get_id = $(".navigation_class:first a div").attr('id');
                    var insert_text = $("#" + get_id).html();
                    $("#ui-student-lookup").val(insert_text);
                }
            });

            $('.student_up_down:first').keydown(function(e) {
                if (e.keyCode == 38) {
                    $("#ui-student-lookup").focus();
                }
            });

        }
    }


    function menuLookup() {
                    var msg = "[{"moduleId":"5","moduleName":"View Circulars","isActive":"1","parentModuleId":"4","moduleLink":"studentCircularManager\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"View latest circulars or notices","directLinkExist":"1","enablePermissionBit":"VADE","order":"5","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"3","moduleName":"My Info","isActive":"1","parentModuleId":"3","moduleLink":"chalkpadpro\/studentDetails\/display","moduleImageUrl":"","relatedModuleId":"","moduleDescription":"helps us to know student details","directLinkExist":"1","enablePermissionBit":"VADE","order":"3","breadCrumbParentId":"1","directLink":"0","isModuleShow":"1"},{"moduleId":"11","moduleName":"View Resources","isActive":"1","parentModuleId":"4","moduleLink":"studentViewResourcesManager\/displayGrid","moduleImageUrl":"resources.png","relatedModuleId":"","moduleDescription":"View resources shared by teachers","directLinkExist":"1","enablePermissionBit":"VADE","order":"11","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"14","moduleName":"View Planners","isActive":"1","parentModuleId":"4","moduleLink":"viewPlannerStudent\/displayGrid","moduleImageUrl":"studentPlanner.png","relatedModuleId":"","moduleDescription":"Used to view and download the planners uploaded","directLinkExist":"1","enablePermissionBit":"VADE","order":"14","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"15","moduleName":"Image Gallery","isActive":"1","parentModuleId":"15","moduleLink":"studentImageGallery\/display","moduleImageUrl":"images-stack.png","relatedModuleId":"","moduleDescription":"","directLinkExist":"1","enablePermissionBit":"V","order":"4","breadCrumbParentId":"1","directLink":"0","isModuleShow":"0"},{"moduleId":"17","moduleName":"Message Inbox","isActive":"1","parentModuleId":"4","moduleLink":"staffInbox\/display","moduleImageUrl":"message_inbox.png","relatedModuleId":"","moduleDescription":"Send\/Receive messages from teachers and other staff members","directLinkExist":"1","enablePermissionBit":"VE","order":"15","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"18","moduleName":"Change Password","isActive":"1","parentModuleId":"18","moduleLink":"studentChangePassword\/displayGrid","moduleImageUrl":"","relatedModuleId":"","moduleDescription":"Helps in changing the password ","directLinkExist":"1","enablePermissionBit":"VADE","order":"18","breadCrumbParentId":"1","directLink":"0","isModuleShow":"0"},{"moduleId":"19","moduleName":"View Custom Pages","isActive":"1","parentModuleId":"4","moduleLink":"activityDescriptionStudent\/display","moduleImageUrl":"star.png","relatedModuleId":"","moduleDescription":"View\/Participate in the ongoing activities open for you","directLinkExist":"1","enablePermissionBit":"VADE","order":"19","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"24","moduleName":"Performance","isActive":"1","parentModuleId":"24","moduleLink":"studentPerformanceParent\/graphDisplay","moduleImageUrl":"","relatedModuleId":"","moduleDescription":"","directLinkExist":"1","enablePermissionBit":"V","order":"3","breadCrumbParentId":"1","directLink":"0","isModuleShow":"0"},{"moduleId":"372","moduleName":"Apply Gate Pass","isActive":"1","parentModuleId":"4","moduleLink":"applyGatePass\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"Apply or view your applied gate passes.","directLinkExist":"1","enablePermissionBit":"VADE","order":"15","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"394","moduleName":"Re-Evaluation Receipt","isActive":"1","parentModuleId":"4","moduleLink":"reEvaluation\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"Apply or view your revaluation","directLinkExist":"1","enablePermissionBit":"VADE","order":"390","breadCrumbParentId":"16","directLink":"0","isModuleShow":"0"},{"moduleId":"400","moduleName":"Re-Appear Receipt","isActive":"1","parentModuleId":"4","moduleLink":"reAppear\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"Apply or view your reappear","directLinkExist":"1","enablePermissionBit":"VADE","order":"390","breadCrumbParentId":"16","directLink":"0","isModuleShow":"0"},{"moduleId":"509","moduleName":"Apply Duty-Medical leave","isActive":"1","parentModuleId":"4","moduleLink":"chalkpadpro\/applyLeaveStudent\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"Apply or view leave","directLinkExist":"1","enablePermissionBit":"VADE","order":"509","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"515","moduleName":"Re-Appear Re-Evaluation Receipt","isActive":"1","parentModuleId":"4","moduleLink":"reappearReevaluation\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"Apply or view your reappear revaluation","directLinkExist":"1","enablePermissionBit":"VADE","order":"390","breadCrumbParentId":"16","directLink":"1","isModuleShow":"0"},{"moduleId":"539","moduleName":"Students Experience Survey","isActive":"1","parentModuleId":"4","moduleLink":"chalkpadpro\/studentFeedback\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"Students Experience Survey","directLinkExist":"1","enablePermissionBit":"VADE","order":"509","breadCrumbParentId":"4","directLink":"0","isModuleShow":"1"},{"moduleId":"553","moduleName":"My Interactions","isActive":"1","parentModuleId":"4","moduleLink":"chalkpadpro\/interactionDetailsStudent\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"View Interaction","directLinkExist":"1","enablePermissionBit":"VADE","order":"553","breadCrumbParentId":"4","directLink":"0","isModuleShow":"0"},{"moduleId":"522","moduleName":"RE-REGISTRATION Form","isActive":"1","parentModuleId":"522","moduleLink":"chalkpadpro\/reRegistrationForm\/displayGrid","moduleImageUrl":"","relatedModuleId":"","moduleDescription":"SEMESTER RE-REGISTRATION FORM","directLinkExist":"1","enablePermissionBit":"VADE","order":"1","breadCrumbParentId":"1","directLink":"0","isModuleShow":"1"},{"moduleId":"598","moduleName":"View Lost\/Found Items","isActive":"1","parentModuleId":"4","moduleLink":"chalkpadpro\/lostFoundItems\/displayGrid","moduleImageUrl":"script.png","relatedModuleId":"","moduleDescription":"Get Details of Lost and Found Items","directLinkExist":"1","enablePermissionBit":"VADE","order":"598","breadCrumbParentId":"4","directLink":"0","isModuleShow":"1"},{"moduleId":"607","moduleName":"Student Data Verification Form","isActive":"1","parentModuleId":"4","moduleLink":"chalkpadpro\/studentDataVerification\/displayGrid","moduleImageUrl":"","relatedModuleId":"","moduleDescription":"Student Data Verification Form","directLinkExist":"1","enablePermissionBit":"VADE","order":"510","breadCrumbParentId":"4","directLink":"0","isModuleShow":"1"},{"moduleId":"4","moduleName":"Communication","isActive":"1","parentModuleId":"4","moduleLink":"communication","moduleImageUrl":"communication.png","relatedModuleId":"","moduleDescription":"Helps us to know student teacher communication.","directLinkExist":"1","enablePermissionBit":"VADE","order":"3","breadCrumbParentId":"1","directLink":"0","isModuleShow":"1"}]";
                document.getElementById('menuLookupContainer').style.display = "none";

        if (document.getElementById('menuLookup').value.length > 1) {

            if ($.trim(msg) != "") {
                var obj = $.parseJSON(JSON.stringify(msg));


                var display = "<ul style='list-style:none'>";

                if (obj) {
                    var len = obj.length;
                    /* if(len>10) {
                         len=10;
                     }*/
                    for (var arrayIndex = 0; arrayIndex < len; arrayIndex++) {

                        if (obj[arrayIndex].moduleName.toLowerCase().indexOf(document.getElementById('menuLookup').value.toLowerCase()) > -1) {

                            display += "<li class='list_menulookup menulook_nav'><a id='up_down_" + arrayIndex + "' class='menu_up_down' href='https://cuiet.codebrigade.in/" + obj[arrayIndex].moduleLink + "'>" + obj[arrayIndex].moduleName + "</a></li>";
                        }
                    }
                }

                display += "</ul>";

                document.getElementById('menuLookupContainer').style.display = "";

                document.getElementById('menuLookupContainer').style.display = "block";

                document.getElementById('menuLookupContainer').innerHTML = display;

            }

            $(".menu_up_down").keydown(function(e) {

                if (e.keyCode == 38) {
                    $(this).parent().prev().find(".menu_up_down").focus();

                    var get_id = $(this).parent().prev().find(".menu_up_down").attr('id');
                    var insert_text = $("#" + get_id).html();
                    $("#menuLookup").val(insert_text);

                    return false;
                }

                if (e.keyCode == 40) {
                    $(this).parent().next().find(".menu_up_down").focus();

                    var get_id = $(this).parent().next().find(".menu_up_down").attr('id');
                    var insert_text = $("#" + get_id).html();
                    $("#menuLookup").val(insert_text);

                    return false;
                }

                if (e.keyCode == 27) {
                    $('#menuLookupContainer').slideUp(150);
                }

                if (e.keyCode == 8) {
                    $('#menuLookup').focus();
                }

                if (e.keyCode == 13) {
                    $('#menuLookupContainer').slideUp(150);
                }


            });

            $(".menu_up_down:last").keydown(function(e) {

                if (e.keyCode == 40) {
                    $(".menulook_nav:first .menu_up_down").focus();

                    var get_id = $(".menulook_nav:first a").attr('id');
                    var insert_text = $("#" + get_id).html();
                    $("#menuLookup").val(insert_text);
                }
            });

            $('.menu_up_down:first').keydown(function(e) {
                if (e.keyCode == 38) {
                    $('.menu_up_down:first').parent().parent().parent().prev('#menuLookup').focus();
                }
            });

        }
    }
</script>
	<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery-1.11.3.min.js"></script>
	<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery.qtip.js"></script>
	<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/timeline/bootstrap.js"></script>
	<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/timeline/modernizr.custom.js"></script>


	<!-- charts scripts -->
	<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/ajax.js"></script>
	<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/amChart/amcharts.js"></script>
	<!-- charts scripts -->
			<style>
			#footer-logo-codebrigade {
				background: url('../images/code-brigade-logo-small.png') no-repeat;
				background-size: 80px;
				width: 82px;
				height: 14px;
				display: inline-block;
			}
		</style>
	
	<script type="text/javascript">
		function getFacility(id) {
			document.getElementById('facilityStatus').value = id;
			document.getElementById('frmIntegration').target = 'uploadTargetAdd';
			document.getElementById('frmIntegration').action = "authenticate";
			document.getElementById('frmIntegration').submit();
			return false;
		}

		$(document).ready(function() {

			$('body').css('height', '');

			$('input,textarea').focus(function() {
				$(this).data('placeholder', $(this).attr('placeholder')).attr('placeholder', '');
			}).blur(function() {
				$(this).attr('placeholder', $(this).data('placeholder'));
			});

			flag = 0;
			$.ajax({
				url: "https://cuiet.codebrigade.in/dashboardFeed/checkStudentRemindersDue/",
				type: "POST",
				data: ({}),
				success: function(msg) {
					//alert(msg);
					//studentRemindersDue=msg;
				}
			});
			$.ajax({
				url: "https://cuiet.codebrigade.in/dashboardFeed/checkStudentRemindersCompleted/",
				type: "POST",
				data: ({}),
				success: function(msg) {
					//alert(msg);
					//studentRemindersCompleted=msg;
				}
			});
			$.ajax({
				url: "https://cuiet.codebrigade.in/dashboardFeed/checkStudentRemindersUpcoming/",
				type: "POST",
				data: ({}),
				success: function(msg) {
					//alert(msg);
					//studentRemindersUpcoming=msg;
				}
			});


			$.ajax({

				url: "https://cuiet.codebrigade.in/dashboardFeed/checkGuider/",
				type: "POST",
				data: ({
					guiderId: 10
				}),
				success: function(msg) {

					if ($.trim(msg) == "1") {
						// Define the tour!

						var tour = {
							id: "feed",
							steps: [{

									title: "A Fresh New Experience Is On It's Way!",
									content: "We've redesigned our dashboard and given it a fresh new look. This tutorial will help you get a hang of it. Click on next to continue...",

									target: "feed-blank",
									placement: "top"
								},
								{
									title: "Find Specific Updates Easily & Quickly",
									content: "With these smart category filters, you can directly browse items under a particular category.",
									target: "filter-menu",
									placement: "left"
								},
								{
									title: "Better Notifications",
									content: "These notifications will keep you up to date on every new item or message shared with you so that you don't miss any.",
									target: "notification-icon",
									placement: "bottom"
								},
								{
									title: "We Hope You Love The New Experience!",
									content: "We would love to have your feedback on the new experience through the message inbox option. Happy browsing :)",
									target: "feed-blank",
									placement: "right"
								}
							],
							onClose: function() {
								setGuiderViewed("25005", 10);
								flag++;
							},
							onEnd: function() {
								if (flag == 0) {
									setGuiderViewed("25005", 10);
								}

							},
							showPrevButton: true
						};

						// Start the tour!
						hopscotch.startTour(tour);
					}

				}

			});

		});

		function setGuiderViewed(userId, guiderId) {
			$.ajax({
				url: "https://cuiet.codebrigade.in/dashboardFeed/setGuiderViewed/",
				type: "POST",
				data: ({
					userId: userId,
					guiderId: guiderId
				}),
				success: function(msg) {
					//do nothing
				}
			});
		}


		var obj = '';


		$(document).mouseup(function(e) {
			var container = $(".ui-feed-popup");

			if (!container.is(e.target) // if the target of the click isn't the container...
				&&
				container.has(e.target).length === 0) // ... nor a descendant of the container
			{
				container.hide();
			}


			var container = $(".ui-menu-dropdown");

			if (!container.is(e.target) // if the target of the click isn't the container...
				&&
				container.has(e.target).length === 0) // ... nor a descendant of the container
			{
				container.hide();
			}

			var container = $(".ui-sibling-dropdown");

			if (!container.is(e.target) // if the target of the click isn't the container...
				&&
				container.has(e.target).length === 0) // ... nor a descendant of the container
			{
				container.hide();
			}
		});
	</script>
	<script type="text/javascript">
		$(function() {
			$('a[href*=#]:not([href=#])').click(function() {
				if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {
					var target = $(this.hash);
					target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
					if (target.length) {
						$('html,body').animate({
							scrollTop: target.offset().top
						}, 500);
						return false;
					}
				}
			});
		});
	</script>

	<style>
		.fileUploadInput {
			cursor: pointer;
			opacity: 0;
			-moz-opacity: 0;
			filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0)
		}
	</style>

</head>

<body>
	<div class="container-fluid" style="padding:0">


		<!--div class="navigation-bar" style="padding:0;position:relative;" data-0="position:relative;" data-48="position:fixed;width:100%;top:0;z-index:200;">
				<div class="container tabs tabs-style-linemove" style="padding:0;">
					<nav class="collapse navbar-collapse bs-navbar-collapse">

						<ul class="nav navbar-nav">
					        <li>
					          <a class="links" href="#section-linemove-1" href="../getting-started/">Academics</a>
					        </li>
					        <li>
					          <a class="links" href="#section-linemove-2" href="../css/">Fees</a>
					        </li>
					        <li>
					          <a class="links" href="#section-linemove-3" href="../components/">Communication</a>
					        </li>
					        <li>
					          <a class="links" href="#section-linemove-4" href="../javascript/">Reports</a>
					        </li>
					        <li>
					          <a class="links" href="#section-linemove-5" href="../customize/">More</a>
					        </li>
					    </ul>
					    <ul class="nav navbar-nav navbar-right">

					    </ul>

				    </nav-->
		<!--div class="content-wrap">
								<section id="section-linemove-1"><p>1</p></section>
								<section id="section-linemove-2"><p>2</p></section>
								<section id="section-linemove-3"><p>3</p></section>
								<section id="section-linemove-4"><p>4</p></section>
								<section id="section-linemove-5"><p>5</p></section>
					</div-->
		<!--/div>
			</div-->





		<div class="container main-container">
			<div class="row">
				<div id="pad" class="corner_curves">

					  <link rel="stylesheet" href="https://cuiet.codebrigade.in//css/hopscotch.css">
  </link>
  <META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE">
  <link rel="stylesheet" href="https://cuiet.codebrigade.in//css/hopscotch.css">
</link>

<style>
	.backToMyLoginBtn{
		color: white;
		font-size: 12px !important;
		font-weight: bold !important;
		text-decoration: none;
		font-family: Arial, sans-serif;
	}
	.backToMyLoginBtn:hover{
		text-decoration: underline;
		color: white;
	}
</style>

<link rel="stylesheet" href="https://cuiet.codebrigade.in//css/hopscotch.css">
</link>

<link type="text/css" rel="stylesheet" href="https://cuiet.codebrigade.in/css/jquery.dropdown.css" />
<!--  -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>

<script>
	var jq210 = jQuery.noConflict();
</script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/jquery.dropdown.min.js"></script>
<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/dateFormat.js"></script>

<script>
	$(document).ready(function() {
		jQuery.noConflict();
		$(".message-icon").click(function() { // Message Dropdown

			 // Intercom script ends

			$(".ui-message-dropdown").show();
			$(".ui-menu-dropdown").hide();
		});

		$('html').click(function() {
			$(".ui-message-dropdown").hide();
		});

		$('.ui-message-dropdown, .message-icon').click(function(event) {
			event.stopPropagation();
		});
	});
</script>

<script>
	function show1() {
		if (this.value == 'Type here to find students') {
			this.value = '';
			$(this).css('color', '#2e5b87');
		}
	}

	$(document).ready(function() {

		$(".menu-icon").click(function() { // Menu Option Dropdown
			$(".ui-menu-dropdown").show();
			$(".ui-message-dropdown").hide();
			$(".ui-sibling-dropdown").hide();
		});

		$('html').click(function() {
			$(".ui-menu-dropdown").hide();
		});

		$('.ui-menu-dropdown, .menu-icon').click(function(event) {
			event.stopPropagation();
		});

		$(".ui-sibling-div").click(function() { // Menu Option Dropdown
			$(".ui-sibling-dropdown").show();
			$(".ui-menu-dropdown").hide();
			$(".ui-message-dropdown").hide();
		});

		$('html').click(function() {
			$(".ui-sibling-dropdown").hide();
		});

		$('.ui-sibling-dropdown, .ui-sibling-div').click(function(event) {
			event.stopPropagation();
		});


		// code for new inbox
					// ends - code for new inbox

			$.ajax({
				url: "https://cuiet.codebrigade.in/dashboardFeed/getAppMessages/",
				success: function(msg) {
					obj = $.parseJSON(msg);

					str = "";

					for (i = 0; i < 10; i++) {

						if ((obj.Messages_List[i]) && obj.Messages_List[i].roleId == 4) {

							if (obj.Messages_List[i].msg_count > 0) {
																	str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/4' target='_blank' class='sp-message-anchor' style='background-color:#F0F5FA;font-weight:600'>Messages From " + obj.Messages_List[i].roleName + " </a>";
															} else {
																	str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/4' target='_blank' class='sp-message-anchor'>Messages From " + obj.Messages_List[i].roleName + " </a>";
															}

						} else if ((obj.Messages_List[i]) && obj.Messages_List[i].roleId == 2) {

							if (obj.Messages_List[i].msg_count > 0) {
																	str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/2' target='_blank' class='sp-message-anchor' style='background-color:#F0F5FA;font-weight:600'>Messages From " + obj.Messages_List[i].roleName + " </a>";
															} else {
																	str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/2' target='_blank' class='sp-message-anchor'>Messages From " + obj.Messages_List[i].roleName + " </a>";
															}

						} else {

							if ((obj.Messages_List[i])) {

								if (obj.Messages_List[i].msg_count > 0) {
																			str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/staff' target='_blank' class='sp-message-anchor' style='background-color:#F0F5FA;font-weight:600'>Messages From " + obj.Messages_List[i].roleName + " </a>";
																	} else {
																			str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/staff' target='_blank' class='sp-message-anchor'>Messages From " + obj.Messages_List[i].roleName + " </a>";
																	}

							}

						}

					}


					str += "<a href=https://cuiet.codebrigade.in/staffInbox/display#newMessage class='ui-compose-message'>Compose Message</a>";

					$('.ui-message-dropdown').html(str);

				}

			});

			$.ajax({
				url: "https://cuiet.codebrigade.in/dashboardFeed/getCounts/",
				success: function(msg) {
					obj = $.parseJSON(msg);

					//alert(msg);
					if (obj.messageCount == 0) {
						$('.ui-message-count').html("");
						$('.ui-message-count').hide();
					} else if (obj.messageCount > 100) {
						$('.ui-message-count').html('99+');
						$('.ui-message-count').show();
					} else {
						messageCount = obj.messageCount;
						$('.ui-message-count').show();
						$('.ui-message-count').html(messageCount);
					}

					if (obj.notificationCount.notificationCount == 0) {
						$('.ui-notification-count').html("");
						$('.ui-notification-count').hide();
					} else if (obj.notificationCount.notificationCount > 100) {
						$('.ui-notification-count').html("99+");
						$('.ui-notification-count').show();
					} else {
						notificationCount = obj.notificationCount.notificationCount;
						$('.ui-notification-count').show();
						$('.ui-notification-count').html(notificationCount);
					}

					// Merging getAppMessages() code with getCounts()

					
						str = "";

						for (i = 0; i < 10; i++) {

							if ((obj.Messages_List[i]) && obj.Messages_List[i].roleId == 4) {

								if (obj.Messages_List[i].msg_count > 0) {

									str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/4' target='_blank' class='sp-message-anchor' style='background-color:#F0F5FA;font-weight:600'>" + obj.Messages_List[i].roleName + " Messages: " + obj.Messages_List[i].msg_count + "</a>";

								} else {

									str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/4' target='_blank' class='sp-message-anchor'>" + obj.Messages_List[i].roleName + " Messages: " + obj.Messages_List[i].msg_count + "</a>";

								}

							} else if ((obj.Messages_List[i]) && obj.Messages_List[i].roleId == 2) {

								if (obj.Messages_List[i].msg_count > 0) {

									str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/2' target='_blank' class='sp-message-anchor' style='background-color:#F0F5FA;font-weight:600'>" + obj.Messages_List[i].roleName + " Messages: " + obj.Messages_List[i].msg_count + "</a>";

								} else {

									str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/2' target='_blank' class='sp-message-anchor'>" + obj.Messages_List[i].roleName + " Messages: " + obj.Messages_List[i].msg_count + "</a>";

								}

							} else {

								if ((obj.Messages_List[i])) {

									if (obj.Messages_List[i].msg_count > 0) {

										str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/" + obj.Messages_List[i].roleId + "' target='_blank' class='sp-message-anchor' style='background-color:#F0F5FA;font-weight:600'>" + obj.Messages_List[i].roleName + " Messages: " + obj.Messages_List[i].msg_count + "</a>";

									} else {

										str += "<a href='https://cuiet.codebrigade.in//staffInbox/display/dash/" + obj.Messages_List[i].roleId + "' target='_blank' class='sp-message-anchor'>" + obj.Messages_List[i].roleName + " Messages: " + obj.Messages_List[i].msg_count + "</a>";

									}

								}

							}

						}


						str += "<a href=https://cuiet.codebrigade.in/staffInbox/display#newMessage class='ui-compose-message'>Compose Message</a>";

						$('.ui-message-dropdown').html(str);

					
					// merge ends

				}
			});

			// code for new inbox
				// ends - code for new inbox

	});


	function updateNotifCount() {
		$.ajax({
			url: "https://cuiet.codebrigade.in/dashboardFeed/getCounts/",
			success: function(msg) {
				obj = $.parseJSON(msg);

				//alert(msg);
				if (obj.messageCount == 0) {
					$('.ui-message-count').html("");
					$('.ui-message-count').hide();
				} else if (obj.messageCount > 100) {
					$('.ui-message-count').html('99+');
					$('.ui-message-count').show();
				} else {
					messageCount = obj.messageCount;
					$('.ui-message-count').show();
					$('.ui-message-count').html(messageCount);
				}

				if (obj.notificationCount.notificationCount == 0) {
					$('.ui-notification-count').html("");
					$('.ui-notification-count').hide();
				} else if (obj.notificationCount.notificationCount > 100) {
					$('.ui-notification-count').html("99+");
					$('.ui-notification-count').show();
				} else {
					notificationCount = obj.notificationCount.notificationCount;
					$('.ui-notification-count').show();
					$('.ui-notification-count').html(notificationCount);
				}
			}
		});
	}
</script>




<script>
	var body = $(document).find('body');
	body.prepend("<div id='navigation' class='row'><div class='container'><div id='stu-search-container' class='left white bold search-select-input-box'> \
					 \
					 \
				</div> \
				<div class='ui-navigation-bar'> \
					<div class='ui-sibling-div' style='display:none;'>  \
					 \
					</div> \
					<div class='ui-notif-div'>  \
						<span class='white bold ui-session-title'>Session</span> \
						<input type=hidden name=userId id=userId value=25005></input>\
						<select id='sessionHeader' name='sessionHeader' class='ui-session-input' onchange='changeSessionId()'> \
							<option value=\'7\' >Jul-Dec 2022</option><option value=\'8\' >JanJun2023</option><option value=\'9\' >Jul-Dec2023</option><option value=\'10\' >JanJun2024</option><option value=\'11\' >Jul-Dec2024</option><option value=\'17\' >JanJun2025</option><option value=\'18\' SELECTED>Jul-Dec2025</option> \
						</select> \
					<a href='https://cuiet.codebrigade.in/notifications/display' style='text-decoration:none;'> \
					<div id='notification-icon' class='notification-icon' original-title='Notifications'> \
						<div class='notification-area'> \
							<span class='ui-notification-count'></span> \
						</div> \
					</div> \
					</a> \
					<div class='message-wrap'> \
					<div id='message-icon' class='message-icon sp-message-div-float' original-title='Messages'> \
											</div> \
											<div class='notification-area'> \
												<span class='ui-message-count'></span> \
											</div> \
												<div class='ui-message-dropdown'> \
											</div> \
											</div><div class='menu-options-wrap'> \
						<div id='menu-icon' class='white bold menu-icon tooltip-box' original-title='Menu Options'> \
						</div> \
						<div class='ui-menu-dropdown'> \
								<div class='ui-menu-dropdown-list'></div> \
								<div class='ui-menu-dropdown-list'> \
									 \
								</div><div class='ui-menu-dropdown-list sms-div'> </div></div> \
					</div> \
					<a href='https://cuiet.codebrigade.in/loginManager/logout'><div class='white bold logout-icon'><div class='logout-text'  onclick=googleSignOut();  >Logout</div></div></a> \
				</div>\
			</div></div> ");
	body.prepend("");
</script>

<script type="text/javascript">
	$('#ui-student-lookup').keydown(function(e) {
		if (e.keyCode == 40) {
			$(this).parent().next("div").find(".navigation_class:first a").focus();
			var get_id = $(this).parent().next("div").find(".navigation_class:first a div").attr('id');

			var insert_text = $("#" + get_id).html();
			// alert(insert_text);
			$("#ui-student-lookup").val(insert_text);

			return false;
		}

		if (e.keyCode == 27) {
			$('#menuLookupContainer1').slideUp(300);
		}
	});

	$(document).click(function(event) {
		if ($(event.target).closest('#menuLookupContainer1').length == 0) {
			$('#menuLookupContainer1').slideUp(150);
		}
	});
</script>

<script>
	$(document).ready(function() {
		$('#ui-student-lookup').focus(function() {
			$('#ui-student-lookup').css('color', '#2e5b87');
		});
	});
	$(document).mouseup(function(e) {


		var container = $(".ui-sibling-dropdown");

		if (!container.is(e.target) // if the target of the click isn't the container...
			&&
			container.has(e.target).length === 0) // ... nor a descendant of the container
		{
			container.hide();
		}
	});
</script>



<script>
	var selectMenu = document.querySelector('.select-menu');
	selectMenu.classList.remove('active');
	$.ajax({
		url: "https://cuiet.codebrigade.in/dashboardFeed/getQuickSearchValue",
		type: "POST",
		data: ({}),
		success: function(msg) {
			var obj = JSON.parse(msg);
			if (obj == 0 || obj == 1) {
				const firstOption = document.querySelector('.search-select-option');
				if (firstOption) {
					const firstOptionText = firstOption.textContent;
					var sBtnText = document.querySelector('.sBtn-text');
					sBtnText.innerHTML = firstOptionText;
				}
			} else {
				var option = document.createElement('li');
				option.className = 'option search-select-option';
				option.setAttribute('onclick', 'selectOption(this)');
				option.innerText = 'Employees';
				selectOption(option);
			}
			selectMenu.classList.remove('active');
			var selecticonsvg = document.querySelector('.select-menu-icon-svg');
			selecticonsvg.classList.add('hide');
			var selectdownsvg = document.querySelector('.select-menu-icondown-svg');
			selectdownsvg.classList.remove('hide');
		}
	});

	function toggleDropdown() {
		var selectMenu = document.querySelector('.select-menu');
		selectMenu.classList.toggle('active');
		var selecticonsvg = document.querySelector('.select-menu-icon-svg');
		selecticonsvg.classList.toggle('hide');
		var selectdownsvg = document.querySelector('.select-menu-icondown-svg');
		selectdownsvg.classList.toggle('hide');

		$(".select-menu .options").css({
			'width': ($(".select-menu").width() + 'px')
		});
	}

	// Add event listener to close dropdown when clicking outside
	document.addEventListener('click', function(event) {
		var isClickInside = selectMenu.contains(event.target);
		if (!isClickInside) {
			selectMenu.classList.remove('active');
			var selecticonsvg = document.querySelector('.select-menu-icon-svg');
			selecticonsvg.classList.add('hide');
			var selectdownsvg = document.querySelector('.select-menu-icondown-svg');
			selectdownsvg.classList.remove('hide');
		}
	});

	function selectOption(option) {
		var selectedOptionText = option.innerText;
		var sBtnText = document.querySelector('.sBtn-text');
		sBtnText.innerHTML = selectedOptionText;
		menuLookup1();
		var selectMenu = document.querySelector('.select-menu');
		selectMenu.classList.remove('active');
		var selecticonsvg = document.querySelector('.select-menu-icon-svg');
		selecticonsvg.classList.toggle('hide');
		var selectdownsvg = document.querySelector('.select-menu-icondown-svg');
		selectdownsvg.classList.toggle('hide');
		var value = 0;
		if (option.innerText == 'Students') {
			value = 1;
		} else {
			value = 2;
		}
		$.ajax({
			url: "https://cuiet.codebrigade.in/dashboardFeed/addQuickSearchValue",
			type: "POST",
			data: ({
				value: value
			}),
			success: function(msg) {}
		});
	}

	function toggleIcon() {
		var dropdown = document.getElementById('dropdown');
		var icon = document.getElementById('dropdown-icon');

		if (dropdown.value !== "") {
			icon.src = "https://cuiet.codebrigade.in/css/images/dropup.svg";
		} else {
			icon.src = "https://cuiet.codebrigade.in/css/images/dropdown.svg";
		}
	}


	
</script>  <!--<link rel='stylesheet' type='text/css' href="https://cuiet.codebrigade.in/fullcalendar-1.5.3/fullcalendar/fullcalendar.css" />-->

  

<script>

$(document).ready(function() {
   var feedbackOptions = {
       
        success:       showResponseFeedback , // post-submit callback
       clearForm:     false        // clear all form fields after successful submit
        //resetForm: true        // reset the form after successful submit
    };

   
   	//$('#myFormFeedback').ajaxForm(feedbackOptions);    
	  

});

$(document).ready(function() {



$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/displayGreeting",
        type: "POST",
	success: function(msg){

		var obj=$.parseJSON(msg);
                var val=$.parseJSON(msg);                
                var val1=$.parseJSON(msg);
                 var val2=$.parseJSON(msg);
                for(i=0; i<obj.length; i++)
				{
				
				$('#bigGreeting').before('<div class="modal-backdrop in"></div>');
				$('#bigGreeting').show();
				$('.modal-backdrop, .greetingClose').click(function(){
						visible(2);
						$(this).hide(); 
						$('#bigGreeting').remove();
						$.modal.close();
				});
				
				val = obj[i].greetingImage;
				val1 = obj[i].visible;
				val2 = obj[i].imageType;
				
				}

            //    alert(val1); alert(val2);
		/*if(timeOutValue.timeOutValue==1)
		{
		window.location = "https://cuiet.codebrigade.in//loginManager/logout";
		}*/
                if(val1 == 1){
                	if(val2 == 1)
                	{ 
                 document.getElementById("greeting").innerHTML="<img src='https://s3.amazonaws.com/cbrig-assets/cuiet/resources/greetings/"+ val +"' style='position:relative' /> ";
                  $(document.getElementById("background")).show();
                 	$(document.getElementById("cross")).show();
					}
					else
					{	
						showAddModal("bigGreeting",0);
						$("body").removeClass("modal-open").css({'position':'relative','padding':'0'});

						document.getElementById("bigGreetingLoader").style.display="none"; 
						document.getElementById("bigGreetingContent").innerHTML="<img src='https://s3.amazonaws.com/cbrig-assets/cuiet/resources/greetings/"+ val +"' style='position:relative;' /> "; 
   						$("#bigGreetingContent").fadeIn(0); 
					}
               }
else{
	$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/displayObservation",
        type: "POST",
	success: function(msg){
//alert(msg);
		var obj=$.parseJSON(msg);
		//$('#observationModal').before('<div class="modal-backdrop in"></div>');
		//$('#observationModal').show();
              //  var val=$.parseJSON(msg);                
             //   var val1=$.parseJSON(msg);
            //     var val2=$.parseJSON(msg);
            val2 = obj[0].observationType;
             val1 = obj[0].id;
            // alert(obj[0].googleDriveId);

			if(val2==2)
			{
				val = "<img src='https://s3.amazonaws.com/cbrig-assets/cuiet/resources/Student/"+obj[0].storedAs+"' style='position:relative;' width='600'/>";
			
			}else{
				val ='<iframe src="https://drive.google.com/file/d/'+obj[0].googleDriveId+'/preview" width="580" height="460"></iframe>' ;
			
			}
//alert(val);		
           
               showAddModal("observationModal",100);
               $("body").removeClass("modal-open").css({'position':'relative','padding':'0'});
					//	$("body").removeClass("modal-open").css({'position':'relative','padding':'0'});
						document.getElementById("observationModal").style.display="";
						
						document.getElementById("observationId").val=val1; 
						document.getElementById("observationContent").innerHTML="<table width='100%' class='textVerdana11' style='width:100%'><tr><td colspan='2' height='3' ></td></tr><tr><td colspan='2' align='center'>"+ val+"</td></tr><tr><td colspan='2' height='10' ></td></tr></table>"; 
   						document.getElementById("observationLoader").style.display="none"; 
   						//$("#observationContent1").fadeIn(0); 
				
	}
});
	
}
	}
});



	$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/displayReminder",
        type: "POST",
	success: function(msg){
//alert(msg);
		//var obj=$.parseJSON(msg);
		//alert(msg);
	if(msg!=0){	
          var tempArray = new Array();
  		 	tempArray = msg.split("|",3);
               showAddModal("reminderModal",100);
               $("body").removeClass("modal-open").css({'position':'relative','padding':'0'});
						document.getElementById("reminderModal").style.display="";
						//alert(tempArray[1]);
						document.getElementById("reminderId").value=tempArray[1];
						//document.getElementById("reminderContent").innerHTML=tempArray[0];
						document.getElementById("reminderContent").innerHTML="<table width='100%' class='textVerdana11' style='width:100%'><tr><td colspan='2' height='3' ></td></tr><tr><td colspan='2' align='left'>"+ tempArray[0]+"</td></tr><tr><td colspan='2' height='10' ></td></tr></table>"; 
   						document.getElementById("reminderLoader").style.display="none"; 
   						document.getElementById("reminderContent1").style.display=""; 
   						//$("#observationContent1").fadeIn(0); 
			}
	}
});


	$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/displayEmployeeReminder",
        type: "POST",
	success: function(msg){
//alert(msg);
		//var obj=$.parseJSON(msg);
		//alert(msg);

	if(msg!=0){	
          var tempArray = new Array();
  		 	tempArray = msg.split("|",3);
               showAddModal("reminderModalEmployee",100);
               $('.modal-backdrop').hide();
               $("body").removeClass("modal-open").css({'position':'relative','padding':'0'});
						document.getElementById("reminderModalEmployee").style.display="";
						//alert(tempArray[1]);
						document.getElementById("reminderIdEmployee").value=tempArray[1];
						//document.getElementById("reminderContent").innerHTML=tempArray[0];
						document.getElementById("reminderContentEmployee").innerHTML="<table width='100%' class='textVerdana11' style='width:100%'><tr><td colspan='2' height='3' ></td></tr><tr><td colspan='2' align='left'>"+ tempArray[0]+"</td></tr><tr><td colspan='2' height='10' ></td></tr></table>"; 
   						document.getElementById("reminderLoaderEmployee").style.display="none"; 
   						document.getElementById("reminderContent1Employee").style.display=""; 
   						//$("#observationContent1").fadeIn(0); 
			}
	}
});



}
);

function visibleReminder()
{
	var id=document.getElementById("reminderId").value;
		//alert(id);
		$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/visibleReminder",
        data:({id:id}),
        type: "POST",
		success: function(msg){ 
				
	       $("#reminderModal").hide();  
	       $.modal.close();    
	    }
	 });
}


function visibleEmployeeReminder()
{
	var id=document.getElementById("reminderIdEmployee").value;
		//alert(id);
		$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/visibleEmployeeReminder",
        data:({id:id}),
        type: "POST",
		success: function(msg){ 
				
	       $("#reminderModalEmployee").hide();  
	       $.modal.close();    
	    }
	 });
}

function visibleObservation()
{
	var id=document.getElementById("observationId").val;
		//alert(id);
		$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/visibleObservation",
        data:({id:id}),
        type: "POST",
		success: function(msg){ 
				$.modal.close();
	       $("#observationModal").hide();      
	    }
	 });
}


function visible(imageType)
{

$.ajax({
        url: "https://cuiet.codebrigade.in/checkGreeting/visible",
        type: "POST",
		success: function(msg){ 

			$('.modal-backdrop').hide();

			if(imageType==1)
			{
				$('#background').hide();
				$('#cross').hide();
				$('#greeting').hide();
				$('#observationModal,#bigGreeting').hide();
				$.modal.close();
	        }
	        else
	        {
	        	$('#observationModal,#bigGreeting').hide();
	        	$.modal.close();
	        }       
	    }

	
});


} 
function feedbackImg()
{
	  $('#feedbacks').slideDown();
	   $('#feeds').slideUp();
	
}
function feedsClose()
{
	  $('#feedbacks').slideUp();
	   $('#feeds').slideDown();
	
}
function feedback()
{                                                                      
   
   showAddModal("feedback",150);
   
   clearForm('myFormFeedback');
    document.getElementById("feedbackLoading").style.display="none";  
   $("#feedbackContent").fadeIn(0); 
    
}
function showResponseFeedback(responseText)
{     // alert(responseText);
    var data= new Array();
    data=responseText.split("|",3);
    if(data[0].search("10")==-1)
    {  
        if(data[0].search("0")==-1)
        {
             $("form[id=myFormFeedback] input:text").css({"border":"1px solid #2e5b87"});
             $("form[id=myFormFeedback] input:file").css({"border":"1px solid red"});
             $("select").css({"border":"1px solid #2e5b87"});
             clearForm('myForm2');
             document.getElementById("feedbackNoticeCell").innerHTML="<strong><img src='https://cuiet.codebrigade.in//images/tick-white.png' style='position:relative; top:3px' />&nbsp;Data Updated Successfully!</strong>";
            $("#feedbackNoticeTable").show();
           
        }
       else 
       {
         document.getElementById("feedbackContainer").innerHTML=data[1];
         //setTimeout('$.modal.close()', 1000); 
       //  setTimeout("window.location.reload()","1000");
       }
    }
    else
    {    
        var totalData=new Array();
        //alert(data[1]);
        totalData=data[1].split(".",data[2]);
        var errorData=new Array();
    
        $("form[id=myFormFeedback] input:text").css({"border":"1px solid #2e5b87"});
        // $("form[id=myForm2] input:file").css({"border":"1px solid red"});
        $("select").css({"border":"1px solid #2e5b87"});
    
        str="<ul style=' list-style:none;margin:0px;text-align:left;padding-left:0px;'>"; 
        for(i=0;i<totalData.length;i++)
        {
          errorData=totalData[i].split("-",2);
          str+="<li style='padding-left:3px'>"+errorData[1]+"</li>";
          $("#"+errorData[0]).css({"border":"1px solid red"});
        }
        str+="</ul>";//alert(str);
        document.getElementById("feedbackNoticeCell").innerHTML=str;
        document.getElementById('feedbackNoticeTable').style.display='';
      } 
}

function displayFeeds(id)
{
	
	//alert("");
	showEditModal('ViewFeedback',100);
	$.ajax({
			url: "https://cuiet.codebrigade.in/feedback/displayFeedback/",
			type:"POST",
			 data:({id:id}),
			success:function(msg){
			    $("#innerText").html($.trim(msg));
			document.getElementById("viewFeedback").style.display="none"; 
            		document.getElementById("contentFeedback").style.display="";
					//document.getElementById("loading").display="none";
				//	document.getElementById("notice").value=obj[0].noticeText;

             
			}
		});

}
</script>

 <script>
(function($, undefined) {
var defaults = {

	// display
	defaultView: 'month',
	aspectRatio: 1.35,
	header: {
		left: 'title',
		center: '',
		right: 'today prev,next'
	},
	weekends: true,
	
	// editing
	//editable: false,
	//disableDragging: false,
	//disableResizing: false,
	
	allDayDefault: true,
	ignoreTimezone: true,
	
	// event ajax
	lazyFetching: true,
	startParam: 'start',
	endParam: 'end',
	
	// time formats
	titleFormat: {
		month: 'MMMM yyyy',
		week: "MMM d[ yyyy]{ '&#8212;'[ MMM] d yyyy}",
		day: 'dddd, MMM d, yyyy'
	},
	columnFormat: {
		month: 'ddd',
		week: 'ddd M/d',
		day: 'dddd M/d'
	},
	timeFormat: { // for event elements
		'': 'h(:mm)t' // default
	},
	
	// locale
	isRTL: false,
	firstDay: 0,
	monthNames: ['January','February','March','April','May','June','July','August','September','October','November','December'],
	monthNamesShort: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],
	dayNames: ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],
	dayNamesShort: ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],
	buttonText: {
		prev: '&nbsp;&#9668;&nbsp;',
		next: '&nbsp;&#9658;&nbsp;',
		prevYear: '&nbsp;&lt;&lt;&nbsp;',
		nextYear: '&nbsp;&gt;&gt;&nbsp;',
		today: 'today',
		month: 'month',
		week: 'week',
		day: 'day'
	},
	
	// jquery-ui theming
	theme: false,
	buttonIcons: {
		prev: 'circle-triangle-w',
		next: 'circle-triangle-e'
	},
	
	//selectable: false,
	unselectAuto: true,
	
	dropAccept: '*'
	
};

// right-to-left defaults
var rtlDefaults = {
	header: {
		left: 'next,prev today',
		center: '',
		right: 'title'
	},
	buttonText: {
		prev: '&nbsp;&#9658;&nbsp;',
		next: '&nbsp;&#9668;&nbsp;',
		prevYear: '&nbsp;&gt;&gt;&nbsp;',
		nextYear: '&nbsp;&lt;&lt;&nbsp;'
	},
	buttonIcons: {
		prev: 'circle-triangle-e',
		next: 'circle-triangle-w'
	}
};



var fc = $.fullCalendar = { version: "1.5.3" };
var fcViews = fc.views = {};


$.fn.fullCalendar = function(options) {


	// method calling
	if (typeof options == 'string') {
		var args = Array.prototype.slice.call(arguments, 1);
		var res;
		this.each(function() {
			var calendar = $.data(this, 'fullCalendar');
			if (calendar && $.isFunction(calendar[options])) {
				var r = calendar[options].apply(calendar, args);
				if (res === undefined) {
					res = r;
				}
				if (options == 'destroy') {
					$.removeData(this, 'fullCalendar');
				}
			}
		});
		if (res !== undefined) {
			return res;
		}
		return this;
	}
	
	
	// would like to have this logic in EventManager, but needs to happen before options are recursively extended
	var eventSources = options.eventSources || [];
	delete options.eventSources;
	if (options.events) {
		eventSources.push(options.events);
		delete options.events;
	}
	

	options = $.extend(true, {},
		defaults,
		(options.isRTL || options.isRTL===undefined && defaults.isRTL) ? rtlDefaults : {},
		options
	);
	
	
	this.each(function(i, _element) {
		var element = $(_element);
		var calendar = new Calendar(element, options, eventSources);
		element.data('fullCalendar', calendar); // TODO: look into memory leak implications
		calendar.render();
	});
	
	
	return this;
	
};


// function for adding/overriding defaults
function setDefaults(d) {
	$.extend(true, defaults, d);
}



 
function Calendar(element, options, eventSources) {
	var t = this;
	
	
	// exports
	t.options = options;
	t.render = render;
	t.destroy = destroy;
	t.refetchEvents = refetchEvents;
	t.reportEvents = reportEvents;
	t.reportEventChange = reportEventChange;
	t.rerenderEvents = rerenderEvents;
	t.changeView = changeView;
	t.select = select;
	t.unselect = unselect;
	t.prev = prev;
	t.next = next;
	t.prevYear = prevYear;
	t.nextYear = nextYear;
	t.today = today;
	t.gotoDate = gotoDate;
	t.incrementDate = incrementDate;
	t.formatDate = function(format, date) { return formatDate(format, date, options) };
	t.formatDates = function(format, date1, date2) { return formatDates(format, date1, date2, options) };
	t.getDate = getDate;
	t.getView = getView;
	t.option = option;
	t.trigger = trigger;
	
	
	// imports
	EventManager.call(t, options, eventSources);
	var isFetchNeeded = t.isFetchNeeded;
	var fetchEvents = t.fetchEvents;
	
	
	// locals
	var _element = element[0];
	var header;
	var headerElement;
	var content;
	var tm; // for making theme classes
	var currentView;
	var viewInstances = {};
	var elementOuterWidth;
	var suggestedViewHeight;
	var absoluteViewElement;
	var resizeUID = 0;
	var ignoreWindowResize = 0;
	var date = new Date();
	var events = [];
	var _dragElement;
	
	
	
	/* Main Rendering
	-----------------------------------------------------------------------------*/
	
	
	setYMD(date, options.year, options.month, options.date);
	
	
	function render(inc) {
		if (!content) {
			initialRender();
		}else{
			calcSize();
			markSizesDirty();
			markEventsDirty();
			renderView(inc);
		}
	}
	
	
	function initialRender() {
		tm = options.theme ? 'ui' : 'fc';
		element.addClass('fc');
		if (options.isRTL) {
			element.addClass('fc-rtl');
		}
		if (options.theme) {
			element.addClass('ui-widget');
		}
		content = $("<div class='fc-content' style='position:relative'/>")
			.prependTo(element);
		header = new Header(t, options);
		headerElement = header.render();
		if (headerElement) {
			element.prepend(headerElement);
		}
		changeView(options.defaultView);
		$(window).resize(windowResize);
		// needed for IE in a 0x0 iframe, b/c when it is resized, never triggers a windowResize
		if (!bodyVisible()) {
			lateRender();
		}
	}
	
	
	// called when we know the calendar couldn't be rendered when it was initialized,
	// but we think it's ready now
	function lateRender() {
		setTimeout(function() { // IE7 needs this so dimensions are calculated correctly
			if (!currentView.start && bodyVisible()) { // !currentView.start makes sure this never happens more than once
				renderView();
			}
		},0);
	}
	
	
	function destroy() {
		$(window).unbind('resize', windowResize);
		header.destroy();
		content.remove();
		element.removeClass('fc fc-rtl ui-widget');
	}
	
	
	
	function elementVisible() {
		return _element.offsetWidth !== 0;
	}
	
	
	function bodyVisible() {
		return $('body')[0].offsetWidth !== 0;
	}
	
	
	
	/* View Rendering
	-----------------------------------------------------------------------------*/
	
	// TODO: improve view switching (still weird transition in IE, and FF has whiteout problem)
	
	function changeView(newViewName) {
		if (!currentView || newViewName != currentView.name) {
			ignoreWindowResize++; // because setMinHeight might change the height before render (and subsequently setSize) is reached

			unselect();
			
			var oldView = currentView;
			var newViewElement;
				
			if (oldView) {
				(oldView.beforeHide || noop)(); // called before changing min-height. if called after, scroll state is reset (in Opera)
				setMinHeight(content, content.height());
				oldView.element.hide();
			}else{
				setMinHeight(content, 1); // needs to be 1 (not 0) for IE7, or else view dimensions miscalculated
			}
			content.css('overflow', 'hidden');
			
			currentView = viewInstances[newViewName];
			if (currentView) {
				currentView.element.show();
			}else{
				currentView = viewInstances[newViewName] = new fcViews[newViewName](
					newViewElement = absoluteViewElement =
						$("<div class='fc-view fc-view-" + newViewName + "' style='position:absolute'/>")
							.appendTo(content),
					t // the calendar object
				);
			}
			
			if (oldView) {
				header.deactivateButton(oldView.name);
			}
			header.activateButton(newViewName);
			
			renderView(); // after height has been set, will make absoluteViewElement's position=relative, then set to null
			
			content.css('overflow', '');
			if (oldView) {
				setMinHeight(content, 1);
			}
			
			if (!newViewElement) {
				(currentView.afterShow || noop)(); // called after setting min-height/overflow, so in final scroll state (for Opera)
			}
			
			ignoreWindowResize--;
		}
	}
	
	
	
	function renderView(inc) {
		if (elementVisible()) {
			ignoreWindowResize++; // because renderEvents might temporarily change the height before setSize is reached

			unselect();
			
			if (suggestedViewHeight === undefined) {
				calcSize();
			}
			
			var forceEventRender = false;
			if (!currentView.start || inc || date < currentView.start || date >= currentView.end) {
				// view must render an entire new date range (and refetch/render events)
				currentView.render(date, inc || 0); // responsible for clearing events
				setSize(true);
				forceEventRender = true;
			}
			else if (currentView.sizeDirty) {
				// view must resize (and rerender events)
				currentView.clearEvents();
				setSize();
				forceEventRender = true;
			}
			else if (currentView.eventsDirty) {
				currentView.clearEvents();
				forceEventRender = true;
			}
			currentView.sizeDirty = false;
			currentView.eventsDirty = false;
			updateEvents(forceEventRender);
			
			elementOuterWidth = element.outerWidth();
			
			header.updateTitle(currentView.title);
			var today = new Date();
			if (today >= currentView.start && today < currentView.end) {
				header.disableButton('today');
			}else{
				header.enableButton('today');
			}
			
			ignoreWindowResize--;
			currentView.trigger('viewDisplay', _element);
		}
	}
	
	
	
	/* Resizing
	-----------------------------------------------------------------------------*/
	
	
	function updateSize() {
		markSizesDirty();
		if (elementVisible()) {
			calcSize();
			setSize();
			unselect();
			currentView.clearEvents();
			currentView.renderEvents(events);
			currentView.sizeDirty = false;
		}
	}
	
	
	function markSizesDirty() {
		$.each(viewInstances, function(i, inst) {
			inst.sizeDirty = true;
		});
	}
	
	
	function calcSize() {
		if (options.contentHeight) {
			suggestedViewHeight = options.contentHeight;
		}
		else if (options.height) {
			suggestedViewHeight = options.height - (headerElement ? headerElement.height() : 0) - vsides(content);
		}
		else {
			suggestedViewHeight = Math.round(content.width() / Math.max(options.aspectRatio, .5));
		}
	}
	
	
	function setSize(dateChanged) { // todo: dateChanged?
		ignoreWindowResize++;
		currentView.setHeight(suggestedViewHeight, dateChanged);
		if (absoluteViewElement) {
			absoluteViewElement.css('position', 'relative');
			absoluteViewElement = null;
		}
		currentView.setWidth(content.width(), dateChanged);
		ignoreWindowResize--;
	}
	
	
	function windowResize() {
		if (!ignoreWindowResize) {
			if (currentView.start) { // view has already been rendered
				var uid = ++resizeUID;
				setTimeout(function() { // add a delay
					if (uid == resizeUID && !ignoreWindowResize && elementVisible()) {
						if (elementOuterWidth != (elementOuterWidth = element.outerWidth())) {
							ignoreWindowResize++; // in case the windowResize callback changes the height
							updateSize();
							currentView.trigger('windowResize', _element);
							ignoreWindowResize--;
						}
					}
				}, 200);
			}else{
				// calendar must have been initialized in a 0x0 iframe that has just been resized
				lateRender();
			}
		}
	}
	
	
	
	/* Event Fetching/Rendering
	-----------------------------------------------------------------------------*/
	
	
	// fetches events if necessary, rerenders events if necessary (or if forced)
	function updateEvents(forceRender) {
		if (!options.lazyFetching || isFetchNeeded(currentView.visStart, currentView.visEnd)) {
			refetchEvents();
		}
		else if (forceRender) {
			rerenderEvents();
		}
	}
	
	
	function refetchEvents() {
		fetchEvents(currentView.visStart, currentView.visEnd); // will call reportEvents
	}
	
	
	// called when event data arrives
	function reportEvents(_events) {
		events = _events;
		rerenderEvents();
	}
	
	
	// called when a single event's data has been changed
	function reportEventChange(eventID) {
		rerenderEvents(eventID);
	}
	
	
	// attempts to rerenderEvents
	function rerenderEvents(modifiedEventID) {
		markEventsDirty();
		if (elementVisible()) {
			currentView.clearEvents();
			currentView.renderEvents(events, modifiedEventID);
			currentView.eventsDirty = false;
		}
	}
	
	
	function markEventsDirty() {
		$.each(viewInstances, function(i, inst) {
			inst.eventsDirty = true;
		});
	}
	


	/* Selection
	-----------------------------------------------------------------------------*/
	

	function select(start, end, allDay) {
		currentView.select(start, end, allDay===undefined ? true : allDay);
	}
	

	function unselect() { // safe to be called before renderView
		if (currentView) {
			currentView.unselect();
		}
	}
	
	
	
	/* Date
	-----------------------------------------------------------------------------*/
	
	
	function prev() {
		renderView(-1);
	}
	
	
	function next() {
		renderView(1);
	}
	
	
	function prevYear() {
		addYears(date, -1);
		renderView();
	}
	
	
	function nextYear() {
		addYears(date, 1);
		renderView();
	}
	
	
	function today() {
		date = new Date();
		renderView();
	}
	
	
	function gotoDate(year, month, dateOfMonth) {
		if (year instanceof Date) {
			date = cloneDate(year); // provided 1 argument, a Date
		}else{
			setYMD(date, year, month, dateOfMonth);
		}
		renderView();
	}
	
	
	function incrementDate(years, months, days) {
		if (years !== undefined) {
			addYears(date, years);
		}
		if (months !== undefined) {
			addMonths(date, months);
		}
		if (days !== undefined) {
			addDays(date, days);
		}
		renderView();
	}
	
	
	function getDate() {
		return cloneDate(date);
	}
	
	
	
	/* Misc
	-----------------------------------------------------------------------------*/
	
	
	function getView() {
		return currentView;
	}
	
	
	function option(name, value) {
		if (value === undefined) {
			return options[name];
		}
		if (name == 'height' || name == 'contentHeight' || name == 'aspectRatio') {
			options[name] = value;
			updateSize();
		}
	}
	
	
	function trigger(name, thisObj) {
		if (options[name]) {
			return options[name].apply(
				thisObj || _element,
				Array.prototype.slice.call(arguments, 2)
			);
		}
	}
	
	
	
	/* External Dragging
	------------------------------------------------------------------------*/
	
	if (options.droppable) {
		$(document)
			.bind('dragstart', function(ev, ui) {
				var _e = ev.target;
				var e = $(_e);
				if (!e.parents('.fc').length) { // not already inside a calendar
					var accept = options.dropAccept;
					if ($.isFunction(accept) ? accept.call(_e, e) : e.is(accept)) {
						_dragElement = _e;
						currentView.dragStart(_dragElement, ev, ui);
					}
				}
			})
			.bind('dragstop', function(ev, ui) {
				if (_dragElement) {
					currentView.dragStop(_dragElement, ev, ui);
					_dragElement = null;
				}
			});
	}
	

}

function Header(calendar, options) {
	var t = this;
	
	
	// exports
	t.render = render;
	t.destroy = destroy;
	t.updateTitle = updateTitle;
	t.activateButton = activateButton;
	t.deactivateButton = deactivateButton;
	t.disableButton = disableButton;
	t.enableButton = enableButton;
	
	
	// locals
	var element = $([]);
	var tm;
	


	function render() {
		tm = options.theme ? 'ui' : 'fc';
		var sections = options.header;
		if (sections) {
			element = $("<table class='fc-header' style='width:100%'/>")
				.append(
					$("<tr/>")
						.append(renderSection('left'))
						.append(renderSection('center'))
						.append(renderSection('right'))
				);
			return element;
		}
	}
	
	
	function destroy() {
		element.remove();
	}
	
	
	function renderSection(position) {
		var e = $("<td class='fc-header-" + position + "'/>");
		var buttonStr = options.header[position];
		if (buttonStr) {
			$.each(buttonStr.split(' '), function(i) {
				if (i > 0) {
					e.append("<span class='fc-header-space'/>");
				}
				var prevButton;
				$.each(this.split(','), function(j, buttonName) {
					if (buttonName == 'title') {
						e.append("<span class='fc-header-title'><h2>&nbsp;</h2></span>");
						if (prevButton) {
							prevButton.addClass(tm + '-corner-right');
						}
						prevButton = null;
					}else{
						var buttonClick;
						if (calendar[buttonName]) {
							buttonClick = calendar[buttonName]; // calendar method
						}
						else if (fcViews[buttonName]) {
							buttonClick = function() {
								button.removeClass(tm + '-state-hover'); // forget why
								calendar.changeView(buttonName);
							};
						}
						if (buttonClick) {
							var icon = options.theme ? smartProperty(options.buttonIcons, buttonName) : null; // why are we using smartProperty here?
							var text = smartProperty(options.buttonText, buttonName); // why are we using smartProperty here?
							var button = $(
								"<span class='fc-button fc-button-" + buttonName + " " + tm + "-state-default'>" +
									"<span class='fc-button-inner'>" +
										"<span class='fc-button-content'>" +
											(icon ?
												"<span class='fc-icon-wrap'>" +
													"<span class='ui-icon ui-icon-" + icon + "'/>" +
												"</span>" :
												text
												) +
										"</span>" +
										"<span class='fc-button-effect'><span></span></span>" +
									"</span>" +
								"</span>"
							);
							if (button) {
								button
									.click(function() {
										if (!button.hasClass(tm + '-state-disabled')) {
											buttonClick();
										}
									})
									.mousedown(function() {
										button
											.not('.' + tm + '-state-active')
											.not('.' + tm + '-state-disabled')
											.addClass(tm + '-state-down');
									})
									.mouseup(function() {
										button.removeClass(tm + '-state-down');
									})
									.hover(
										function() {
											button
												.not('.' + tm + '-state-active')
												.not('.' + tm + '-state-disabled')
												.addClass(tm + '-state-hover');
										},
										function() {
											button
												.removeClass(tm + '-state-hover')
												.removeClass(tm + '-state-down');
										}
									)
									.appendTo(e);
								if (!prevButton) {
									button.addClass(tm + '-corner-left');
								}
								prevButton = button;
							}
						}
					}
				});
				if (prevButton) {
					prevButton.addClass(tm + '-corner-right');
				}
			});
		}
		return e;
	}
	
	
	function updateTitle(html) {
		element.find('h2')
			.html(html);
	}
	
	
	function activateButton(buttonName) {
		element.find('span.fc-button-' + buttonName)
			.addClass(tm + '-state-active');
	}
	
	
	function deactivateButton(buttonName) {
		element.find('span.fc-button-' + buttonName)
			.removeClass(tm + '-state-active');
	}
	
	
	function disableButton(buttonName) {
		element.find('span.fc-button-' + buttonName)
			.addClass(tm + '-state-disabled');
	}
	
	
	function enableButton(buttonName) {
		element.find('span.fc-button-' + buttonName)
			.removeClass(tm + '-state-disabled');
	}


}

fc.sourceNormalizers = [];
fc.sourceFetchers = [];

var ajaxDefaults = {
	dataType: 'json',
	cache: false
};

var eventGUID = 1;


function EventManager(options, _sources) {
	var t = this;
	
	
	// exports
	t.isFetchNeeded = isFetchNeeded;
	t.fetchEvents = fetchEvents;
	t.addEventSource = addEventSource;
	t.removeEventSource = removeEventSource;
	t.updateEvent = updateEvent;
	t.renderEvent = renderEvent;
	t.removeEvents = removeEvents;
	t.clientEvents = clientEvents;
	t.normalizeEvent = normalizeEvent;
	
	
	// imports
	var trigger = t.trigger;
	var getView = t.getView;
	var reportEvents = t.reportEvents;
	
	
	// locals
	var stickySource = { events: [] };
	var sources = [ stickySource ];
	var rangeStart, rangeEnd;
	var currentFetchID = 0;
	var pendingSourceCnt = 0;
	var loadingLevel = 0;
	var cache = [];
	
	
	for (var i=0; i<_sources.length; i++) {
		_addEventSource(_sources[i]);
	}
	
	
	
	/* Fetching
	-----------------------------------------------------------------------------*/
	
	
	function isFetchNeeded(start, end) {
		return !rangeStart || start < rangeStart || end > rangeEnd;
	}
	
	
	function fetchEvents(start, end) {
		rangeStart = start;
		rangeEnd = end;
		cache = [];
		var fetchID = ++currentFetchID;
		var len = sources.length;
		pendingSourceCnt = len;
		for (var i=0; i<len; i++) {
			fetchEventSource(sources[i], fetchID);
		}
	}
	
	
	function fetchEventSource(source, fetchID) {
		_fetchEventSource(source, function(events) {
			if (fetchID == currentFetchID) {
				if (events) {
					for (var i=0; i<events.length; i++) {
						events[i].source = source;
						normalizeEvent(events[i]);
					}
					cache = cache.concat(events);
				}
				pendingSourceCnt--;
				if (!pendingSourceCnt) {
					reportEvents(cache);
				}
			}
		});
	}
	
	
	function _fetchEventSource(source, callback) {
		var i;
		var fetchers = fc.sourceFetchers;
		var res;
		for (i=0; i<fetchers.length; i++) {
			res = fetchers[i](source, rangeStart, rangeEnd, callback);
			if (res === true) {
				// the fetcher is in charge. made its own async request
				return;
			}
			else if (typeof res == 'object') {
				// the fetcher returned a new source. process it
				_fetchEventSource(res, callback);
				return;
			}
		}
		var events = source.events;
		if (events) {
			if ($.isFunction(events)) {
				pushLoading();
				events(cloneDate(rangeStart), cloneDate(rangeEnd), function(events) {
					callback(events);
					popLoading();
				});
			}
			else if ($.isArray(events)) {
				callback(events);
			}
			else {
				callback();
			}
		}else{
			var url = source.url;
			if (url) {
				var success = source.success;
				var error = source.error;
				var complete = source.complete;
				var data = $.extend({}, source.data || {});
				var startParam = firstDefined(source.startParam, options.startParam);
				var endParam = firstDefined(source.endParam, options.endParam);
				if (startParam) {
					data[startParam] = Math.round(+rangeStart / 1000);
				}
				if (endParam) {
					data[endParam] = Math.round(+rangeEnd / 1000);
				}
				pushLoading();
				$.ajax($.extend({}, ajaxDefaults, source, {
					data: data,
					success: function(events) {
						events = events || [];
						var res = applyAll(success, this, arguments);
						if ($.isArray(res)) {
							events = res;
						}
						callback(events);
					},
					error: function() {
						applyAll(error, this, arguments);
						callback();
					},
					complete: function() {
						applyAll(complete, this, arguments);
						popLoading();
					}
				}));
			}else{
				callback();
			}
		}
	}
	
	
	
	/* Sources
	-----------------------------------------------------------------------------*/
	

	function addEventSource(source) {
		source = _addEventSource(source);
		if (source) {
			pendingSourceCnt++;
			fetchEventSource(source, currentFetchID); // will eventually call reportEvents
		}
	}
	
	
	function _addEventSource(source) {
		if ($.isFunction(source) || $.isArray(source)) {
			source = { events: source };
		}
		else if (typeof source == 'string') {
			source = { url: source };
		}
		if (typeof source == 'object') {
			normalizeSource(source);
			sources.push(source);
			return source;
		}
	}
	

	function removeEventSource(source) {
		sources = $.grep(sources, function(src) {
			return !isSourcesEqual(src, source);
		});
		// remove all client events from that source
		cache = $.grep(cache, function(e) {
			return !isSourcesEqual(e.source, source);
		});
		reportEvents(cache);
	}
	
	
	
	/* Manipulation
	-----------------------------------------------------------------------------*/
	
	
	function updateEvent(event) { // update an existing event
		var i, len = cache.length, e,
			defaultEventEnd = getView().defaultEventEnd, // getView???
			startDelta = event.start - event._start,
			endDelta = event.end ?
				(event.end - (event._end || defaultEventEnd(event))) // event._end would be null if event.end
				: 0;                                                      // was null and event was just resized
		for (i=0; i<len; i++) {
			e = cache[i];
			if (e._id == event._id && e != event) {
				e.start = new Date(+e.start + startDelta);
				if (event.end) {
					if (e.end) {
						e.end = new Date(+e.end + endDelta);
					}else{
						e.end = new Date(+defaultEventEnd(e) + endDelta);
					}
				}else{
					e.end = null;
				}
				e.title = event.title;
				e.url = event.url;
				e.allDay = event.allDay;
				e.className = event.className;
				e.editable = event.editable;
				e.color = event.color;
				e.backgroudColor = event.backgroudColor;
				e.borderColor = event.borderColor;
				e.textColor = event.textColor;
				normalizeEvent(e);
			}
		}
		normalizeEvent(event);
		reportEvents(cache);
	}
	
	
	function renderEvent(event, stick) {
		normalizeEvent(event);
		if (!event.source) {
			if (stick) {
				stickySource.events.push(event);
				event.source = stickySource;
			}
			cache.push(event);
		}
		reportEvents(cache);
	}
	
	
	function removeEvents(filter) {
		if (!filter) { // remove all
			cache = [];
			// clear all array sources
			for (var i=0; i<sources.length; i++) {
				if ($.isArray(sources[i].events)) {
					sources[i].events = [];
				}
			}
		}else{
			if (!$.isFunction(filter)) { // an event ID
				var id = filter + '';
				filter = function(e) {
					return e._id == id;
				};
			}
			cache = $.grep(cache, filter, true);
			// remove events from array sources
			for (var i=0; i<sources.length; i++) {
				if ($.isArray(sources[i].events)) {
					sources[i].events = $.grep(sources[i].events, filter, true);
				}
			}
		}
		reportEvents(cache);
	}
	
	
	function clientEvents(filter) {
		if ($.isFunction(filter)) {
			return $.grep(cache, filter);
		}
		else if (filter) { // an event ID
			filter += '';
			return $.grep(cache, function(e) {
				return e._id == filter;
			});
		}
		return cache; // else, return all
	}
	
	
	
	/* Loading State
	-----------------------------------------------------------------------------*/
	
	
	function pushLoading() {
		if (!loadingLevel++) {
			trigger('loading', null, true);
		}
	}
	
	
	function popLoading() {
		if (!--loadingLevel) {
			trigger('loading', null, false);
		}
	}
	
	
	
	/* Event Normalization
	-----------------------------------------------------------------------------*/
	
	
	function normalizeEvent(event) {
		var source = event.source || {};
		var ignoreTimezone = firstDefined(source.ignoreTimezone, options.ignoreTimezone);
		event._id = event._id || (event.id === undefined ? '_fc' + eventGUID++ : event.id + '');
		if (event.date) {
			if (!event.start) {
				event.start = event.date;
			}
			delete event.date;
		}
		event._start = cloneDate(event.start = parseDate(event.start, ignoreTimezone));
		event.end = parseDate(event.end, ignoreTimezone);
		if (event.end && event.end <= event.start) {
			event.end = null;
		}
		event._end = event.end ? cloneDate(event.end) : null;
		if (event.allDay === undefined) {
			event.allDay = firstDefined(source.allDayDefault, options.allDayDefault);
		}
		if (event.className) {
			if (typeof event.className == 'string') {
				event.className = event.className.split(/\s+/);
			}
		}else{
			event.className = [];
		}
		// TODO: if there is no start date, return false to indicate an invalid event
	}
	
	
	
	/* Utils
	------------------------------------------------------------------------------*/
	
	
	function normalizeSource(source) {
		if (source.className) {
			// TODO: repeat code, same code for event classNames
			if (typeof source.className == 'string') {
				source.className = source.className.split(/\s+/);
			}
		}else{
			source.className = [];
		}
		var normalizers = fc.sourceNormalizers;
		for (var i=0; i<normalizers.length; i++) {
			normalizers[i](source);
		}
	}
	
	
	function isSourcesEqual(source1, source2) {
		return source1 && source2 && getSourcePrimitive(source1) == getSourcePrimitive(source2);
	}
	
	
	function getSourcePrimitive(source) {
		return ((typeof source == 'object') ? (source.events || source.url) : '') || source;
	}


}


fc.addDays = addDays;
fc.cloneDate = cloneDate;
fc.parseDate = parseDate;
fc.parseISO8601 = parseISO8601;
fc.parseTime = parseTime;
fc.formatDate = formatDate;
fc.formatDates = formatDates;



/* Date Math
-----------------------------------------------------------------------------*/

var dayIDs = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'],
	DAY_MS = 86400000,
	HOUR_MS = 3600000,
	MINUTE_MS = 60000;
	

function addYears(d, n, keepTime) {
	d.setFullYear(d.getFullYear() + n);
	if (!keepTime) {
		clearTime(d);
	}
	return d;
}


function addMonths(d, n, keepTime) { // prevents day overflow/underflow
	if (+d) { // prevent infinite looping on invalid dates
		var m = d.getMonth() + n,
			check = cloneDate(d);
		check.setDate(1);
		check.setMonth(m);
		d.setMonth(m);
		if (!keepTime) {
			clearTime(d);
		}
		while (d.getMonth() != check.getMonth()) {
			d.setDate(d.getDate() + (d < check ? 1 : -1));
		}
	}
	return d;
}


function addDays(d, n, keepTime) { // deals with daylight savings
	if (+d) {
		var dd = d.getDate() + n,
			check = cloneDate(d);
		check.setHours(9); // set to middle of day
		check.setDate(dd);
		d.setDate(dd);
		if (!keepTime) {
			clearTime(d);
		}
		fixDate(d, check);
	}
	return d;
}


function fixDate(d, check) { // force d to be on check's YMD, for daylight savings purposes
	if (+d) { // prevent infinite looping on invalid dates
		while (d.getDate() != check.getDate()) {
			d.setTime(+d + (d < check ? 1 : -1) * HOUR_MS);
		}
	}
}


function addMinutes(d, n) {
	d.setMinutes(d.getMinutes() + n);
	return d;
}


function clearTime(d) {
	d.setHours(0);
	d.setMinutes(0);
	d.setSeconds(0); 
	d.setMilliseconds(0);
	return d;
}


function cloneDate(d, dontKeepTime) {
	if (dontKeepTime) {
		return clearTime(new Date(+d));
	}
	return new Date(+d);
}


function zeroDate() { // returns a Date with time 00:00:00 and dateOfMonth=1
	var i=0, d;
	do {
		d = new Date(1970, i++, 1);
	} while (d.getHours()); // != 0
	return d;
}


function skipWeekend(date, inc, excl) {
	inc = inc || 1;
	while (!date.getDay() || (excl && date.getDay()==1 || !excl && date.getDay()==6)) {
		addDays(date, inc);
	}
	return date;
}


function dayDiff(d1, d2) { // d1 - d2
	return Math.round((cloneDate(d1, true) - cloneDate(d2, true)) / DAY_MS);
}


function setYMD(date, y, m, d) {
	if (y !== undefined && y != date.getFullYear()) {
		date.setDate(1);
		date.setMonth(0);
		date.setFullYear(y);
	}
	if (m !== undefined && m != date.getMonth()) {
		date.setDate(1);
		date.setMonth(m);
	}
	if (d !== undefined) {
		date.setDate(d);
	}
}



/* Date Parsing
-----------------------------------------------------------------------------*/


function parseDate(s, ignoreTimezone) { // ignoreTimezone defaults to true
	if (typeof s == 'object') { // already a Date object
		return s;
	}
	if (typeof s == 'number') { // a UNIX timestamp
		return new Date(s * 1000);
	}
	if (typeof s == 'string') {
		if (s.match(/^\d+(\.\d+)?$/)) { // a UNIX timestamp
			return new Date(parseFloat(s) * 1000);
		}
		if (ignoreTimezone === undefined) {
			ignoreTimezone = true;
		}
		return parseISO8601(s, ignoreTimezone) || (s ? new Date(s) : null);
	}
	// TODO: never return invalid dates (like from new Date(<string>)), return null instead
	return null;
}


function parseISO8601(s, ignoreTimezone) { // ignoreTimezone defaults to false
	// derived from http://delete.me.uk/2005/03/iso8601.html
	// TODO: for a know glitch/feature, read tests/issue_206_parseDate_dst.html
	var m = s.match(/^([0-9]{4})(-([0-9]{2})(-([0-9]{2})([T ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\.([0-9]+))?)?(Z|(([-+])([0-9]{2})(:?([0-9]{2}))?))?)?)?)?$/);
	if (!m) {
		return null;
	}
	var date = new Date(m[1], 0, 1);
	if (ignoreTimezone || !m[13]) {
		var check = new Date(m[1], 0, 1, 9, 0);
		if (m[3]) {
			date.setMonth(m[3] - 1);
			check.setMonth(m[3] - 1);
		}
		if (m[5]) {
			date.setDate(m[5]);
			check.setDate(m[5]);
		}
		fixDate(date, check);
		if (m[7]) {
			date.setHours(m[7]);
		}
		if (m[8]) {
			date.setMinutes(m[8]);
		}
		if (m[10]) {
			date.setSeconds(m[10]);
		}
		if (m[12]) {
			date.setMilliseconds(Number("0." + m[12]) * 1000);
		}
		fixDate(date, check);
	}else{
		date.setUTCFullYear(
			m[1],
			m[3] ? m[3] - 1 : 0,
			m[5] || 1
		);
		date.setUTCHours(
			m[7] || 0,
			m[8] || 0,
			m[10] || 0,
			m[12] ? Number("0." + m[12]) * 1000 : 0
		);
		if (m[14]) {
			var offset = Number(m[16]) * 60 + (m[18] ? Number(m[18]) : 0);
			offset *= m[15] == '-' ? 1 : -1;
			date = new Date(+date + (offset * 60 * 1000));
		}
	}
	return date;
}


function parseTime(s) { // returns minutes since start of day
	if (typeof s == 'number') { // an hour
		return s * 60;
	}
	if (typeof s == 'object') { // a Date object
		return s.getHours() * 60 + s.getMinutes();
	}
	var m = s.match(/(\d+)(?::(\d+))?\s*(\w+)?/);
	if (m) {
		var h = parseInt(m[1], 10);
		if (m[3]) {
			h %= 12;
			if (m[3].toLowerCase().charAt(0) == 'p') {
				h += 12;
			}
		}
		return h * 60 + (m[2] ? parseInt(m[2], 10) : 0);
	}
}



/* Date Formatting
-----------------------------------------------------------------------------*/
// TODO: use same function formatDate(date, [date2], format, [options])


function formatDate(date, format, options) {
	return formatDates(date, null, format, options);
}


function formatDates(date1, date2, format, options) {
	options = options || defaults;
	var date = date1,
		otherDate = date2,
		i, len = format.length, c,
		i2, formatter,
		res = '';
	for (i=0; i<len; i++) {
		c = format.charAt(i);
		if (c == "'") {
			for (i2=i+1; i2<len; i2++) {
				if (format.charAt(i2) == "'") {
					if (date) {
						if (i2 == i+1) {
							res += "'";
						}else{
							res += format.substring(i+1, i2);
						}
						i = i2;
					}
					break;
				}
			}
		}
		else if (c == '(') {
			for (i2=i+1; i2<len; i2++) {
				if (format.charAt(i2) == ')') {
					var subres = formatDate(date, format.substring(i+1, i2), options);
					if (parseInt(subres.replace(/\D/, ''), 10)) {
						res += subres;
					}
					i = i2;
					break;
				}
			}
		}
		else if (c == '[') {
			for (i2=i+1; i2<len; i2++) {
				if (format.charAt(i2) == ']') {
					var subformat = format.substring(i+1, i2);
					var subres = formatDate(date, subformat, options);
					if (subres != formatDate(otherDate, subformat, options)) {
						res += subres;
					}
					i = i2;
					break;
				}
			}
		}
		else if (c == '{') {
			date = date2;
			otherDate = date1;
		}
		else if (c == '}') {
			date = date1;
			otherDate = date2;
		}
		else {
			for (i2=len; i2>i; i2--) {
				if (formatter = dateFormatters[format.substring(i, i2)]) {
					if (date) {
						res += formatter(date, options);
					}
					i = i2 - 1;
					break;
				}
			}
			if (i2 == i) {
				if (date) {
					res += c;
				}
			}
		}
	}
	return res;
};


var dateFormatters = {
	s	: function(d)	{ return d.getSeconds() },
	ss	: function(d)	{ return zeroPad(d.getSeconds()) },
	m	: function(d)	{ return d.getMinutes() },
	mm	: function(d)	{ return zeroPad(d.getMinutes()) },
	h	: function(d)	{ return d.getHours() % 12 || 12 },
	hh	: function(d)	{ return zeroPad(d.getHours() % 12 || 12) },
	H	: function(d)	{ return d.getHours() },
	HH	: function(d)	{ return zeroPad(d.getHours()) },
	d	: function(d)	{ return d.getDate() },
	dd	: function(d)	{ return zeroPad(d.getDate()) },
	ddd	: function(d,o)	{ return o.dayNamesShort[d.getDay()] },
	dddd: function(d,o)	{ return o.dayNames[d.getDay()] },
	M	: function(d)	{ return d.getMonth() + 1 },
	MM	: function(d)	{ return zeroPad(d.getMonth() + 1) },
	MMM	: function(d,o)	{ return o.monthNamesShort[d.getMonth()] },
	MMMM: function(d,o)	{ return o.monthNames[d.getMonth()] },
	yy	: function(d)	{ return (d.getFullYear()+'').substring(2) },
	yyyy: function(d)	{ return d.getFullYear() },
	t	: function(d)	{ return d.getHours() < 12 ? 'a' : 'p' },
	tt	: function(d)	{ return d.getHours() < 12 ? 'am' : 'pm' },
	T	: function(d)	{ return d.getHours() < 12 ? 'A' : 'P' },
	TT	: function(d)	{ return d.getHours() < 12 ? 'AM' : 'PM' },
	u	: function(d)	{ return formatDate(d, "yyyy-MM-dd'T'HH:mm:ss'Z'") },
	S	: function(d)	{
		var date = d.getDate();
		if (date > 10 && date < 20) {
			return 'th';
		}
		return ['st', 'nd', 'rd'][date%10-1] || 'th';
	}
};



fc.applyAll = applyAll;


/* Event Date Math
-----------------------------------------------------------------------------*/


function exclEndDay(event) {
	if (event.end) {
		return _exclEndDay(event.end, event.allDay);
	}else{
		return addDays(cloneDate(event.start), 1);
	}
}


function _exclEndDay(end, allDay) {
	end = cloneDate(end);
	return allDay || end.getHours() || end.getMinutes() ? addDays(end, 1) : clearTime(end);
}


function segCmp(a, b) {
	return (b.msLength - a.msLength) * 100 + (a.event.start - b.event.start);
}


function segsCollide(seg1, seg2) {
	return seg1.end > seg2.start && seg1.start < seg2.end;
}



/* Event Sorting
-----------------------------------------------------------------------------*/


// event rendering utilities
function sliceSegs(events, visEventEnds, start, end) {
	var segs = [],
		i, len=events.length, event,
		eventStart, eventEnd,
		segStart, segEnd,
		isStart, isEnd;
	for (i=0; i<len; i++) {
		event = events[i];
		eventStart = event.start;
		eventEnd = visEventEnds[i];
		if (eventEnd > start && eventStart < end) {
			if (eventStart < start) {
				segStart = cloneDate(start);
				isStart = false;
			}else{
				segStart = eventStart;
				isStart = true;
			}
			if (eventEnd > end) {
				segEnd = cloneDate(end);
				isEnd = false;
			}else{
				segEnd = eventEnd;
				isEnd = true;
			}
			segs.push({
				event: event,
				start: segStart,
				end: segEnd,
				isStart: isStart,
				isEnd: isEnd,
				msLength: segEnd - segStart
			});
		}
	} 
	return segs.sort(segCmp);
}


// event rendering calculation utilities
function stackSegs(segs) {
	var levels = [],
		i, len = segs.length, seg,
		j, collide, k;
	for (i=0; i<len; i++) {
		seg = segs[i];
		j = 0; // the level index where seg should belong
		while (true) {
			collide = false;
			if (levels[j]) {
				for (k=0; k<levels[j].length; k++) {
					if (segsCollide(levels[j][k], seg)) {
						collide = true;
						break;
					}
				}
			}
			if (collide) {
				j++;
			}else{
				break;
			}
		}
		if (levels[j]) {
			levels[j].push(seg);
		}else{
			levels[j] = [seg];
		}
	}
	return levels;
}



/* Event Element Binding
-----------------------------------------------------------------------------*/


function lazySegBind(container, segs, bindHandlers) {
	container.unbind('mouseover').mouseover(function(ev) {
		var parent=ev.target, e,
			i, seg;
		while (parent != this) {
			e = parent;
			parent = parent.parentNode;
		}
		if ((i = e._fci) !== undefined) {
			e._fci = undefined;
			seg = segs[i];
			bindHandlers(seg.event, seg.element, seg);
			$(ev.target).trigger(ev);
		}
		ev.stopPropagation();
	});
}



/* Element Dimensions
-----------------------------------------------------------------------------*/


function setOuterWidth(element, width, includeMargins) {
	for (var i=0, e; i<element.length; i++) {
		e = $(element[i]);
		e.width(Math.max(0, width - hsides(e, includeMargins)));
	}
}


function setOuterHeight(element, height, includeMargins) {
	for (var i=0, e; i<element.length; i++) {
		e = $(element[i]);
		e.height(Math.max(0, height - vsides(e, includeMargins)));
	}
}


// TODO: curCSS has been deprecated (jQuery 1.4.3 - 10/16/2010)


function hsides(element, includeMargins) {
	return hpadding(element) + hborders(element) + (includeMargins ? hmargins(element) : 0);
}


function hpadding(element) {
	return (parseFloat($.curCSS(element[0], 'paddingLeft', true)) || 0) +
	       (parseFloat($.curCSS(element[0], 'paddingRight', true)) || 0);
}


function hmargins(element) {
	return (parseFloat($.curCSS(element[0], 'marginLeft', true)) || 0) +
	       (parseFloat($.curCSS(element[0], 'marginRight', true)) || 0);
}


function hborders(element) {
	return (parseFloat($.curCSS(element[0], 'borderLeftWidth', true)) || 0) +
	       (parseFloat($.curCSS(element[0], 'borderRightWidth', true)) || 0);
}


function vsides(element, includeMargins) {
	return vpadding(element) +  vborders(element) + (includeMargins ? vmargins(element) : 0);
}


function vpadding(element) {
	return (parseFloat($.curCSS(element[0], 'paddingTop', true)) || 0) +
	       (parseFloat($.curCSS(element[0], 'paddingBottom', true)) || 0);
}


function vmargins(element) {
	return (parseFloat($.curCSS(element[0], 'marginTop', true)) || 0) +
	       (parseFloat($.curCSS(element[0], 'marginBottom', true)) || 0);
}


function vborders(element) {
	return (parseFloat($.curCSS(element[0], 'borderTopWidth', true)) || 0) +
	       (parseFloat($.curCSS(element[0], 'borderBottomWidth', true)) || 0);
}


function setMinHeight(element, height) {
	height = (typeof height == 'number' ? height + 'px' : height);
	element.each(function(i, _element) {
		_element.style.cssText += ';min-height:' + height + ';_height:' + height;
		// why can't we just use .css() ? i forget
	});
}



/* Misc Utils
-----------------------------------------------------------------------------*/


//TODO: arraySlice
//TODO: isFunction, grep ?


function noop() { }


function cmp(a, b) {
	return a - b;
}


function arrayMax(a) {
	return Math.max.apply(Math, a);
}


function zeroPad(n) {
	return (n < 10 ? '0' : '') + n;
}


function smartProperty(obj, name) { // get a camel-cased/namespaced property of an object
	if (obj[name] !== undefined) {
		return obj[name];
	}
	var parts = name.split(/(?=[A-Z])/),
		i=parts.length-1, res;
	for (; i>=0; i--) {
		res = obj[parts[i].toLowerCase()];
		if (res !== undefined) {
			return res;
		}
	}
	return obj[''];
}


function htmlEscape(s) {
	return s.replace(/&/g, '&amp;')
		.replace(/</g, '&lt;')
		.replace(/>/g, '&gt;')
		.replace(/'/g, '&#039;')
		.replace(/"/g, '&quot;')
		.replace(/\n/g, '<br />');
}


function cssKey(_element) {
	return _element.id + '/' + _element.className + '/' + _element.style.cssText.replace(/(^|;)\s*(top|left|width|height)\s*:[^;]*/ig, '');
}


function disableTextSelection(element) {
	element
		.attr('unselectable', 'on')
		.css('MozUserSelect', 'none')
		.bind('selectstart.ui', function() { return false; });
}


/*
function enableTextSelection(element) {
	element
		.attr('unselectable', 'off')
		.css('MozUserSelect', '')
		.unbind('selectstart.ui');
}
*/


function markFirstLast(e) {
	e.children()
		.removeClass('fc-first fc-last')
		.filter(':first-child')
			.addClass('fc-first')
		.end()
		.filter(':last-child')
			.addClass('fc-last');
}


function setDayID(cell, date) {
	cell.each(function(i, _cell) {
		_cell.className = _cell.className.replace(/^fc-\w*/, 'fc-' + dayIDs[date.getDay()]);
		// TODO: make a way that doesn't rely on order of classes
	});
}


function getSkinCss(event, opt) {
	var source = event.source || {};
	var eventColor = event.color;
	var sourceColor = source.color;
	var optionColor = opt('eventColor');
	var backgroundColor =
		event.backgroundColor ||
		eventColor ||
		source.backgroundColor ||
		sourceColor ||
		opt('eventBackgroundColor') ||
		optionColor;
	var borderColor =
		event.borderColor ||
		eventColor ||
		source.borderColor ||
		sourceColor ||
		opt('eventBorderColor') ||
		optionColor;
	var textColor =
		event.textColor ||
		source.textColor ||
		opt('eventTextColor');
	var statements = [];
	if (backgroundColor) {
		statements.push('background-color:' + backgroundColor);
	}
	if (borderColor) {
		statements.push('border-color:' + borderColor);
	}
	if (textColor) {
		statements.push('color:' + textColor);
	}
	return statements.join(';');
}


function applyAll(functions, thisObj, args) {
	if ($.isFunction(functions)) {
		functions = [ functions ];
	}
	if (functions) {
		var i;
		var ret;
		for (i=0; i<functions.length; i++) {
			ret = functions[i].apply(thisObj, args) || ret;
		}
		return ret;
	}
}


function firstDefined() {
	for (var i=0; i<arguments.length; i++) {
		if (arguments[i] !== undefined) {
			return arguments[i];
		}
	}
}



fcViews.month = MonthView;

function MonthView(element, calendar) {
	var t = this;
	
	
	// exports
	t.render = render;
	
	
	// imports
	BasicView.call(t, element, calendar, 'month');
	var opt = t.opt;
	var renderBasic = t.renderBasic;
	var formatDate = calendar.formatDate;
	
	
	
	function render(date, delta) {
		if (delta) {
			addMonths(date, delta);
			date.setDate(1);
		}
		var start = cloneDate(date, true);
		start.setDate(1);
		var end = addMonths(cloneDate(start), 1);
		var visStart = cloneDate(start);
		var visEnd = cloneDate(end);
		var firstDay = opt('firstDay');
		var nwe = opt('weekends') ? 0 : 1;
		if (nwe) {
			skipWeekend(visStart);
			skipWeekend(visEnd, -1, true);
		}
		addDays(visStart, -((visStart.getDay() - Math.max(firstDay, nwe) + 7) % 7));
		addDays(visEnd, (7 - visEnd.getDay() + Math.max(firstDay, nwe)) % 7);
		var rowCnt = Math.round((visEnd - visStart) / (DAY_MS * 7));
		if (opt('weekMode') == 'fixed') {
			addDays(visEnd, (6 - rowCnt) * 7);
			rowCnt = 6;
		}
		t.title = formatDate(start, opt('titleFormat'));
		t.start = start;
		t.end = end;
		t.visStart = visStart;
		t.visEnd = visEnd;
		renderBasic(6, rowCnt, nwe ? 5 : 7, true);
	}
	
	
}

fcViews.basicWeek = BasicWeekView;

function BasicWeekView(element, calendar) {
	var t = this;
	
	
	// exports
	t.render = render;
	
	
	// imports
	BasicView.call(t, element, calendar, 'basicWeek');
	var opt = t.opt;
	var renderBasic = t.renderBasic;
	var formatDates = calendar.formatDates;
	
	
	
	function render(date, delta) {
		if (delta) {
			addDays(date, delta * 7);
		}
		var start = addDays(cloneDate(date), -((date.getDay() - opt('firstDay') + 7) % 7));
		var end = addDays(cloneDate(start), 7);
		var visStart = cloneDate(start);
		var visEnd = cloneDate(end);
		var weekends = opt('weekends');
		if (!weekends) {
			skipWeekend(visStart);
			skipWeekend(visEnd, -1, true);
		}
		t.title = formatDates(
			visStart,
			addDays(cloneDate(visEnd), -1),
			opt('titleFormat')
		);
		t.start = start;
		t.end = end;
		t.visStart = visStart;
		t.visEnd = visEnd;
		renderBasic(1, 1, weekends ? 7 : 5, false);
	}
	
	
}

fcViews.basicDay = BasicDayView;

//TODO: when calendar's date starts out on a weekend, shouldn't happen


function BasicDayView(element, calendar) {
	var t = this;
	
	
	// exports
	t.render = render;
	
	
	// imports
	BasicView.call(t, element, calendar, 'basicDay');
	var opt = t.opt;
	var renderBasic = t.renderBasic;
	var formatDate = calendar.formatDate;
	
	
	
	function render(date, delta) {
		if (delta) {
			addDays(date, delta);
			if (!opt('weekends')) {
				skipWeekend(date, delta < 0 ? -1 : 1);
			}
		}
		t.title = formatDate(date, opt('titleFormat'));
		t.start = t.visStart = cloneDate(date, true);
		t.end = t.visEnd = addDays(cloneDate(t.start), 1);
		renderBasic(1, 1, 1, false);
	}
	
	
}

setDefaults({
	weekMode: 'fixed'
});


function BasicView(element, calendar, viewName) {
	var t = this;
	
	
	// exports
	t.renderBasic = renderBasic;
	t.setHeight = setHeight;
	t.setWidth = setWidth;
	t.renderDayOverlay = renderDayOverlay;
	t.defaultSelectionEnd = defaultSelectionEnd;
	t.renderSelection = renderSelection;
	t.clearSelection = clearSelection;
	t.reportDayClick = reportDayClick; // for selection (kinda hacky)
	t.dragStart = dragStart;
	t.dragStop = dragStop;
	t.defaultEventEnd = defaultEventEnd;
	t.getHoverListener = function() { return hoverListener };
	t.colContentLeft = colContentLeft;
	t.colContentRight = colContentRight;
	t.dayOfWeekCol = dayOfWeekCol;
	t.dateCell = dateCell;
	t.cellDate = cellDate;
	t.cellIsAllDay = function() { return true };
	t.allDayRow = allDayRow;
	t.allDayBounds = allDayBounds;
	t.getRowCnt = function() { return rowCnt };
	t.getColCnt = function() { return colCnt };
	t.getColWidth = function() { return colWidth };
	t.getDaySegmentContainer = function() { return daySegmentContainer };
	
	
	// imports
	View.call(t, element, calendar, viewName);
	OverlayManager.call(t);
	SelectionManager.call(t);
	BasicEventRenderer.call(t);
	var opt = t.opt;
	var trigger = t.trigger;
	var clearEvents = t.clearEvents;
	var renderOverlay = t.renderOverlay;
	var clearOverlays = t.clearOverlays;
	var daySelectionMousedown = t.daySelectionMousedown;
	var formatDate = calendar.formatDate;
	
	
	// locals
	
	var head;
	var headCells;
	var body;
	var bodyRows;
	var bodyCells;
	var bodyFirstCells;
	var bodyCellTopInners;
	var daySegmentContainer;
	
	var viewWidth;
	var viewHeight;
	var colWidth;
	
	var rowCnt, colCnt;
	var coordinateGrid;
	var hoverListener;
	var colContentPositions;
	
	var rtl, dis, dit;
	var firstDay;
	var nwe;
	var tm;
	var colFormat;
	
	
	
	/* Rendering
	------------------------------------------------------------*/
	
	
	disableTextSelection(element.addClass('fc-grid'));
	
	
	function renderBasic(maxr, r, c, showNumbers) {
		rowCnt = r;
		colCnt = c;
		updateOptions();
		var firstTime = !body;
		if (firstTime) {
			buildSkeleton(maxr, showNumbers);
		}else{
			clearEvents();
		}
		updateCells(firstTime);
	}
	
	
	
	function updateOptions() {
		rtl = opt('isRTL');
		if (rtl) {
			dis = -1;
			dit = colCnt - 1;
		}else{
			dis = 1;
			dit = 0;
		}
		firstDay = opt('firstDay');
		nwe = opt('weekends') ? 0 : 1;
		tm = opt('theme') ? 'ui' : 'fc';
		colFormat = opt('columnFormat');
	}
	
	
	
	function buildSkeleton(maxRowCnt, showNumbers) {
		var s;
		var headerClass = tm + "-widget-header";
		var contentClass = tm + "-widget-content";
		var i, j;
		var table;
		
		s =
			"<table class='fc-border-separate' style='width:100%' cellspacing='0'>" +
			"<thead>" +
			"<tr>";
		for (i=0; i<colCnt; i++) {
			s +=
				"<th class='fc- " + headerClass + "'/>"; // need fc- for setDayID
		}
		s +=
			"</tr>" +
			"</thead>" +
			"<tbody>";
		for (i=0; i<maxRowCnt; i++) {
			s +=
				"<tr class='fc-week" + i + "'>";
			for (j=0; j<colCnt; j++) {
				s +=
					"<td class='fc- " + contentClass + " fc-day" + (i*colCnt+j) + "'>" + // need fc- for setDayID
					"<div>" +
					(showNumbers ?
						"<div class='fc-day-number'/>" :
						''
						) +
					"<div class='fc-day-content'>" +
					"<div style='position:relative'>&nbsp;</div>" +
					"</div>" +
					"</div>" +
					"</td>";
			}
			s +=
				"</tr>";
		}
		s +=
			"</tbody>" +
			"</table>";
		table = $(s).appendTo(element);
		
		head = table.find('thead');
		headCells = head.find('th');
		body = table.find('tbody');
		bodyRows = body.find('tr');
		bodyCells = body.find('td');
		bodyFirstCells = bodyCells.filter(':first-child');
		bodyCellTopInners = bodyRows.eq(0).find('div.fc-day-content div');
		
		markFirstLast(head.add(head.find('tr'))); // marks first+last tr/th's
		markFirstLast(bodyRows); // marks first+last td's
		bodyRows.eq(0).addClass('fc-first'); // fc-last is done in updateCells
		
		dayBind(bodyCells);
		
		daySegmentContainer =
			$("<div style='position:absolute;z-index:8;top:0;left:0'/>")
				.appendTo(element);
	}
	
	
	
	function updateCells(firstTime) {
		var dowDirty = firstTime || rowCnt == 1; // could the cells' day-of-weeks need updating?
		var month = t.start.getMonth();
		var today = clearTime(new Date());
		var cell;
		var date;
		var row;
	
		if (dowDirty) {
			headCells.each(function(i, _cell) {
				cell = $(_cell);
				date = indexDate(i);
				cell.html(formatDate(date, colFormat));
				setDayID(cell, date);
			});
		}
		
		bodyCells.each(function(i, _cell) {
			cell = $(_cell);
			date = indexDate(i);
			if (date.getMonth() == month) {
				cell.removeClass('fc-other-month');
			}else{
				cell.addClass('fc-other-month');
			}
			if (+date == +today) {
				cell.addClass(tm + '-state-highlight fc-today');
			}else{
				cell.removeClass(tm + '-state-highlight fc-today');
			}
			cell.find('div.fc-day-number').text(date.getDate());
			if (dowDirty) {
				setDayID(cell, date);
			}
		});
		
		bodyRows.each(function(i, _row) {
			row = $(_row);
			if (i < rowCnt) {
				row.show();
				if (i == rowCnt-1) {
					row.addClass('fc-last');
				}else{
					row.removeClass('fc-last');
				}
			}else{
				row.hide();
			}
		});
	}
	
	
	
	function setHeight(height) {
		viewHeight = height;
		
		var bodyHeight = viewHeight - head.height();
		var rowHeight;
		var rowHeightLast;
		var cell;
			
		if (opt('weekMode') == 'variable') {
			rowHeight = rowHeightLast = Math.floor(bodyHeight / (rowCnt==1 ? 2 : 6));
		}else{
			rowHeight = Math.floor(bodyHeight / rowCnt);
			rowHeightLast = bodyHeight - rowHeight * (rowCnt-1);
		}
		
		bodyFirstCells.each(function(i, _cell) {
			if (i < rowCnt) {
				cell = $(_cell);
				setMinHeight(
					cell.find('> div'),
					(i==rowCnt-1 ? rowHeightLast : rowHeight) - vsides(cell)
				);
			}
		});
		
	}
	
	
	function setWidth(width) {
		viewWidth = width;
		colContentPositions.clear();
		colWidth = Math.floor(viewWidth / colCnt);
		setOuterWidth(headCells.slice(0, -1), colWidth);
	}
	
	
	
	/* Day clicking and binding
	-----------------------------------------------------------*/
	
	
	function dayBind(days) {
		days.click(dayClick)
			.mousedown(daySelectionMousedown);
	}
	
	
	function dayClick(ev) {
		if (!opt('selectable')) { // if selectable, SelectionManager will worry about dayClick
			var index = parseInt(this.className.match(/fc\-day(\d+)/)[1]); // TODO: maybe use .data
			var date = indexDate(index);
			trigger('dayClick', this, date, true, ev);
		}
	}
	
	
	
	/* Semi-transparent Overlay Helpers
	------------------------------------------------------*/
	
	
	function renderDayOverlay(overlayStart, overlayEnd, refreshCoordinateGrid) { // overlayEnd is exclusive
		if (refreshCoordinateGrid) {
			coordinateGrid.build();
		}
		var rowStart = cloneDate(t.visStart);
		var rowEnd = addDays(cloneDate(rowStart), colCnt);
		for (var i=0; i<rowCnt; i++) {
			var stretchStart = new Date(Math.max(rowStart, overlayStart));
			var stretchEnd = new Date(Math.min(rowEnd, overlayEnd));
			if (stretchStart < stretchEnd) {
				var colStart, colEnd;
				if (rtl) {
					colStart = dayDiff(stretchEnd, rowStart)*dis+dit+1;
					colEnd = dayDiff(stretchStart, rowStart)*dis+dit+1;
				}else{
					colStart = dayDiff(stretchStart, rowStart);
					colEnd = dayDiff(stretchEnd, rowStart);
				}
				dayBind(
					renderCellOverlay(i, colStart, i, colEnd-1)
				);
			}
			addDays(rowStart, 7);
			addDays(rowEnd, 7);
		}
	}
	
	
	function renderCellOverlay(row0, col0, row1, col1) { // row1,col1 is inclusive
		var rect = coordinateGrid.rect(row0, col0, row1, col1, element);
		return renderOverlay(rect, element);
	}
	
	
	
	/* Selection
	-----------------------------------------------------------------------*/
	
	
	function defaultSelectionEnd(startDate, allDay) {
		return cloneDate(startDate);
	}
	
	
	function renderSelection(startDate, endDate, allDay) {
		renderDayOverlay(startDate, addDays(cloneDate(endDate), 1), true); // rebuild every time???
	}
	
	
	function clearSelection() {
		clearOverlays();
	}
	
	
	function reportDayClick(date, allDay, ev) {
		var cell = dateCell(date);
		var _element = bodyCells[cell.row*colCnt + cell.col];
		trigger('dayClick', _element, date, allDay, ev);
	}
	
	
	
	/* External Dragging
	-----------------------------------------------------------------------*/
	
	
	function dragStart(_dragElement, ev, ui) {
		hoverListener.start(function(cell) {
			clearOverlays();
			if (cell) {
				renderCellOverlay(cell.row, cell.col, cell.row, cell.col);
			}
		}, ev);
	}
	
	
	function dragStop(_dragElement, ev, ui) {
		var cell = hoverListener.stop();
		clearOverlays();
		if (cell) {
			var d = cellDate(cell);
			trigger('drop', _dragElement, d, true, ev, ui);
		}
	}
	
	
	
	/* Utilities
	--------------------------------------------------------*/
	
	
	function defaultEventEnd(event) {
		return cloneDate(event.start);
	}
	
	
	coordinateGrid = new CoordinateGrid(function(rows, cols) {
		var e, n, p;
		headCells.each(function(i, _e) {
			e = $(_e);
			n = e.offset().left;
			if (i) {
				p[1] = n;
			}
			p = [n];
			cols[i] = p;
		});
		p[1] = n + e.outerWidth();
		bodyRows.each(function(i, _e) {
			if (i < rowCnt) {
				e = $(_e);
				n = e.offset().top;
				if (i) {
					p[1] = n;
				}
				p = [n];
				rows[i] = p;
			}
		});
		p[1] = n + e.outerHeight();
	});
	
	
	hoverListener = new HoverListener(coordinateGrid);
	
	
	colContentPositions = new HorizontalPositionCache(function(col) {
		return bodyCellTopInners.eq(col);
	});
	
	
	function colContentLeft(col) {
		return colContentPositions.left(col);
	}
	
	
	function colContentRight(col) {
		return colContentPositions.right(col);
	}
	
	
	
	
	function dateCell(date) {
		return {
			row: Math.floor(dayDiff(date, t.visStart) / 7),
			col: dayOfWeekCol(date.getDay())
		};
	}
	
	
	function cellDate(cell) {
		return _cellDate(cell.row, cell.col);
	}
	
	
	function _cellDate(row, col) {
		return addDays(cloneDate(t.visStart), row*7 + col*dis+dit);
		// what about weekends in middle of week?
	}
	
	
	function indexDate(index) {
		return _cellDate(Math.floor(index/colCnt), index%colCnt);
	}
	
	
	function dayOfWeekCol(dayOfWeek) {
		return ((dayOfWeek - Math.max(firstDay, nwe) + colCnt) % colCnt) * dis + dit;
	}
	
	
	
	
	function allDayRow(i) {
		return bodyRows.eq(i);
	}
	
	
	function allDayBounds(i) {
		return {
			left: 0,
			right: viewWidth
		};
	}
	
	
}

function BasicEventRenderer() {
	var t = this;
	
	
	// exports
	t.renderEvents = renderEvents;
	t.compileDaySegs = compileSegs; // for DayEventRenderer
	t.clearEvents = clearEvents;
	t.bindDaySeg = bindDaySeg;
	
	
	// imports
	DayEventRenderer.call(t);
	var opt = t.opt;
	var trigger = t.trigger;
	//var setOverflowHidden = t.setOverflowHidden;
	var isEventDraggable = t.isEventDraggable;
	var isEventResizable = t.isEventResizable;
	var reportEvents = t.reportEvents;
	var reportEventClear = t.reportEventClear;
	var eventElementHandlers = t.eventElementHandlers;
	var showEvents = t.showEvents;
	var hideEvents = t.hideEvents;
	var eventDrop = t.eventDrop;
	var getDaySegmentContainer = t.getDaySegmentContainer;
	var getHoverListener = t.getHoverListener;
	var renderDayOverlay = t.renderDayOverlay;
	var clearOverlays = t.clearOverlays;
	var getRowCnt = t.getRowCnt;
	var getColCnt = t.getColCnt;
	var renderDaySegs = t.renderDaySegs;
	var resizableDayEvent = t.resizableDayEvent;
	
	
	
	/* Rendering
	--------------------------------------------------------------------*/
	
	
	function renderEvents(events, modifiedEventId) {
		reportEvents(events);
		renderDaySegs(compileSegs(events), modifiedEventId);
	}
	
	
	function clearEvents() {
		reportEventClear();
		getDaySegmentContainer().empty();
	}
	
	
	function compileSegs(events) {
		var rowCnt = getRowCnt(),
			colCnt = getColCnt(),
			d1 = cloneDate(t.visStart),
			d2 = addDays(cloneDate(d1), colCnt),
			visEventsEnds = $.map(events, exclEndDay),
			i, row,
			j, level,
			k, seg,
			segs=[];
		for (i=0; i<rowCnt; i++) {
			row = stackSegs(sliceSegs(events, visEventsEnds, d1, d2));
			for (j=0; j<row.length; j++) {
				level = row[j];
				for (k=0; k<level.length; k++) {
					seg = level[k];
					seg.row = i;
					seg.level = j; // not needed anymore
					segs.push(seg);
				}
			}
			addDays(d1, 7);
			addDays(d2, 7);
		}
		return segs;
	}
	
	
	function bindDaySeg(event, eventElement, seg) {
		if (isEventDraggable(event)) {
			draggableDayEvent(event, eventElement);
		}
		if (seg.isEnd && isEventResizable(event)) {
			resizableDayEvent(event, eventElement, seg);
		}
		eventElementHandlers(event, eventElement);
			// needs to be after, because resizableDayEvent might stopImmediatePropagation on click
	}
	
	
	
	/* Dragging
	----------------------------------------------------------------------------*/
	
	
	function draggableDayEvent(event, eventElement) {
		var hoverListener = getHoverListener();
		var dayDelta;
		eventElement.draggable({
			zIndex: 9,
			delay: 50,
			opacity: opt('dragOpacity'),
			revertDuration: opt('dragRevertDuration'),
			start: function(ev, ui) {
				trigger('eventDragStart', eventElement, event, ev, ui);
				hideEvents(event, eventElement);
				hoverListener.start(function(cell, origCell, rowDelta, colDelta) {
					eventElement.draggable('option', 'revert', !cell || !rowDelta && !colDelta);
					clearOverlays();
					if (cell) {
						//setOverflowHidden(true);
						dayDelta = rowDelta*7 + colDelta * (opt('isRTL') ? -1 : 1);
						renderDayOverlay(
							addDays(cloneDate(event.start), dayDelta),
							addDays(exclEndDay(event), dayDelta)
						);
					}else{
						//setOverflowHidden(false);
						dayDelta = 0;
					}
				}, ev, 'drag');
			},
			stop: function(ev, ui) {
				hoverListener.stop();
				clearOverlays();
				trigger('eventDragStop', eventElement, event, ev, ui);
				if (dayDelta) {
					eventDrop(this, event, dayDelta, 0, event.allDay, ev, ui);
				}else{
					eventElement.css('filter', ''); // clear IE opacity side-effects
					showEvents(event, eventElement);
				}
				//setOverflowHidden(false);
			}
		});
	}


}

fcViews.agendaWeek = AgendaWeekView;

function AgendaWeekView(element, calendar) {
	var t = this;
	
	
	// exports
	t.render = render;
	
	
	// imports
	AgendaView.call(t, element, calendar, 'agendaWeek');
	var opt = t.opt;
	var renderAgenda = t.renderAgenda;
	var formatDates = calendar.formatDates;
	
	
	
	function render(date, delta) {
		if (delta) {
			addDays(date, delta * 7);
		}
		var start = addDays(cloneDate(date), -((date.getDay() - opt('firstDay') + 7) % 7));
		var end = addDays(cloneDate(start), 7);
		var visStart = cloneDate(start);
		var visEnd = cloneDate(end);
		var weekends = opt('weekends');
		if (!weekends) {
			skipWeekend(visStart);
			skipWeekend(visEnd, -1, true);
		}
		t.title = formatDates(
			visStart,
			addDays(cloneDate(visEnd), -1),
			opt('titleFormat')
		);
		t.start = start;
		t.end = end;
		t.visStart = visStart;
		t.visEnd = visEnd;
		renderAgenda(weekends ? 7 : 5);
	}
	

}

fcViews.agendaDay = AgendaDayView;

function AgendaDayView(element, calendar) {
	var t = this;
	
	
	// exports
	t.render = render;
	
	
	// imports
	AgendaView.call(t, element, calendar, 'agendaDay');
	var opt = t.opt;
	var renderAgenda = t.renderAgenda;
	var formatDate = calendar.formatDate;
	
	
	
	function render(date, delta) {
		if (delta) {
			addDays(date, delta);
			if (!opt('weekends')) {
				skipWeekend(date, delta < 0 ? -1 : 1);
			}
		}
		var start = cloneDate(date, true);
		var end = addDays(cloneDate(start), 1);
		t.title = formatDate(date, opt('titleFormat'));
		t.start = t.visStart = start;
		t.end = t.visEnd = end;
		renderAgenda(1);
	}
	

}

setDefaults({
	allDaySlot: true,
	allDayText: 'all-day',
	firstHour: 6,
	slotMinutes: 30,
	defaultEventMinutes: 120,
	axisFormat: 'h(:mm)tt',
	timeFormat: {
		agenda: 'h:mm{ - h:mm}'
	},
	dragOpacity: {
		agenda: .5
	},
	minTime: 0,
	maxTime: 24
});


// TODO: make it work in quirks mode (event corners, all-day height)
// TODO: test liquid width, especially in IE6


function AgendaView(element, calendar, viewName) {
	var t = this;
	
	
	// exports
	t.renderAgenda = renderAgenda;
	t.setWidth = setWidth;
	t.setHeight = setHeight;
	t.beforeHide = beforeHide;
	t.afterShow = afterShow;
	t.defaultEventEnd = defaultEventEnd;
	t.timePosition = timePosition;
	t.dayOfWeekCol = dayOfWeekCol;
	t.dateCell = dateCell;
	t.cellDate = cellDate;
	t.cellIsAllDay = cellIsAllDay;
	t.allDayRow = getAllDayRow;
	t.allDayBounds = allDayBounds;
	t.getHoverListener = function() { return hoverListener };
	t.colContentLeft = colContentLeft;
	t.colContentRight = colContentRight;
	t.getDaySegmentContainer = function() { return daySegmentContainer };
	t.getSlotSegmentContainer = function() { return slotSegmentContainer };
	t.getMinMinute = function() { return minMinute };
	t.getMaxMinute = function() { return maxMinute };
	t.getBodyContent = function() { return slotContent }; // !!??
	t.getRowCnt = function() { return 1 };
	t.getColCnt = function() { return colCnt };
	t.getColWidth = function() { return colWidth };
	t.getSlotHeight = function() { return slotHeight };
	t.defaultSelectionEnd = defaultSelectionEnd;
	t.renderDayOverlay = renderDayOverlay;
	t.renderSelection = renderSelection;
	t.clearSelection = clearSelection;
	t.reportDayClick = reportDayClick; // selection mousedown hack
	t.dragStart = dragStart;
	t.dragStop = dragStop;
	
	
	// imports
	View.call(t, element, calendar, viewName);
	OverlayManager.call(t);
	SelectionManager.call(t);
	AgendaEventRenderer.call(t);
	var opt = t.opt;
	var trigger = t.trigger;
	var clearEvents = t.clearEvents;
	var renderOverlay = t.renderOverlay;
	var clearOverlays = t.clearOverlays;
	var reportSelection = t.reportSelection;
	var unselect = t.unselect;
	var daySelectionMousedown = t.daySelectionMousedown;
	var slotSegHtml = t.slotSegHtml;
	var formatDate = calendar.formatDate;
	
	
	// locals
	
	var dayTable;
	var dayHead;
	var dayHeadCells;
	var dayBody;
	var dayBodyCells;
	var dayBodyCellInners;
	var dayBodyFirstCell;
	var dayBodyFirstCellStretcher;
	var slotLayer;
	var daySegmentContainer;
	var allDayTable;
	var allDayRow;
	var slotScroller;
	var slotContent;
	var slotSegmentContainer;
	var slotTable;
	var slotTableFirstInner;
	var axisFirstCells;
	var gutterCells;
	var selectionHelper;
	
	var viewWidth;
	var viewHeight;
	var axisWidth;
	var colWidth;
	var gutterWidth;
	var slotHeight; // TODO: what if slotHeight changes? (see issue 650)
	var savedScrollTop;
	
	var colCnt;
	var slotCnt;
	var coordinateGrid;
	var hoverListener;
	var colContentPositions;
	var slotTopCache = {};
	
	var tm;
	var firstDay;
	var nwe;            // no weekends (int)
	var rtl, dis, dit;  // day index sign / translate
	var minMinute, maxMinute;
	var colFormat;
	

	
	/* Rendering
	-----------------------------------------------------------------------------*/
	
	
	disableTextSelection(element.addClass('fc-agenda'));
	
	
	function renderAgenda(c) {
		colCnt = c;
		updateOptions();
		if (!dayTable) {
			buildSkeleton();
		}else{
			clearEvents();
		}
		updateCells();
	}
	
	
	
	function updateOptions() {
		tm = opt('theme') ? 'ui' : 'fc';
		nwe = opt('weekends') ? 0 : 1;
		firstDay = opt('firstDay');
		if (rtl = opt('isRTL')) {
			dis = -1;
			dit = colCnt - 1;
		}else{
			dis = 1;
			dit = 0;
		}
		minMinute = parseTime(opt('minTime'));
		maxMinute = parseTime(opt('maxTime'));
		colFormat = opt('columnFormat');
	}
	
	
	
	function buildSkeleton() {
		var headerClass = tm + "-widget-header";
		var contentClass = tm + "-widget-content";
		var s;
		var i;
		var d;
		var maxd;
		var minutes;
		var slotNormal = opt('slotMinutes') % 15 == 0;
		
		s =
			"<table style='width:100%' class='fc-agenda-days fc-border-separate' cellspacing='0'>" +
			"<thead>" +
			"<tr>" +
			"<th class='fc-agenda-axis " + headerClass + "'>&nbsp;</th>";
		for (i=0; i<colCnt; i++) {
			s +=
				"<th class='fc- fc-col" + i + ' ' + headerClass + "'/>"; // fc- needed for setDayID
		}
		s +=
			"<th class='fc-agenda-gutter " + headerClass + "'>&nbsp;</th>" +
			"</tr>" +
			"</thead>" +
			"<tbody>" +
			"<tr>" +
			"<th class='fc-agenda-axis " + headerClass + "'>&nbsp;</th>";
		for (i=0; i<colCnt; i++) {
			s +=
				"<td class='fc- fc-col" + i + ' ' + contentClass + "'>" + // fc- needed for setDayID
				"<div>" +
				"<div class='fc-day-content'>" +
				"<div style='position:relative'>&nbsp;</div>" +
				"</div>" +
				"</div>" +
				"</td>";
		}
		s +=
			"<td class='fc-agenda-gutter " + contentClass + "'>&nbsp;</td>" +
			"</tr>" +
			"</tbody>" +
			"</table>";
		dayTable = $(s).appendTo(element);
		dayHead = dayTable.find('thead');
		dayHeadCells = dayHead.find('th').slice(1, -1);
		dayBody = dayTable.find('tbody');
		dayBodyCells = dayBody.find('td').slice(0, -1);
		dayBodyCellInners = dayBodyCells.find('div.fc-day-content div');
		dayBodyFirstCell = dayBodyCells.eq(0);
		dayBodyFirstCellStretcher = dayBodyFirstCell.find('> div');
		
		markFirstLast(dayHead.add(dayHead.find('tr')));
		markFirstLast(dayBody.add(dayBody.find('tr')));
		
		axisFirstCells = dayHead.find('th:first');
		gutterCells = dayTable.find('.fc-agenda-gutter');
		
		slotLayer =
			$("<div style='position:absolute;z-index:2;left:0;width:100%'/>")
				.appendTo(element);
				
		if (opt('allDaySlot')) {
		
			daySegmentContainer =
				$("<div style='position:absolute;z-index:8;top:0;left:0'/>")
					.appendTo(slotLayer);
		
			s =
				"<table style='width:100%' class='fc-agenda-allday' cellspacing='0'>" +
				"<tr>" +
				"<th class='" + headerClass + " fc-agenda-axis'>" + opt('allDayText') + "</th>" +
				"<td>" +
				"<div class='fc-day-content'><div style='position:relative'/></div>" +
				"</td>" +
				"<th class='" + headerClass + " fc-agenda-gutter'>&nbsp;</th>" +
				"</tr>" +
				"</table>";
			allDayTable = $(s).appendTo(slotLayer);
			allDayRow = allDayTable.find('tr');
			
			dayBind(allDayRow.find('td'));
			
			axisFirstCells = axisFirstCells.add(allDayTable.find('th:first'));
			gutterCells = gutterCells.add(allDayTable.find('th.fc-agenda-gutter'));
			
			slotLayer.append(
				"<div class='fc-agenda-divider " + headerClass + "'>" +
				"<div class='fc-agenda-divider-inner'/>" +
				"</div>"
			);
			
		}else{
		
			daySegmentContainer = $([]); // in jQuery 1.4, we can just do $()
		
		}
		
		slotScroller =
			$("<div style='position:absolute;width:100%;overflow-x:hidden;overflow-y:auto'/>")
				.appendTo(slotLayer);
				
		slotContent =
			$("<div style='position:relative;width:100%;overflow:hidden'/>")
				.appendTo(slotScroller);
				
		slotSegmentContainer =
			$("<div style='position:absolute;z-index:8;top:0;left:0'/>")
				.appendTo(slotContent);
		
		s =
			"<table class='fc-agenda-slots' style='width:100%' cellspacing='0'>" +
			"<tbody>";
		d = zeroDate();
		maxd = addMinutes(cloneDate(d), maxMinute);
		addMinutes(d, minMinute);
		slotCnt = 0;
		for (i=0; d < maxd; i++) {
			minutes = d.getMinutes();
			s +=
				"<tr class='fc-slot" + i + ' ' + (!minutes ? '' : 'fc-minor') + "'>" +
				"<th class='fc-agenda-axis " + headerClass + "'>" +
				((!slotNormal || !minutes) ? formatDate(d, opt('axisFormat')) : '&nbsp;') +
				"</th>" +
				"<td class='" + contentClass + "'>" +
				"<div style='position:relative'>&nbsp;</div>" +
				"</td>" +
				"</tr>";
			addMinutes(d, opt('slotMinutes'));
			slotCnt++;
		}
		s +=
			"</tbody>" +
			"</table>";
		slotTable = $(s).appendTo(slotContent);
		slotTableFirstInner = slotTable.find('div:first');
		
		slotBind(slotTable.find('td'));
		
		axisFirstCells = axisFirstCells.add(slotTable.find('th:first'));
	}
	
	
	
	function updateCells() {
		var i;
		var headCell;
		var bodyCell;
		var date;
		var today = clearTime(new Date());
		for (i=0; i<colCnt; i++) {
			date = colDate(i);
			headCell = dayHeadCells.eq(i);
			headCell.html(formatDate(date, colFormat));
			bodyCell = dayBodyCells.eq(i);
			if (+date == +today) {
				bodyCell.addClass(tm + '-state-highlight fc-today');
			}else{
				bodyCell.removeClass(tm + '-state-highlight fc-today');
			}
			setDayID(headCell.add(bodyCell), date);
		}
	}
	
	
	
	function setHeight(height, dateChanged) {
		if (height === undefined) {
			height = viewHeight;
		}
		viewHeight = height;
		slotTopCache = {};
	
		var headHeight = dayBody.position().top;
		var allDayHeight = slotScroller.position().top; // including divider
		var bodyHeight = Math.min( // total body height, including borders
			height - headHeight,   // when scrollbars
			slotTable.height() + allDayHeight + 1 // when no scrollbars. +1 for bottom border
		);
		
		dayBodyFirstCellStretcher
			.height(bodyHeight - vsides(dayBodyFirstCell));
		
		slotLayer.css('top', headHeight);
		
		slotScroller.height(bodyHeight - allDayHeight - 1);
		
		slotHeight = slotTableFirstInner.height() + 1; // +1 for border
		
		if (dateChanged) {
			resetScroll();
		}
	}
	
	
	
	function setWidth(width) {
		viewWidth = width;
		colContentPositions.clear();
		
		axisWidth = 0;
		setOuterWidth(
			axisFirstCells
				.width('')
				.each(function(i, _cell) {
					axisWidth = Math.max(axisWidth, $(_cell).outerWidth());
				}),
			axisWidth
		);
		
		var slotTableWidth = slotScroller[0].clientWidth; // needs to be done after axisWidth (for IE7)
		//slotTable.width(slotTableWidth);
		
		gutterWidth = slotScroller.width() - slotTableWidth;
		if (gutterWidth) {
			setOuterWidth(gutterCells, gutterWidth);
			gutterCells
				.show()
				.prev()
				.removeClass('fc-last');
		}else{
			gutterCells
				.hide()
				.prev()
				.addClass('fc-last');
		}
		
		colWidth = Math.floor((slotTableWidth - axisWidth) / colCnt);
		setOuterWidth(dayHeadCells.slice(0, -1), colWidth);
	}
	


	function resetScroll() {
		var d0 = zeroDate();
		var scrollDate = cloneDate(d0);
		scrollDate.setHours(opt('firstHour'));
		var top = timePosition(d0, scrollDate) + 1; // +1 for the border
		function scroll() {
			slotScroller.scrollTop(top);
		}
		scroll();
		setTimeout(scroll, 0); // overrides any previous scroll state made by the browser
	}
	
	
	function beforeHide() {
		savedScrollTop = slotScroller.scrollTop();
	}
	
	
	function afterShow() {
		slotScroller.scrollTop(savedScrollTop);
	}
	
	
	
	/* Slot/Day clicking and binding
	-----------------------------------------------------------------------*/
	

	function dayBind(cells) {
		cells.click(slotClick)
			.mousedown(daySelectionMousedown);
	}


	function slotBind(cells) {
		cells.click(slotClick)
			.mousedown(slotSelectionMousedown);
	}
	
	
	function slotClick(ev) {
		if (!opt('selectable')) { // if selectable, SelectionManager will worry about dayClick
			var col = Math.min(colCnt-1, Math.floor((ev.pageX - dayTable.offset().left - axisWidth) / colWidth));
			var date = colDate(col);
			var rowMatch = this.parentNode.className.match(/fc-slot(\d+)/); // TODO: maybe use data
			if (rowMatch) {
				var mins = parseInt(rowMatch[1]) * opt('slotMinutes');
				var hours = Math.floor(mins/60);
				date.setHours(hours);
				date.setMinutes(mins%60 + minMinute);
				trigger('dayClick', dayBodyCells[col], date, false, ev);
			}else{
				trigger('dayClick', dayBodyCells[col], date, true, ev);
			}
		}
	}
	
	
	
	/* Semi-transparent Overlay Helpers
	-----------------------------------------------------*/
	

	function renderDayOverlay(startDate, endDate, refreshCoordinateGrid) { // endDate is exclusive
		if (refreshCoordinateGrid) {
			coordinateGrid.build();
		}
		var visStart = cloneDate(t.visStart);
		var startCol, endCol;
		if (rtl) {
			startCol = dayDiff(endDate, visStart)*dis+dit+1;
			endCol = dayDiff(startDate, visStart)*dis+dit+1;
		}else{
			startCol = dayDiff(startDate, visStart);
			endCol = dayDiff(endDate, visStart);
		}
		startCol = Math.max(0, startCol);
		endCol = Math.min(colCnt, endCol);
		if (startCol < endCol) {
			dayBind(
				renderCellOverlay(0, startCol, 0, endCol-1)
			);
		}
	}
	
	
	function renderCellOverlay(row0, col0, row1, col1) { // only for all-day?
		var rect = coordinateGrid.rect(row0, col0, row1, col1, slotLayer);
		return renderOverlay(rect, slotLayer);
	}
	

	function renderSlotOverlay(overlayStart, overlayEnd) {
		var dayStart = cloneDate(t.visStart);
		var dayEnd = addDays(cloneDate(dayStart), 1);
		for (var i=0; i<colCnt; i++) {
			var stretchStart = new Date(Math.max(dayStart, overlayStart));
			var stretchEnd = new Date(Math.min(dayEnd, overlayEnd));
			if (stretchStart < stretchEnd) {
				var col = i*dis+dit;
				var rect = coordinateGrid.rect(0, col, 0, col, slotContent); // only use it for horizontal coords
				var top = timePosition(dayStart, stretchStart);
				var bottom = timePosition(dayStart, stretchEnd);
				rect.top = top;
				rect.height = bottom - top;
				slotBind(
					renderOverlay(rect, slotContent)
				);
			}
			addDays(dayStart, 1);
			addDays(dayEnd, 1);
		}
	}
	
	
	
	/* Coordinate Utilities
	-----------------------------------------------------------------------------*/
	
	
	coordinateGrid = new CoordinateGrid(function(rows, cols) {
		var e, n, p;
		dayHeadCells.each(function(i, _e) {
			e = $(_e);
			n = e.offset().left;
			if (i) {
				p[1] = n;
			}
			p = [n];
			cols[i] = p;
		});
		p[1] = n + e.outerWidth();
		if (opt('allDaySlot')) {
			e = allDayRow;
			n = e.offset().top;
			rows[0] = [n, n+e.outerHeight()];
		}
		var slotTableTop = slotContent.offset().top;
		var slotScrollerTop = slotScroller.offset().top;
		var slotScrollerBottom = slotScrollerTop + slotScroller.outerHeight();
		function constrain(n) {
			return Math.max(slotScrollerTop, Math.min(slotScrollerBottom, n));
		}
		for (var i=0; i<slotCnt; i++) {
			rows.push([
				constrain(slotTableTop + slotHeight*i),
				constrain(slotTableTop + slotHeight*(i+1))
			]);
		}
	});
	
	
	hoverListener = new HoverListener(coordinateGrid);
	
	
	colContentPositions = new HorizontalPositionCache(function(col) {
		return dayBodyCellInners.eq(col);
	});
	
	
	function colContentLeft(col) {
		return colContentPositions.left(col);
	}
	
	
	function colContentRight(col) {
		return colContentPositions.right(col);
	}
	
	
	
	
	function dateCell(date) { // "cell" terminology is now confusing
		return {
			row: Math.floor(dayDiff(date, t.visStart) / 7),
			col: dayOfWeekCol(date.getDay())
		};
	}
	
	
	function cellDate(cell) {
		var d = colDate(cell.col);
		var slotIndex = cell.row;
		if (opt('allDaySlot')) {
			slotIndex--;
		}
		if (slotIndex >= 0) {
			addMinutes(d, minMinute + slotIndex * opt('slotMinutes'));
		}
		return d;
	}
	
	
	function colDate(col) { // returns dates with 00:00:00
		return addDays(cloneDate(t.visStart), col*dis+dit);
	}
	
	
	function cellIsAllDay(cell) {
		return opt('allDaySlot') && !cell.row;
	}
	
	
	function dayOfWeekCol(dayOfWeek) {
		return ((dayOfWeek - Math.max(firstDay, nwe) + colCnt) % colCnt)*dis+dit;
	}
	
	
	
	
	// get the Y coordinate of the given time on the given day (both Date objects)
	function timePosition(day, time) { // both date objects. day holds 00:00 of current day
		day = cloneDate(day, true);
		if (time < addMinutes(cloneDate(day), minMinute)) {
			return 0;
		}
		if (time >= addMinutes(cloneDate(day), maxMinute)) {
			return slotTable.height();
		}
		var slotMinutes = opt('slotMinutes'),
			minutes = time.getHours()*60 + time.getMinutes() - minMinute,
			slotI = Math.floor(minutes / slotMinutes),
			slotTop = slotTopCache[slotI];
		if (slotTop === undefined) {
			slotTop = slotTopCache[slotI] = slotTable.find('tr:eq(' + slotI + ') td div')[0].offsetTop; //.position().top; // need this optimization???
		}
		return Math.max(0, Math.round(
			slotTop - 1 + slotHeight * ((minutes % slotMinutes) / slotMinutes)
		));
	}
	
	
	function allDayBounds() {
		return {
			left: axisWidth,
			right: viewWidth - gutterWidth
		}
	}
	
	
	function getAllDayRow(index) {
		return allDayRow;
	}
	
	
	function defaultEventEnd(event) {
		var start = cloneDate(event.start);
		if (event.allDay) {
			return start;
		}
		return addMinutes(start, opt('defaultEventMinutes'));
	}
	
	
	
	/* Selection
	---------------------------------------------------------------------------------*/
	
	
	function defaultSelectionEnd(startDate, allDay) {
		if (allDay) {
			return cloneDate(startDate);
		}
		return addMinutes(cloneDate(startDate), opt('slotMinutes'));
	}
	
	
	function renderSelection(startDate, endDate, allDay) { // only for all-day
		if (allDay) {
			if (opt('allDaySlot')) {
				renderDayOverlay(startDate, addDays(cloneDate(endDate), 1), true);
			}
		}else{
			renderSlotSelection(startDate, endDate);
		}
	}
	
	
	function renderSlotSelection(startDate, endDate) {
		var helperOption = opt('selectHelper');
		coordinateGrid.build();
		if (helperOption) {
			var col = dayDiff(startDate, t.visStart) * dis + dit;
			if (col >= 0 && col < colCnt) { // only works when times are on same day
				var rect = coordinateGrid.rect(0, col, 0, col, slotContent); // only for horizontal coords
				var top = timePosition(startDate, startDate);
				var bottom = timePosition(startDate, endDate);
				if (bottom > top) { // protect against selections that are entirely before or after visible range
					rect.top = top;
					rect.height = bottom - top;
					rect.left += 2;
					rect.width -= 5;
					if ($.isFunction(helperOption)) {
						var helperRes = helperOption(startDate, endDate);
						if (helperRes) {
							rect.position = 'absolute';
							rect.zIndex = 8;
							selectionHelper = $(helperRes)
								.css(rect)
								.appendTo(slotContent);
						}
					}else{
						rect.isStart = true; // conside rect a "seg" now
						rect.isEnd = true;   //
						selectionHelper = $(slotSegHtml(
							{
								title: '',
								start: startDate,
								end: endDate,
								className: ['fc-select-helper'],
								editable: false
							},
							rect
						));
						selectionHelper.css('opacity', opt('dragOpacity'));
					}
					if (selectionHelper) {
						slotBind(selectionHelper);
						slotContent.append(selectionHelper);
						setOuterWidth(selectionHelper, rect.width, true); // needs to be after appended
						setOuterHeight(selectionHelper, rect.height, true);
					}
				}
			}
		}else{
			renderSlotOverlay(startDate, endDate);
		}
	}
	
	
	function clearSelection() {
		clearOverlays();
		if (selectionHelper) {
			selectionHelper.remove();
			selectionHelper = null;
		}
	}
	
	
	function slotSelectionMousedown(ev) {
		if (ev.which == 1 && opt('selectable')) { // ev.which==1 means left mouse button
			unselect(ev);
			var dates;
			hoverListener.start(function(cell, origCell) {
				clearSelection();
				if (cell && cell.col == origCell.col && !cellIsAllDay(cell)) {
					var d1 = cellDate(origCell);
					var d2 = cellDate(cell);
					dates = [
						d1,
						addMinutes(cloneDate(d1), opt('slotMinutes')),
						d2,
						addMinutes(cloneDate(d2), opt('slotMinutes'))
					].sort(cmp);
					renderSlotSelection(dates[0], dates[3]);
				}else{
					dates = null;
				}
			}, ev);
			$(document).one('mouseup', function(ev) {
				hoverListener.stop();
				if (dates) {
					if (+dates[0] == +dates[1]) {
						reportDayClick(dates[0], false, ev);
					}
					reportSelection(dates[0], dates[3], false, ev);
				}
			});
		}
	}
	
	
	function reportDayClick(date, allDay, ev) {
		trigger('dayClick', dayBodyCells[dayOfWeekCol(date.getDay())], date, allDay, ev);
	}
	
	
	
	/* External Dragging
	--------------------------------------------------------------------------------*/
	
	
	function dragStart(_dragElement, ev, ui) {
		hoverListener.start(function(cell) {
			clearOverlays();
			if (cell) {
				if (cellIsAllDay(cell)) {
					renderCellOverlay(cell.row, cell.col, cell.row, cell.col);
				}else{
					var d1 = cellDate(cell);
					var d2 = addMinutes(cloneDate(d1), opt('defaultEventMinutes'));
					renderSlotOverlay(d1, d2);
				}
			}
		}, ev);
	}
	
	
	function dragStop(_dragElement, ev, ui) {
		var cell = hoverListener.stop();
		clearOverlays();
		if (cell) {
			trigger('drop', _dragElement, cellDate(cell), cellIsAllDay(cell), ev, ui);
		}
	}


}

function AgendaEventRenderer() {
	var t = this;
	
	
	// exports
	t.renderEvents = renderEvents;
	t.compileDaySegs = compileDaySegs; // for DayEventRenderer
	t.clearEvents = clearEvents;
	t.slotSegHtml = slotSegHtml;
	t.bindDaySeg = bindDaySeg;
	
	
	// imports
	DayEventRenderer.call(t);
	var opt = t.opt;
	var trigger = t.trigger;
	//var setOverflowHidden = t.setOverflowHidden;
	var isEventDraggable = t.isEventDraggable;
	var isEventResizable = t.isEventResizable;
	var eventEnd = t.eventEnd;
	var reportEvents = t.reportEvents;
	var reportEventClear = t.reportEventClear;
	var eventElementHandlers = t.eventElementHandlers;
	var setHeight = t.setHeight;
	var getDaySegmentContainer = t.getDaySegmentContainer;
	var getSlotSegmentContainer = t.getSlotSegmentContainer;
	var getHoverListener = t.getHoverListener;
	var getMaxMinute = t.getMaxMinute;
	var getMinMinute = t.getMinMinute;
	var timePosition = t.timePosition;
	var colContentLeft = t.colContentLeft;
	var colContentRight = t.colContentRight;
	var renderDaySegs = t.renderDaySegs;
	var resizableDayEvent = t.resizableDayEvent; // TODO: streamline binding architecture
	var getColCnt = t.getColCnt;
	var getColWidth = t.getColWidth;
	var getSlotHeight = t.getSlotHeight;
	var getBodyContent = t.getBodyContent;
	var reportEventElement = t.reportEventElement;
	var showEvents = t.showEvents;
	var hideEvents = t.hideEvents;
	var eventDrop = t.eventDrop;
	var eventResize = t.eventResize;
	var renderDayOverlay = t.renderDayOverlay;
	var clearOverlays = t.clearOverlays;
	var calendar = t.calendar;
	var formatDate = calendar.formatDate;
	var formatDates = calendar.formatDates;
	
	
	
	/* Rendering
	----------------------------------------------------------------------------*/
	

	function renderEvents(events, modifiedEventId) {
		reportEvents(events);
		var i, len=events.length,
			dayEvents=[],
			slotEvents=[];
		for (i=0; i<len; i++) {
			if (events[i].allDay) {
				dayEvents.push(events[i]);
			}else{
				slotEvents.push(events[i]);
			}
		}
		if (opt('allDaySlot')) {
			renderDaySegs(compileDaySegs(dayEvents), modifiedEventId);
			setHeight(); // no params means set to viewHeight
		}
		renderSlotSegs(compileSlotSegs(slotEvents), modifiedEventId);
	}
	
	
	function clearEvents() {
		reportEventClear();
		getDaySegmentContainer().empty();
		getSlotSegmentContainer().empty();
	}
	
	
	function compileDaySegs(events) {
		var levels = stackSegs(sliceSegs(events, $.map(events, exclEndDay), t.visStart, t.visEnd)),
			i, levelCnt=levels.length, level,
			j, seg,
			segs=[];
		for (i=0; i<levelCnt; i++) {
			level = levels[i];
			for (j=0; j<level.length; j++) {
				seg = level[j];
				seg.row = 0;
				seg.level = i; // not needed anymore
				segs.push(seg);
			}
		}
		return segs;
	}
	
	
	function compileSlotSegs(events) {
		var colCnt = getColCnt(),
			minMinute = getMinMinute(),
			maxMinute = getMaxMinute(),
			d = addMinutes(cloneDate(t.visStart), minMinute),
			visEventEnds = $.map(events, slotEventEnd),
			i, col,
			j, level,
			k, seg,
			segs=[];
		for (i=0; i<colCnt; i++) {
			col = stackSegs(sliceSegs(events, visEventEnds, d, addMinutes(cloneDate(d), maxMinute-minMinute)));
			countForwardSegs(col);
			for (j=0; j<col.length; j++) {
				level = col[j];
				for (k=0; k<level.length; k++) {
					seg = level[k];
					seg.col = i;
					seg.level = j;
					segs.push(seg);
				}
			}
			addDays(d, 1, true);
		}
		return segs;
	}
	
	
	function slotEventEnd(event) {
		if (event.end) {
			return cloneDate(event.end);
		}else{
			return addMinutes(cloneDate(event.start), opt('defaultEventMinutes'));
		}
	}
	
	
	// renders events in the 'time slots' at the bottom
	
	function renderSlotSegs(segs, modifiedEventId) {
	
		var i, segCnt=segs.length, seg,
			event,
			classes,
			top, bottom,
			colI, levelI, forward,
			leftmost,
			availWidth,
			outerWidth,
			left,
			html='',
			eventElements,
			eventElement,
			triggerRes,
			vsideCache={},
			hsideCache={},
			key, val,
			contentElement,
			height,
			slotSegmentContainer = getSlotSegmentContainer(),
			rtl, dis, dit,
			colCnt = getColCnt();
			
		if (rtl = opt('isRTL')) {
			dis = -1;
			dit = colCnt - 1;
		}else{
			dis = 1;
			dit = 0;
		}
			
		// calculate position/dimensions, create html
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			event = seg.event;
			top = timePosition(seg.start, seg.start);
			bottom = timePosition(seg.start, seg.end);
			colI = seg.col;
			levelI = seg.level;
			forward = seg.forward || 0;
			leftmost = colContentLeft(colI*dis + dit);
			availWidth = colContentRight(colI*dis + dit) - leftmost;
			availWidth = Math.min(availWidth-6, availWidth*.95); // TODO: move this to CSS
			if (levelI) {
				// indented and thin
				outerWidth = availWidth / (levelI + forward + 1);
			}else{
				if (forward) {
					// moderately wide, aligned left still
					outerWidth = ((availWidth / (forward + 1)) - (12/2)) * 2; // 12 is the predicted width of resizer =
				}else{
					// can be entire width, aligned left
					outerWidth = availWidth;
				}
			}
			left = leftmost +                                  // leftmost possible
				(availWidth / (levelI + forward + 1) * levelI) // indentation
				* dis + (rtl ? availWidth - outerWidth : 0);   // rtl
			seg.top = top;
			seg.left = left;
			seg.outerWidth = outerWidth;
			seg.outerHeight = bottom - top;
			html += slotSegHtml(event, seg);
		}
		slotSegmentContainer[0].innerHTML = html; // faster than html()
		eventElements = slotSegmentContainer.children();
		
		// retrieve elements, run through eventRender callback, bind event handlers
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			event = seg.event;
			eventElement = $(eventElements[i]); // faster than eq()
			triggerRes = trigger('eventRender', event, event, eventElement);
			if (triggerRes === false) {
				eventElement.remove();
			}else{
				if (triggerRes && triggerRes !== true) {
					eventElement.remove();
					eventElement = $(triggerRes)
						.css({
							position: 'absolute',
							top: seg.top,
							left: seg.left
						})
						.appendTo(slotSegmentContainer);
				}
				seg.element = eventElement;
				if (event._id === modifiedEventId) {
					bindSlotSeg(event, eventElement, seg);
				}else{
					eventElement[0]._fci = i; // for lazySegBind
				}
				reportEventElement(event, eventElement);
			}
		}
		
		lazySegBind(slotSegmentContainer, segs, bindSlotSeg);
		
		// record event sides and title positions
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			if (eventElement = seg.element) {
				val = vsideCache[key = seg.key = cssKey(eventElement[0])];
				seg.vsides = val === undefined ? (vsideCache[key] = vsides(eventElement, true)) : val;
				val = hsideCache[key];
				seg.hsides = val === undefined ? (hsideCache[key] = hsides(eventElement, true)) : val;
				contentElement = eventElement.find('div.fc-event-content');
				if (contentElement.length) {
					seg.contentTop = contentElement[0].offsetTop;
				}
			}
		}
		
		// set all positions/dimensions at once
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			if (eventElement = seg.element) {
				eventElement[0].style.width = Math.max(0, seg.outerWidth - seg.hsides) + 'px';
				height = Math.max(0, seg.outerHeight - seg.vsides);
				eventElement[0].style.height = height + 'px';
				event = seg.event;
				if (seg.contentTop !== undefined && height - seg.contentTop < 10) {
					// not enough room for title, put it in the time header
					eventElement.find('div.fc-event-time')
						.text(formatDate(event.start, opt('timeFormat')) + ' - ' + event.title);
					eventElement.find('div.fc-event-title')
						.remove();
				}
				trigger('eventAfterRender', event, event, eventElement);
			}
		}
					
	}
	
	
	function slotSegHtml(event, seg) {
		var html = "<";
		var url = event.url;
		var skinCss = getSkinCss(event, opt);
		var skinCssAttr = (skinCss ? " style='" + skinCss + "'" : '');
		var classes = ['fc-event', 'fc-event-skin', 'fc-event-vert'];
		if (isEventDraggable(event)) {
			classes.push('fc-event-draggable');
		}
		if (seg.isStart) {
			classes.push('fc-corner-top');
		}
		if (seg.isEnd) {
			classes.push('fc-corner-bottom');
		}
		classes = classes.concat(event.className);
		if (event.source) {
			classes = classes.concat(event.source.className || []);
		}
		if (url) {
			html += "a href='" + htmlEscape(event.url) + "'";
		}else{
			html += "div";
		}
		html +=
			" class='" + classes.join(' ') + "'" +
			" style='position:absolute;z-index:8;top:" + seg.top + "px;left:" + seg.left + "px;" + skinCss + "'" +
			">" +
			"<div class='fc-event-inner fc-event-skin'" + skinCssAttr + ">" +
			"<div class='fc-event-head fc-event-skin'" + skinCssAttr + ">" +
			"<div class='fc-event-time'>" +
			htmlEscape(formatDates(event.start, event.end, opt('timeFormat'))) +
			"</div>" +
			"</div>" +
			"<div class='fc-event-content'>" +
			"<div class='fc-event-title'>" +
			htmlEscape(event.title) +
			"</div>" +
			"</div>" +
			"<div class='fc-event-bg'></div>" +
			"</div>"; // close inner
		if (seg.isEnd && isEventResizable(event)) {
			html +=
				"<div class='ui-resizable-handle ui-resizable-s'>=</div>";
		}
		html +=
			"</" + (url ? "a" : "div") + ">";
		return html;
	}
	
	
	function bindDaySeg(event, eventElement, seg) {
		if (isEventDraggable(event)) {
			draggableDayEvent(event, eventElement, seg.isStart);
		}
		if (seg.isEnd && isEventResizable(event)) {
			resizableDayEvent(event, eventElement, seg);
		}
		eventElementHandlers(event, eventElement);
			// needs to be after, because resizableDayEvent might stopImmediatePropagation on click
	}
	
	
	function bindSlotSeg(event, eventElement, seg) {
		var timeElement = eventElement.find('div.fc-event-time');
		if (isEventDraggable(event)) {
			draggableSlotEvent(event, eventElement, timeElement);
		}
		if (seg.isEnd && isEventResizable(event)) {
			resizableSlotEvent(event, eventElement, timeElement);
		}
		eventElementHandlers(event, eventElement);
	}
	
	
	
	/* Dragging
	-----------------------------------------------------------------------------------*/
	
	
	// when event starts out FULL-DAY
	
	function draggableDayEvent(event, eventElement, isStart) {
		var origWidth;
		var revert;
		var allDay=true;
		var dayDelta;
		var dis = opt('isRTL') ? -1 : 1;
		var hoverListener = getHoverListener();
		var colWidth = getColWidth();
		var slotHeight = getSlotHeight();
		var minMinute = getMinMinute();
		eventElement.draggable({
			zIndex: 9,
			opacity: opt('dragOpacity', 'month'), // use whatever the month view was using
			revertDuration: opt('dragRevertDuration'),
			start: function(ev, ui) {
				trigger('eventDragStart', eventElement, event, ev, ui);
				hideEvents(event, eventElement);
				origWidth = eventElement.width();
				hoverListener.start(function(cell, origCell, rowDelta, colDelta) {
					clearOverlays();
					if (cell) {
						//setOverflowHidden(true);
						revert = false;
						dayDelta = colDelta * dis;
						if (!cell.row) {
							// on full-days
							renderDayOverlay(
								addDays(cloneDate(event.start), dayDelta),
								addDays(exclEndDay(event), dayDelta)
							);
							resetElement();
						}else{
							// mouse is over bottom slots
							if (isStart) {
								if (allDay) {
									// convert event to temporary slot-event
									eventElement.width(colWidth - 10); // don't use entire width
									setOuterHeight(
										eventElement,
										slotHeight * Math.round(
											(event.end ? ((event.end - event.start) / MINUTE_MS) : opt('defaultEventMinutes'))
											/ opt('slotMinutes')
										)
									);
									eventElement.draggable('option', 'grid', [colWidth, 1]);
									allDay = false;
								}
							}else{
								revert = true;
							}
						}
						revert = revert || (allDay && !dayDelta);
					}else{
						resetElement();
						//setOverflowHidden(false);
						revert = true;
					}
					eventElement.draggable('option', 'revert', revert);
				}, ev, 'drag');
			},
			stop: function(ev, ui) {
				hoverListener.stop();
				clearOverlays();
				trigger('eventDragStop', eventElement, event, ev, ui);
				if (revert) {
					// hasn't moved or is out of bounds (draggable has already reverted)
					resetElement();
					eventElement.css('filter', ''); // clear IE opacity side-effects
					showEvents(event, eventElement);
				}else{
					// changed!
					var minuteDelta = 0;
					if (!allDay) {
						minuteDelta = Math.round((eventElement.offset().top - getBodyContent().offset().top) / slotHeight)
							* opt('slotMinutes')
							+ minMinute
							- (event.start.getHours() * 60 + event.start.getMinutes());
					}
					eventDrop(this, event, dayDelta, minuteDelta, allDay, ev, ui);
				}
				//setOverflowHidden(false);
			}
		});
		function resetElement() {
			if (!allDay) {
				eventElement
					.width(origWidth)
					.height('')
					.draggable('option', 'grid', null);
				allDay = true;
			}
		}
	}
	
	
	// when event starts out IN TIMESLOTS
	
	function draggableSlotEvent(event, eventElement, timeElement) {
		var origPosition;
		var allDay=false;
		var dayDelta;
		var minuteDelta;
		var prevMinuteDelta;
		var dis = opt('isRTL') ? -1 : 1;
		var hoverListener = getHoverListener();
		var colCnt = getColCnt();
		var colWidth = getColWidth();
		var slotHeight = getSlotHeight();
		eventElement.draggable({
			zIndex: 9,
			scroll: false,
			grid: [colWidth, slotHeight],
			axis: colCnt==1 ? 'y' : false,
			opacity: opt('dragOpacity'),
			revertDuration: opt('dragRevertDuration'),
			start: function(ev, ui) {
				trigger('eventDragStart', eventElement, event, ev, ui);
				hideEvents(event, eventElement);
				origPosition = eventElement.position();
				minuteDelta = prevMinuteDelta = 0;
				hoverListener.start(function(cell, origCell, rowDelta, colDelta) {
					eventElement.draggable('option', 'revert', !cell);
					clearOverlays();
					if (cell) {
						dayDelta = colDelta * dis;
						if (opt('allDaySlot') && !cell.row) {
							// over full days
							if (!allDay) {
								// convert to temporary all-day event
								allDay = true;
								timeElement.hide();
								eventElement.draggable('option', 'grid', null);
							}
							renderDayOverlay(
								addDays(cloneDate(event.start), dayDelta),
								addDays(exclEndDay(event), dayDelta)
							);
						}else{
							// on slots
							resetElement();
						}
					}
				}, ev, 'drag');
			},
			drag: function(ev, ui) {
				minuteDelta = Math.round((ui.position.top - origPosition.top) / slotHeight) * opt('slotMinutes');
				if (minuteDelta != prevMinuteDelta) {
					if (!allDay) {
						updateTimeText(minuteDelta);
					}
					prevMinuteDelta = minuteDelta;
				}
			},
			stop: function(ev, ui) {
				var cell = hoverListener.stop();
				clearOverlays();
				trigger('eventDragStop', eventElement, event, ev, ui);
				if (cell && (dayDelta || minuteDelta || allDay)) {
					// changed!
					eventDrop(this, event, dayDelta, allDay ? 0 : minuteDelta, allDay, ev, ui);
				}else{
					// either no change or out-of-bounds (draggable has already reverted)
					resetElement();
					eventElement.css('filter', ''); // clear IE opacity side-effects
					eventElement.css(origPosition); // sometimes fast drags make event revert to wrong position
					updateTimeText(0);
					showEvents(event, eventElement);
				}
			}
		});
		function updateTimeText(minuteDelta) {
			var newStart = addMinutes(cloneDate(event.start), minuteDelta);
			var newEnd;
			if (event.end) {
				newEnd = addMinutes(cloneDate(event.end), minuteDelta);
			}
			timeElement.text(formatDates(newStart, newEnd, opt('timeFormat')));
		}
		function resetElement() {
			// convert back to original slot-event
			if (allDay) {
				timeElement.css('display', ''); // show() was causing display=inline
				eventElement.draggable('option', 'grid', [colWidth, slotHeight]);
				allDay = false;
			}
		}
	}
	
	
	
	/* Resizing
	--------------------------------------------------------------------------------------*/
	
	
	function resizableSlotEvent(event, eventElement, timeElement) {
		var slotDelta, prevSlotDelta;
		var slotHeight = getSlotHeight();
		eventElement.resizable({
			handles: {
				s: 'div.ui-resizable-s'
			},
			grid: slotHeight,
			start: function(ev, ui) {
				slotDelta = prevSlotDelta = 0;
				hideEvents(event, eventElement);
				eventElement.css('z-index', 9);
				trigger('eventResizeStart', this, event, ev, ui);
			},
			resize: function(ev, ui) {
				// don't rely on ui.size.height, doesn't take grid into account
				slotDelta = Math.round((Math.max(slotHeight, eventElement.height()) - ui.originalSize.height) / slotHeight);
				if (slotDelta != prevSlotDelta) {
					timeElement.text(
						formatDates(
							event.start,
							(!slotDelta && !event.end) ? null : // no change, so don't display time range
								addMinutes(eventEnd(event), opt('slotMinutes')*slotDelta),
							opt('timeFormat')
						)
					);
					prevSlotDelta = slotDelta;
				}
			},
			stop: function(ev, ui) {
				trigger('eventResizeStop', this, event, ev, ui);
				if (slotDelta) {
					eventResize(this, event, 0, opt('slotMinutes')*slotDelta, ev, ui);
				}else{
					eventElement.css('z-index', 8);
					showEvents(event, eventElement);
					// BUG: if event was really short, need to put title back in span
				}
			}
		});
	}
	

}


function countForwardSegs(levels) {
	var i, j, k, level, segForward, segBack;
	for (i=levels.length-1; i>0; i--) {
		level = levels[i];
		for (j=0; j<level.length; j++) {
			segForward = level[j];
			for (k=0; k<levels[i-1].length; k++) {
				segBack = levels[i-1][k];
				if (segsCollide(segForward, segBack)) {
					segBack.forward = Math.max(segBack.forward||0, (segForward.forward||0)+1);
				}
			}
		}
	}
}




function View(element, calendar, viewName) {
	var t = this;
	
	
	// exports
	t.element = element;
	t.calendar = calendar;
	t.name = viewName;
	t.opt = opt;
	t.trigger = trigger;
	//t.setOverflowHidden = setOverflowHidden;
	t.isEventDraggable = isEventDraggable;
	t.isEventResizable = isEventResizable;
	t.reportEvents = reportEvents;
	t.eventEnd = eventEnd;
	t.reportEventElement = reportEventElement;
	t.reportEventClear = reportEventClear;
	t.eventElementHandlers = eventElementHandlers;
	t.showEvents = showEvents;
	t.hideEvents = hideEvents;
	t.eventDrop = eventDrop;
	t.eventResize = eventResize;
	// t.title
	// t.start, t.end
	// t.visStart, t.visEnd
	
	
	// imports
	var defaultEventEnd = t.defaultEventEnd;
	var normalizeEvent = calendar.normalizeEvent; // in EventManager
	var reportEventChange = calendar.reportEventChange;
	
	
	// locals
	var eventsByID = {};
	var eventElements = [];
	var eventElementsByID = {};
	var options = calendar.options;
	
	
	
	function opt(name, viewNameOverride) {
		var v = options[name];
		if (typeof v == 'object') {
			return smartProperty(v, viewNameOverride || viewName);
		}
		return v;
	}

	
	function trigger(name, thisObj) {
		return calendar.trigger.apply(
			calendar,
			[name, thisObj || t].concat(Array.prototype.slice.call(arguments, 2), [t])
		);
	}
	
	
	/*
	function setOverflowHidden(bool) {
		element.css('overflow', bool ? 'hidden' : '');
	}
	*/
	
	
	function isEventDraggable(event) {
		return isEventEditable(event) && !opt('disableDragging');
	}
	
	
	function isEventResizable(event) { // but also need to make sure the seg.isEnd == true
		return isEventEditable(event) && !opt('disableResizing');
	}
	
	
	function isEventEditable(event) {
		return firstDefined(event.editable, (event.source || {}).editable, opt('editable'));
	}
	
	
	
	/* Event Data
	------------------------------------------------------------------------------*/
	
	
	// report when view receives new events
	function reportEvents(events) { // events are already normalized at this point
		eventsByID = {};
		var i, len=events.length, event;
		for (i=0; i<len; i++) {
			event = events[i];
			if (eventsByID[event._id]) {
				eventsByID[event._id].push(event);
			}else{
				eventsByID[event._id] = [event];
			}
		}
	}
	
	
	// returns a Date object for an event's end
	function eventEnd(event) {
		return event.end ? cloneDate(event.end) : defaultEventEnd(event);
	}
	
	
	
	/* Event Elements
	------------------------------------------------------------------------------*/
	
	
	// report when view creates an element for an event
	function reportEventElement(event, element) {
		eventElements.push(element);
		if (eventElementsByID[event._id]) {
			eventElementsByID[event._id].push(element);
		}else{
			eventElementsByID[event._id] = [element];
		}
	}
	
	
	function reportEventClear() {
		eventElements = [];
		eventElementsByID = {};
	}
	
	
	// attaches eventClick, eventMouseover, eventMouseout
	function eventElementHandlers(event, eventElement) {
		eventElement
			.click(function(ev) {
				if (!eventElement.hasClass('ui-draggable-dragging') &&
					!eventElement.hasClass('ui-resizable-resizing')) {
						return trigger('eventClick', this, event, ev);
					}
			})
			.hover(
				function(ev) {
					trigger('eventMouseover', this, event, ev);
				},
				function(ev) {
					trigger('eventMouseout', this, event, ev);
				}
			);
		// TODO: don't fire eventMouseover/eventMouseout *while* dragging is occuring (on subject element)
		// TODO: same for resizing
	}
	
	
	function showEvents(event, exceptElement) {
		eachEventElement(event, exceptElement, 'show');
	}
	
	
	function hideEvents(event, exceptElement) {
		eachEventElement(event, exceptElement, 'hide');
	}
	
	
	function eachEventElement(event, exceptElement, funcName) {
		var elements = eventElementsByID[event._id],
			i, len = elements.length;
		for (i=0; i<len; i++) {
			if (!exceptElement || elements[i][0] != exceptElement[0]) {
				elements[i][funcName]();
			}
		}
	}
	
	
	
	/* Event Modification Reporting
	---------------------------------------------------------------------------------*/
	
	
	function eventDrop(e, event, dayDelta, minuteDelta, allDay, ev, ui) {
		var oldAllDay = event.allDay;
		var eventId = event._id;
		moveEvents(eventsByID[eventId], dayDelta, minuteDelta, allDay);
		trigger(
			'eventDrop',
			e,
			event,
			dayDelta,
			minuteDelta,
			allDay,
			function() {
				// TODO: investigate cases where this inverse technique might not work
				moveEvents(eventsByID[eventId], -dayDelta, -minuteDelta, oldAllDay);
				reportEventChange(eventId);
			},
			ev,
			ui
		);
		reportEventChange(eventId);
	}
	
	
	function eventResize(e, event, dayDelta, minuteDelta, ev, ui) {
		var eventId = event._id;
		elongateEvents(eventsByID[eventId], dayDelta, minuteDelta);
		trigger(
			'eventResize',
			e,
			event,
			dayDelta,
			minuteDelta,
			function() {
				// TODO: investigate cases where this inverse technique might not work
				elongateEvents(eventsByID[eventId], -dayDelta, -minuteDelta);
				reportEventChange(eventId);
			},
			ev,
			ui
		);
		reportEventChange(eventId);
	}
	
	
	
	/* Event Modification Math
	---------------------------------------------------------------------------------*/
	
	
	function moveEvents(events, dayDelta, minuteDelta, allDay) {
		minuteDelta = minuteDelta || 0;
		for (var e, len=events.length, i=0; i<len; i++) {
			e = events[i];
			if (allDay !== undefined) {
				e.allDay = allDay;
			}
			addMinutes(addDays(e.start, dayDelta, true), minuteDelta);
			if (e.end) {
				e.end = addMinutes(addDays(e.end, dayDelta, true), minuteDelta);
			}
			normalizeEvent(e, options);
		}
	}
	
	
	function elongateEvents(events, dayDelta, minuteDelta) {
		minuteDelta = minuteDelta || 0;
		for (var e, len=events.length, i=0; i<len; i++) {
			e = events[i];
			e.end = addMinutes(addDays(eventEnd(e), dayDelta, true), minuteDelta);
			normalizeEvent(e, options);
		}
	}
	

}

function DayEventRenderer() {
	var t = this;

	
	// exports
	t.renderDaySegs = renderDaySegs;
	t.resizableDayEvent = resizableDayEvent;
	
	
	// imports
	var opt = t.opt;
	var trigger = t.trigger;
	var isEventDraggable = t.isEventDraggable;
	var isEventResizable = t.isEventResizable;
	var eventEnd = t.eventEnd;
	var reportEventElement = t.reportEventElement;
	var showEvents = t.showEvents;
	var hideEvents = t.hideEvents;
	var eventResize = t.eventResize;
	var getRowCnt = t.getRowCnt;
	var getColCnt = t.getColCnt;
	var getColWidth = t.getColWidth;
	var allDayRow = t.allDayRow;
	var allDayBounds = t.allDayBounds;
	var colContentLeft = t.colContentLeft;
	var colContentRight = t.colContentRight;
	var dayOfWeekCol = t.dayOfWeekCol;
	var dateCell = t.dateCell;
	var compileDaySegs = t.compileDaySegs;
	var getDaySegmentContainer = t.getDaySegmentContainer;
	var bindDaySeg = t.bindDaySeg; //TODO: streamline this
	var formatDates = t.calendar.formatDates;
	var renderDayOverlay = t.renderDayOverlay;
	var clearOverlays = t.clearOverlays;
	var clearSelection = t.clearSelection;
	
	
	
	/* Rendering
	-----------------------------------------------------------------------------*/
	
	
	function renderDaySegs(segs, modifiedEventId) {
		var segmentContainer = getDaySegmentContainer();
		var rowDivs;
		var rowCnt = getRowCnt();
		var colCnt = getColCnt();
		var i = 0;
		var rowI;
		var levelI;
		var colHeights;
		var j;
		var segCnt = segs.length;
		var seg;
		var top;
		var k;
		segmentContainer[0].innerHTML = daySegHTML(segs); // faster than .html()
		daySegElementResolve(segs, segmentContainer.children());
		daySegElementReport(segs);
		daySegHandlers(segs, segmentContainer, modifiedEventId);
		daySegCalcHSides(segs);
		daySegSetWidths(segs);
		daySegCalcHeights(segs);
		rowDivs = getRowDivs();
		// set row heights, calculate event tops (in relation to row top)
		for (rowI=0; rowI<rowCnt; rowI++) {
			levelI = 0;
			colHeights = [];
			for (j=0; j<colCnt; j++) {
				colHeights[j] = 0;
			}
			while (i<segCnt && (seg = segs[i]).row == rowI) {
				// loop through segs in a row
				top = arrayMax(colHeights.slice(seg.startCol, seg.endCol));
				seg.top = top;
				top += seg.outerHeight;
				for (k=seg.startCol; k<seg.endCol; k++) {
					colHeights[k] = top;
				}
				i++;
			}
			rowDivs[rowI].height(arrayMax(colHeights));
		}
		daySegSetTops(segs, getRowTops(rowDivs));
	}
	
	
	function renderTempDaySegs(segs, adjustRow, adjustTop) {
		var tempContainer = $("<div/>");
		var elements;
		var segmentContainer = getDaySegmentContainer();
		var i;
		var segCnt = segs.length;
		var element;
		tempContainer[0].innerHTML = daySegHTML(segs); // faster than .html()
		elements = tempContainer.children();
		segmentContainer.append(elements);
		daySegElementResolve(segs, elements);
		daySegCalcHSides(segs);
		daySegSetWidths(segs);
		daySegCalcHeights(segs);
		daySegSetTops(segs, getRowTops(getRowDivs()));
		elements = [];
		for (i=0; i<segCnt; i++) {
			element = segs[i].element;
			if (element) {
				if (segs[i].row === adjustRow) {
					element.css('top', adjustTop);
				}
				elements.push(element[0]);
			}
		}
		return $(elements);
	}
	
	
	function daySegHTML(segs) { // also sets seg.left and seg.outerWidth
		var rtl = opt('isRTL');
		var i;
		var segCnt=segs.length;
		var seg;
		var event;
		var url;
		var classes;
		var bounds = allDayBounds();
		var minLeft = bounds.left;
		var maxLeft = bounds.right;
		var leftCol;
		var rightCol;
		var left;
		var right;
		var skinCss;
		var html = '';
		// calculate desired position/dimensions, create html
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			event = seg.event;
			classes = ['fc-event', 'fc-event-skin', 'fc-event-hori'];
			if (isEventDraggable(event)) {
				classes.push('fc-event-draggable');
			}
			if (rtl) {
				if (seg.isStart) {
					classes.push('fc-corner-right');
				}
				if (seg.isEnd) {
					classes.push('fc-corner-left');
				}
				leftCol = dayOfWeekCol(seg.end.getDay()-1);
				rightCol = dayOfWeekCol(seg.start.getDay());
				left = seg.isEnd ? colContentLeft(leftCol) : minLeft;
				right = seg.isStart ? colContentRight(rightCol) : maxLeft;
			}else{
				if (seg.isStart) {
					classes.push('fc-corner-left');
				}
				if (seg.isEnd) {
					classes.push('fc-corner-right');
				}
				leftCol = dayOfWeekCol(seg.start.getDay());
				rightCol = dayOfWeekCol(seg.end.getDay()-1);
				left = seg.isStart ? colContentLeft(leftCol) : minLeft;
				right = seg.isEnd ? colContentRight(rightCol) : maxLeft;
			}
			classes = classes.concat(event.className);
			if (event.source) {
				classes = classes.concat(event.source.className || []);
			}
			url = event.url;
			skinCss = getSkinCss(event, opt);
			if (url) {
				html += "<a href='" + htmlEscape(url) + "'";
			}else{
				html += "<div";
			}
			html +=
				" class='" + classes.join(' ') + "'" +
				" style='position:absolute;z-index:8;left:"+left+"px;" + skinCss + "'" +
				">" +
				"<div" +
				" class='fc-event-inner fc-event-skin'" +
				(skinCss ? " style='" + skinCss + "'" : '') +
				">";
			if (!event.allDay && seg.isStart) {
				html +=
					"<span class='fc-event-time'>" +
					htmlEscape(formatDates(event.start, event.end, opt('timeFormat'))) +
					"</span>";
			}
			html +=
				"<span class='fc-event-title'>" + htmlEscape(event.title) + "</span>" +
				"</div>";
			if (seg.isEnd && isEventResizable(event)) {
				html +=
					"<div class='ui-resizable-handle ui-resizable-" + (rtl ? 'w' : 'e') + "'>" +
					"&nbsp;&nbsp;&nbsp;" + // makes hit area a lot better for IE6/7
					"</div>";
			}
			html +=
				"</" + (url ? "a" : "div" ) + ">";
			seg.left = left;
			seg.outerWidth = right - left;
			seg.startCol = leftCol;
			seg.endCol = rightCol + 1; // needs to be exclusive
		}
		return html;
	}
	
	
	function daySegElementResolve(segs, elements) { // sets seg.element
		var i;
		var segCnt = segs.length;
		var seg;
		var event;
		var element;
		var triggerRes;
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			event = seg.event;
			element = $(elements[i]); // faster than .eq()
			triggerRes = trigger('eventRender', event, event, element);
			if (triggerRes === false) {
				element.remove();
			}else{
				if (triggerRes && triggerRes !== true) {
					triggerRes = $(triggerRes)
						.css({
							position: 'absolute',
							left: seg.left
						});
					element.replaceWith(triggerRes);
					element = triggerRes;
				}
				seg.element = element;
			}
		}
	}
	
	
	function daySegElementReport(segs) {
		var i;
		var segCnt = segs.length;
		var seg;
		var element;
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			element = seg.element;
			if (element) {
				reportEventElement(seg.event, element);
			}
		}
	}
	
	
	function daySegHandlers(segs, segmentContainer, modifiedEventId) {
		var i;
		var segCnt = segs.length;
		var seg;
		var element;
		var event;
		// retrieve elements, run through eventRender callback, bind handlers
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			element = seg.element;
			if (element) {
				event = seg.event;
				if (event._id === modifiedEventId) {
					bindDaySeg(event, element, seg);
				}else{
					element[0]._fci = i; // for lazySegBind
				}
			}
		}
		lazySegBind(segmentContainer, segs, bindDaySeg);
	}
	
	
	function daySegCalcHSides(segs) { // also sets seg.key
		var i;
		var segCnt = segs.length;
		var seg;
		var element;
		var key, val;
		var hsideCache = {};
		// record event horizontal sides
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			element = seg.element;
			if (element) {
				key = seg.key = cssKey(element[0]);
				val = hsideCache[key];
				if (val === undefined) {
					val = hsideCache[key] = hsides(element, true);
				}
				seg.hsides = val;
			}
		}
	}
	
	
	function daySegSetWidths(segs) {
		var i;
		var segCnt = segs.length;
		var seg;
		var element;
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			element = seg.element;
			if (element) {
				element[0].style.width = Math.max(0, seg.outerWidth - seg.hsides) + 'px';
			}
		}
	}
	
	
	function daySegCalcHeights(segs) {
		var i;
		var segCnt = segs.length;
		var seg;
		var element;
		var key, val;
		var vmarginCache = {};
		// record event heights
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			element = seg.element;
			if (element) {
				key = seg.key; // created in daySegCalcHSides
				val = vmarginCache[key];
				if (val === undefined) {
					val = vmarginCache[key] = vmargins(element);
				}
				seg.outerHeight = element[0].offsetHeight + val;
			}
		}
	}
	
	
	function getRowDivs() {
		var i;
		var rowCnt = getRowCnt();
		var rowDivs = [];
		for (i=0; i<rowCnt; i++) {
			rowDivs[i] = allDayRow(i)
				.find('td:first div.fc-day-content > div'); // optimal selector?
		}
		return rowDivs;
	}
	
	
	function getRowTops(rowDivs) {
		var i;
		var rowCnt = rowDivs.length;
		var tops = [];
		for (i=0; i<rowCnt; i++) {
			tops[i] = rowDivs[i][0].offsetTop; // !!?? but this means the element needs position:relative if in a table cell!!!!
		}
		return tops;
	}
	
	
	function daySegSetTops(segs, rowTops) { // also triggers eventAfterRender
		var i;
		var segCnt = segs.length;
		var seg;
		var element;
		var event;
		for (i=0; i<segCnt; i++) {
			seg = segs[i];
			element = seg.element;
			if (element) {
				element[0].style.top = rowTops[seg.row] + (seg.top||0) + 'px';
				event = seg.event;
				trigger('eventAfterRender', event, event, element);
			}
		}
	}
	
	
	
	/* Resizing
	-----------------------------------------------------------------------------------*/
	
	
	function resizableDayEvent(event, element, seg) {
		var rtl = opt('isRTL');
		var direction = rtl ? 'w' : 'e';
		var handle = element.find('div.ui-resizable-' + direction);
		var isResizing = false;
		
		// TODO: look into using jquery-ui mouse widget for this stuff
		disableTextSelection(element); // prevent native <a> selection for IE
		element
			.mousedown(function(ev) { // prevent native <a> selection for others
				ev.preventDefault();
			})
			.click(function(ev) {
				if (isResizing) {
					ev.preventDefault(); // prevent link from being visited (only method that worked in IE6)
					ev.stopImmediatePropagation(); // prevent fullcalendar eventClick handler from being called
					                               // (eventElementHandlers needs to be bound after resizableDayEvent)
				}
			});
		
		handle.mousedown(function(ev) {
			if (ev.which != 1) {
				return; // needs to be left mouse button
			}
			isResizing = true;
			var hoverListener = t.getHoverListener();
			var rowCnt = getRowCnt();
			var colCnt = getColCnt();
			var dis = rtl ? -1 : 1;
			var dit = rtl ? colCnt-1 : 0;
			var elementTop = element.css('top');
			var dayDelta;
			var helpers;
			var eventCopy = $.extend({}, event);
			var minCell = dateCell(event.start);
			clearSelection();
			$('body')
				.css('cursor', direction + '-resize')
				.one('mouseup', mouseup);
			trigger('eventResizeStart', this, event, ev);
			hoverListener.start(function(cell, origCell) {
				if (cell) {
					var r = Math.max(minCell.row, cell.row);
					var c = cell.col;
					if (rowCnt == 1) {
						r = 0; // hack for all-day area in agenda views
					}
					if (r == minCell.row) {
						if (rtl) {
							c = Math.min(minCell.col, c);
						}else{
							c = Math.max(minCell.col, c);
						}
					}
					dayDelta = (r*7 + c*dis+dit) - (origCell.row*7 + origCell.col*dis+dit);
					var newEnd = addDays(eventEnd(event), dayDelta, true);
					if (dayDelta) {
						eventCopy.end = newEnd;
						var oldHelpers = helpers;
						helpers = renderTempDaySegs(compileDaySegs([eventCopy]), seg.row, elementTop);
						helpers.find('*').css('cursor', direction + '-resize');
						if (oldHelpers) {
							oldHelpers.remove();
						}
						hideEvents(event);
					}else{
						if (helpers) {
							showEvents(event);
							helpers.remove();
							helpers = null;
						}
					}
					clearOverlays();
					renderDayOverlay(event.start, addDays(cloneDate(newEnd), 1)); // coordinate grid already rebuild at hoverListener.start
				}
			}, ev);
			
			function mouseup(ev) {
				trigger('eventResizeStop', this, event, ev);
				$('body').css('cursor', '');
				hoverListener.stop();
				clearOverlays();
				if (dayDelta) {
					eventResize(this, event, dayDelta, 0, ev);
					// event redraw will clear helpers
				}
				// otherwise, the drag handler already restored the old events
				
				setTimeout(function() { // make this happen after the element's click event
					isResizing = false;
				},0);
			}
			
		});
	}
	

}

//BUG: unselect needs to be triggered when events are dragged+dropped

function SelectionManager() {
	var t = this;
	
	
	// exports
	t.select = select;
	t.unselect = unselect;
	t.reportSelection = reportSelection;
	t.daySelectionMousedown = daySelectionMousedown;
	
	
	// imports
	var opt = t.opt;
	var trigger = t.trigger;
	var defaultSelectionEnd = t.defaultSelectionEnd;
	var renderSelection = t.renderSelection;
	var clearSelection = t.clearSelection;
	
	
	// locals
	var selected = false;



	// unselectAuto
	if (opt('selectable') && opt('unselectAuto')) {
		$(document).mousedown(function(ev) {
			var ignore = opt('unselectCancel');
			if (ignore) {
				if ($(ev.target).parents(ignore).length) { // could be optimized to stop after first match
					return;
				}
			}
			unselect(ev);
		});
	}
	

	function select(startDate, endDate, allDay) {
		unselect();
		if (!endDate) {
			endDate = defaultSelectionEnd(startDate, allDay);
		}
		renderSelection(startDate, endDate, allDay);
		reportSelection(startDate, endDate, allDay);
	}
	
	
	function unselect(ev) {
		if (selected) {
			selected = false;
			clearSelection();
			trigger('unselect', null, ev);
		}
	}
	
	
	function reportSelection(startDate, endDate, allDay, ev) {
		selected = true;
		trigger('select', null, startDate, endDate, allDay, ev);
	}
	
	
	function daySelectionMousedown(ev) { // not really a generic manager method, oh well
		var cellDate = t.cellDate;
		var cellIsAllDay = t.cellIsAllDay;
		var hoverListener = t.getHoverListener();
		var reportDayClick = t.reportDayClick; // this is hacky and sort of weird
		if (ev.which == 1 && opt('selectable')) { // which==1 means left mouse button
			unselect(ev);
			var _mousedownElement = this;
			var dates;
			hoverListener.start(function(cell, origCell) { // TODO: maybe put cellDate/cellIsAllDay info in cell
				clearSelection();
				if (cell && cellIsAllDay(cell)) {
					dates = [ cellDate(origCell), cellDate(cell) ].sort(cmp);
					renderSelection(dates[0], dates[1], true);
				}else{
					dates = null;
				}
			}, ev);
			$(document).one('mouseup', function(ev) {
				hoverListener.stop();
				if (dates) {
					if (+dates[0] == +dates[1]) {
						reportDayClick(dates[0], true, ev);
					}
					reportSelection(dates[0], dates[1], true, ev);
				}
			});
		}
	}


}
 
function OverlayManager() {
	var t = this;
	
	
	// exports
	t.renderOverlay = renderOverlay;
	t.clearOverlays = clearOverlays;
	
	
	// locals
	var usedOverlays = [];
	var unusedOverlays = [];
	
	
	function renderOverlay(rect, parent) {
		var e = unusedOverlays.shift();
		if (!e) {
			e = $("<div class='fc-cell-overlay' style='position:absolute;z-index:3'/>");
		}
		if (e[0].parentNode != parent[0]) {
			e.appendTo(parent);
		}
		usedOverlays.push(e.css(rect).show());
		return e;
	}
	

	function clearOverlays() {
		var e;
		while (e = usedOverlays.shift()) {
			unusedOverlays.push(e.hide().unbind());
		}
	}


}

function CoordinateGrid(buildFunc) {

	var t = this;
	var rows;
	var cols;
	
	
	t.build = function() {
		rows = [];
		cols = [];
		buildFunc(rows, cols);
	};
	
	
	t.cell = function(x, y) {
		var rowCnt = rows.length;
		var colCnt = cols.length;
		var i, r=-1, c=-1;
		for (i=0; i<rowCnt; i++) {
			if (y >= rows[i][0] && y < rows[i][1]) {
				r = i;
				break;
			}
		}
		for (i=0; i<colCnt; i++) {
			if (x >= cols[i][0] && x < cols[i][1]) {
				c = i;
				break;
			}
		}
		return (r>=0 && c>=0) ? { row:r, col:c } : null;
	};
	
	
	t.rect = function(row0, col0, row1, col1, originElement) { // row1,col1 is inclusive
		var origin = originElement.offset();
		return {
			top: rows[row0][0] - origin.top,
			left: cols[col0][0] - origin.left,
			width: cols[col1][1] - cols[col0][0],
			height: rows[row1][1] - rows[row0][0]
		};
	};

}

function HoverListener(coordinateGrid) {


	var t = this;
	var bindType;
	var change;
	var firstCell;
	var cell;
	
	
	t.start = function(_change, ev, _bindType) {
		change = _change;
		firstCell = cell = null;
		coordinateGrid.build();
		mouse(ev);
		bindType = _bindType || 'mousemove';
		$(document).bind(bindType, mouse);
	};
	
	
	function mouse(ev) {
		_fixUIEvent(ev); // see below
		var newCell = coordinateGrid.cell(ev.pageX, ev.pageY);
		if (!newCell != !cell || newCell && (newCell.row != cell.row || newCell.col != cell.col)) {
			if (newCell) {
				if (!firstCell) {
					firstCell = newCell;
				}
				change(newCell, firstCell, newCell.row-firstCell.row, newCell.col-firstCell.col);
			}else{
				change(newCell, firstCell);
			}
			cell = newCell;
		}
	}
	
	
	t.stop = function() {
		$(document).unbind(bindType, mouse);
		return cell;
	};
	
	
}



// this fix was only necessary for jQuery UI 1.8.16 (and jQuery 1.7 or 1.7.1)
// upgrading to jQuery UI 1.8.17 (and using either jQuery 1.7 or 1.7.1) fixed the problem
// but keep this in here for 1.8.16 users
// and maybe remove it down the line

function _fixUIEvent(event) { // for issue 1168
	if (event.pageX === undefined) {
		event.pageX = event.originalEvent.pageX;
		event.pageY = event.originalEvent.pageY;
	}
}
function HorizontalPositionCache(getElement) {

	var t = this,
		elements = {},
		lefts = {},
		rights = {};
		
	function e(i) {
		return elements[i] = elements[i] || getElement(i);
	}
	
	t.left = function(i) {
		return lefts[i] = lefts[i] === undefined ? e(i).position().left : lefts[i];
	};
	
	t.right = function(i) {
		return rights[i] = rights[i] === undefined ? t.left(i) + e(i).width() : rights[i];
	};
	
	t.clear = function() {
		elements = {};
		lefts = {};
		rights = {};
	};
	
}

})(jQuery);
</script>
  <!--?php include("scripts/schoolPad/loginManager.js.php");?-->

  <link href="https://cuiet.codebrigade.in/css/style_new.css" rel="stylesheet" type="text/css" />

  <style>
@font-face {
    font-family: 'r-regular';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Regular-webfont.svg#robotoregular') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-semi';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Medium-webfont.svg#robotomedium') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-bold';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Bold-webfont.svg#robotobold') format('svg');
    font-weight: normal;
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-thin';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.eot');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Thin-webfont.svg#robotothin') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-black';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.ttf');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Black-webfont.svg#robotoblack') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'r-light';
    src: url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.ttf');
    src: url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.eot?#iefix') format('embedded-opentype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.woff') format('woff'),
         url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.ttf') format('truetype'),
         url('https://cuiet.codebrigade.in/font/Roboto-Light-webfont.svg#robotolight') format('svg');
    font-weight: normal;
    font-style: normal;

}
</style>  <link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/font/font-face.css">

  <!-- tooltip scripts -->
  <link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/jquery.qtip.css">


  <!-- tooltip scripts -->

  <style>
    #reminderModal .modal-backdrop {
      display: none;
    }
  </style>

      <!--<div id="greeting" style="position:absolute; left:520px; padding-down:100px" >
                                                        
</div>-->
  <script>
    /*
function hide()
{
	$('#header').hide();
	
	
}
*/


    $(document).ready(function() {

      $.ajax({
        url: "https://cuiet.codebrigade.in/onlineTestStudent/checkTestExists/",
        dataType: "text",
        success: function(msg) {
          obj = $.parseJSON(msg);
          //alert(msg);
          
            if (obj == -1) {
              $('#checkOmrTest').hide();
              $('#header_notificationOnlineTest').html('');
              $('#header_notificationOnlineTest').hide();
            } else {
              $('#checkOmrTest').show();
              if (obj > 0) {
                $('#header_notificationOnlineTest').html(obj);
                $('#header_notificationOnlineTest').show();
              } else {
                $('#header_notificationOnlineTest').html('');
                $('#header_notificationOnlineTest').hide();
              }



            }
          
        }

      });

      $.ajax({

        url: "https://cuiet.codebrigade.in/guiders/getGuider/",
        type: "POST",
        success: function(msg) {
          eval(msg);
        }

      });
      //  getSessionDropDown();
      getSiblingDropDown();
    });
    //for guiders
    function setGuiderViewedOld(userId, groupId) {
      $.ajax({
        url: "https://cuiet.codebrigade.in/guiders/setGuiderViewed/",
        type: "POST",
        data: ({
          userId: userId,
          groupId: groupId
        }),
        success: function(msg) {
          //do nothing
        }
      });
    }

    function getSessionDropDown() {
      $.ajax({
        url: "https://cuiet.codebrigade.in/loginManager/sessionDropDown/",
        success: function(msg) {
          $('#sessionHeader').html(msg);
        }
      });
    }

    function getSiblingDropDown() { //alert(1);
      $.ajax({
        url: "https://cuiet.codebrigade.in/loginManager/getSiblingDropDown/",
        success: function(msg) { //alert(msg);
          if (msg == '') {
            $('.ui-sibling-div').hide();
          } else {
            $('.ui-sibling-div').show();
          }
          $('.ui-sibling-dropdown-wrap').html(msg);
        }
      });

    }

    function hideHistory() //This function is used to close the recently visited div
    {
      $('#history').html(' <div id="history" style="top:0px;right:0px;position:fixed;background color:#FFFFF;cursor:pointer;width:106px;height:25px;" ><img style="cursor:pointer" onclick="tabFloating()" src=\'https://cuiet.codebrigade.in//images/history_btn.png\'></div>');
    }

    function tabFloating() //This is used to get the result of recently visited links by the user.
    {

      $.ajax({
        url: "https://cuiet.codebrigade.in/link/linkArray",



        success: function(msg) {
          //alert(msg);
          //alert(msg);
          obj = $.parseJSON(msg);

          //alert(obj[0].link);     
          // a=obj.length;  
          // alert(a);

          if (obj.length <= 10) {
            a = obj.length;
            //alert(a);
          } else {
            a = 10;
          }

          //$("#header").slideToggle("slow");
          $("#history").html("");
          //$("#header").append("<p>");			  
          var str = "";

          //$("#header").append("<br/>");
          //$("#header").append("<ul>");


          str += "<ul style='background-color:#ffffff;margin:0px 0px 0px -100px; \
	       padding:0px;list-style-type:none;width:200px;border-bottom-right-radius: 5px 5px;\
	       border-bottom-left-radius: 5px 5px;z-index:10000;box-shadow:1px 1px 10px 2px #888888;' class=textVerdana11>";

          for (i = a - 1; i >= 0; i--) {


            //var n=obj[i];
            //var m=n.split("/");
            str += "<li style='padding:5px;border-bottom:1px dotted #cccccc'><a href='" + obj[i].link + "'>" + obj[i].name + "</a></li>";
          }
          str += "<li style='padding:5px;text-align:center' class='textVerdana10'><a href=# onclick='hideHistory();' style='text-decoration:none;'><b>----- Click to close[x] -----</b></a></li>";

          str += "</ul>";
          $("#history").html(str);

          // $("#header").append("<li>"+"<a href='#' onclick=hide()>collapse</a></li>");
          //$("#header").append("</ul>");
          // $("#header").append("</p>");
        }

      });

    }
  </script>
    

    <!-- <div id="history" style="top:0px;right:0px;position:fixed;background color:#FFFFF;width:106px;height:25px;">
 	<img src='https://cuiet.codebrigade.in//images/history_btn.png' style="cursor:pointer" onclick="tabFloating()">
</div> -->

  <p id="para" style="top:0px;right:0px;position:fixed;display:none"><img src='https://cuiet.codebrigade.in//images/history_btn.png'> please click here to toggle</p>

  <table width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr>
      <td height="5"></td>
    </tr>
    <tr>
      <td width="1%" colspan="1"></td>
      <td colspan='1' valign="top" style="border-bottom:1px solid #F2F2F2"><a href='https://cuiet.codebrigade.in/main'><img id='logoMain' src='https://cuiet.codebrigade.in/images/logo_373.png' alt='Logo' border='0px'/></a>
							
	
<div id='background' class='img' border='10px' 
style='display:none;background-image:url(https://cuiet.codebrigade.in/images/bg_greeting.png);
background-repeat:no-repeat;
background-position:center 0px;
width:205px; height:119px;
position:absolute;
left:42%;
float:right;
top:0px;
z-index:10'>
<img id='cross' style='display:none; position:relative; float:right; right:20px; z-index:100' onClick='visible(1);' src='https://cuiet.codebrigade.in/images/cross-circle.png'images/close_button.png' />
 <div  id='greeting' style='position:relative; left:-2px; float:right;'></div>
</div>        <!--<td valign="top" style="border-bottom:1px dotted #abbfd2"><div id="greeting"></div> </td>-->

      <td width="49%" colspan="1" align="right" valign="top" class="textVerdana11" style="padding-top:6px;
		padding-bottom:17px; border-bottom:1px solid #F2F2F2;">
        <table width="58%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td width="52" rowspan="2" align="right" valign="top">
              <img src='https://s3.amazonaws.com/cbrig-assets/cuiet/resources/Student/S9692DMDa.jpg' width='55px' height='55px' style='border-radius:27px;object-fit:cover;object-position:top'>            </td>

          </tr>

          <tr>
            <td>
              <table width="100%" border="0" cellspacing="0" cellpadding="0">
                <tr>

                  <td align="left" width="40%" valign="top" class="textVerdana11" style="padding-left:11px;">
                    <div class="ui-account-name">

                      <span style="font-weight:600;color:#444;">
                        SOMYA SHARMA</span>
                    </div>
                                                                                
                      
                        <div style="color:#888;font-size:11px"><strong>Roll No: </strong>2410990718</div>
                        <div style="color:#888;font-size:11px"><strong>Mentor Name: </strong></div>
                        <div style="color:#888;font-size:11px"><strong>Mentor Email: </strong></div>
                        <div style="color:#888;font-size:11px"><strong>Mentor Mobile No.: </strong></div>
                                                           
                 
                                    
                  </td>
                </tr>
              </table>
            </td>
            <!--   <td colspan="4" align="right" valign="top" class="textVerdana11" style="padding:0px 25px 0px 0px">Date: 25/02/2010 </td>  -->
          </tr>

          <tr>
            <td colspan="6" align="left" style="padding:0px"></td>
          </tr>
        </table>
      </td>
      <td width="1%" colspan="1"></td>
    </tr>
    <tr>
      
        <td width="1%" align="center" class="textVerdana11" style="padding: 15px 0px 0px 0px"></td>

        <td width="48%" align="left" class="textVerdana11" style="padding: 20px 0px 12px 0">
          </b>
          

            <div class="ui-head-calendar">
              <a style="cursor: pointer" href="
                                            	https://cuiet.codebrigade.in/calendarEventStudent/index">My Calendar</a>
            </div>
            
                      <span id='checkOmrTest' name='checkOmrTest' style='display:none;'>
              <img src='https://cuiet.codebrigade.in/images/script.png' style='position:relative; top:3px;'>
              <a style="cursor: pointer" href="https://cuiet.codebrigade.in/onlineTestStudent/display"><b>Online Quiz</b></a>
              <b><span id='header_notificationOnlineTest' class='badge red' style='margin-left:5px;font-weight:bold;display:none;color:#ffffff'></span></b>
            </span>
          
          <span class='textVerdana11' style='cursor:pointer;' onclick='showOnlineCategoryUsers()'>
<strong>
<blink><span id='userRequests' name='userRequests'
style='
display:none;
color:red;
z-index:999999;' onclick='showOnlineCategoryUsers()'
>4</span></strong></blink>
<span id='chatNotification' style='display:none;'><img src='https://cuiet.codebrigade.in/images/chat.png' alt='FeedBack' border='0px'/></span>
</span>        </td>

            <td width="50%" align="right" style="padding:25px 0px 16px 0;font:11px Verdana;color:#2e5b87;">
                  <table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tr>
              <td width="52" align="right">
                <div class="ui-menu-lookup right">Menu Option Lookup</div>
              </td>
              <td width="41%" align="right">
                <div style="position:relative;">

                  <input type="text" name="menuLookup" class="textVerdana11 ui-feed-menu-lookup" id="menuLookup" onkeyup="menuLookup();" autocomplete="off" placeholder="Type here to find menu option" />

                  <div id="menuLookupContainer" style="position:absolute;z-index:100;padding:0px 0px 0px 0px; text-align:left; display:none;">
                  </div>
                  <script type="text/javascript">
                    $('#menuLookup').keydown(function(e) {
                      if (e.keyCode == 40) {
                        $(this).next("div").find(".menulook_nav:first a").focus();
                        var get_id = $(this).next("div").find(".menulook_nav:first a").attr('id');

                        var insert_text = $("#" + get_id).html();
                        $("#menuLookup").val(insert_text);

                        return false;
                      }

                      if (e.keyCode == 27) {
                        $('#menuLookupContainer').slideUp(150);
                      }
                    });

                    $(document).click(function(event) {
                      if ($(event.target).closest('#menuLookupContainer').length == 0) {
                        $('#menuLookupContainer').slideUp(150);
                      }
                    });
                  </script>
                </div>


            </tr>
          </table>
              </td>
    </tr>
  </table>
  <!--feedback() is checkGreeting.js.php -->

    <!-- uservoice feedback -->
    <!-- uservoice feedback ends-->
  <!-- This is the feedback window that opens up -->
  <div id="feedback" style="display:none; width:420px;">
    <table width="100%" cellspacing=0 cellpadding=0 border=0>
      <tr>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/top_left.png); opacity:0.9"></td>
        <td style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/rt_top.png);
    background-position:top right; opacity:0.9"></td>
      </tr>
      <tr>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
        <td style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png);">
          <div style="background-color:#ffffff; position:relative">
            <div id="feedbackLoading" style="text-align:center; padding:10px">
              <img src="https://cuiet.codebrigade.in/images/loader.gif" />
            </div>
            <!-- here goes the content of the div -->
            <div id="feedbackContent" style="display:none">
              <form name="myFormFeedback" id="myFormFeedback" method="post" enctype="multipart/form-data" action="https://cuiet.codebrigade.in/feedback/feeds/" style="margin:0px;">
                <table width="400" border="0" cellspacing="0" cellpadding="0">
                  <tr>
                    <td colspan=3>
                      <table width="100%" border="0" cellspacing="0" cellpadding="0" class="modal_top_small">
                        <tr>
                          <td align="left" width="25" height="16" class="gridPanelTitle">
                            <img src="https://cuiet.codebrigade.in/images/resources.png" width="16" height="16">
                          </td>
                          <td align="left" class="gridPanelTitle">&nbsp;<b>FeedBack</b>
                          </td>
                          <td class="gridPanelTitle" align="right">
                            <div id="cross" onclick="$.modal.close()" title="Close"></div>
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                  <tr>
                    <td id="feedbackContainer">
                      <table class='error' id='feedbackNoticeTable' style="text-align:left; display:none">
                        <tr>
                          <td width="98%" id="feedbackNoticeCell" style='text-align:left;'>
                          </td>
                          <td valign='top'>
                            <div id='cross_2' style="text-align:right; cursor:pointer" title='close' onClick="hideDiv('feedbackNoticeTable')"></div>
                          </td>
                        </tr>
                      </table>
                      <table width="100%" border="0" cellspacing="0" cellpadding="0">
                        <tr>
                          <td width="50%" style="padding:5px;" colspan=2>
                            <table width="100%" border="0" cellspacing="0" cellpadding="0">
                              <tr>
                                <td class="textVerdana11" style="padding:5px 0px 5px 0px" valign="top"><strong>FeedBack</strong></td>
                                <td class="textVerdana11" style="padding:5px 0px 5px 0px" width="2%" valign="top"> <b>:</b></td>
                                <td class="textVerdana11" style="padding:5px 0px 5px 0px">
                                  <textarea id="feeds" name="feeds" style="width:280px;height:100px"></textarea>
                                </td>
                              </tr>



                              <tr>
                                <td colspan="4" align="right" style="padding-top:5px;padding-right:10px">
                                  <input id="close" class="submitBtn" type="submit" name="submitClose" value="Save and close" />
                                  &nbsp;<input id="exit" onClick="$.modal.close()" class="submitBtnClose" type="button" name="Cancel" value="Close" />
                                </td>
                              </tr>

                          </td>
                        </tr>

                      </table>
                    </td>
                  </tr>
                </table>
        </td>
      <tr>
        <td height="10px"></td>
      </tr>
    </table>

    </form>

    <!-- Div content ends -->
  </div>

  <!-- feedback window ends -->
  </td>
  <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
  </tr>
  <tr>
    <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/lt_bottom.png);
    background-position:bottom left; opacity:0.9"></td>
    <td style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
    <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/rt_bottom.png);
    background-position:bottom right; opacity:0.9"></td>
  </tr>
  </table>
  </div>

  <!-- Div to show appointmnets -->
    <!-- appointment window ends -->
  <div id="showAppointmentDataModal" style="display:none; width:580px;">
    <table width="100%" cellspacing=0 border=0 cellpadding=0 border=0>
      <tr>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/top_left.png); opacity:0.9"></td>
        <td style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/rt_top.png);background-position:top right; opacity:0.9"></td>
      </tr>
      <tr>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
        <td style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png);">
          <div style="background-color:#ffffff; position:relative;">
            <div id="addLoadingCalendar1" style="text-align:center; padding:10px">
              <img src="https://cuiet.codebrigade.in/images/loader.gif" />
            </div>
            <div id="showContentCalendar1" style="display:none;">
              <table width="560" cellspacing="0" cellpadding="0">
                <tr>
                  <td colspan=4>
                    <table width="100%" border="0" cellspacing="0" cellpadding="0" class="modal_top">
                      <tr>
                        <td align="left" width="25" height="16" class="gridPanelTitle">
                          <img src="https://cuiet.codebrigade.in/images/Calendar.png" width="16" height="16">

                        </td>
                        <td align="left" class="gridPanelTitle">&nbsp;<b>My Appointments</b>
                        </td>
                        <td align="left" width="50%" class="gridPanelTitle" id="countStudentsAppointment"></td>
                        <td align='right'>
                          <div id='cross' class="gridPanelTitle" title='Close' onClick="$.modal.close()"></div>

                        </td>


                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>

          </div>
        </td>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
      </tr>
      <tr>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/lt_bottom.png);
                background-position:bottom left; opacity:0.9">
        </td>
        <td style="background-image:url(https://cuiet.codebrigade.in/images/outer_bg.png); opacity:0.9"></td>
        <td width=10 height=10 style="background-image:url(https://cuiet.codebrigade.in/images/rt_bottom.png);
                background-position:bottom right; opacity:0.9">
        </td>
      </tr>
    </table>
  </div>


  <!-- div for observation image starts-->
  <div id="observationModal" style="display:none;width:640px;position:absolute;z-index:9999;margin:0 auto;right:0;left:0;top:50px;" align="center">

    <table width="100%" cellspacing=0 border=0 cellpadding=0 border=0>
      <tr>
        <td>
          <div style="background-color:#ffffff; position:relative" class="corner_curves">
            <div id="observationLoader" style="text-align:center; padding:10px">
              <img src="https://cuiet.codebrigade.in/images/loader.gif" />
            </div>

            <!-- here goes the content of the div -->
            <div id="observationContent1">
              <table width="620" cellspacing="0" cellpadding="0">
                <tr>
                  <td id="showformContainerObservation" colspan="3">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
                      <tr>
                        <td height="30" coslpan="3" style="border-bottom:1px solid #eee"><button onclick="visibleObservation();" type="button" title="Close" class="greetingClose" data-dismiss="modal" aria-label="Close">
                            <div><span style="text-align:right;font:13px Roboto;padding-right:13px;position:relative;top:3px;padding-right:18px;">Close</span><span id="cross-red" title="Close"></span></div>
                          </button></td>
                      </tr>
                      <tr>
                        <td align="center" style="padding: 10px 10px 10px 10px">
                          <input type='hidden' name='observationId' id='observationId' val='' />
                          <div style="" id="observationContent" align="center"></div>
                        </td>
                      </tr>

                    </table>
                  </td>
                </tr>
              </table>
            </div>

            <!-- Div content ends -->
          </div>
        </td>
        <td width=10 height=10></td>
      </tr>
    </table>
  </div>
  <!-- div for observation ends-->


  <!-- div for reminder starts-->
  <div id="reminderModal" style="display:none;width:640px;position:absolute;z-index:9999;margin:0 auto;right:0;left:0;top:50px;" align="center">

    <table width="100%" cellspacing=0 border=0 cellpadding=0 border=0>
      <tr>
        <td>
          <div style="background-color:#ffffff; position:relative" class="corner_curves">
            <div id="reminderLoader" style="text-align:center; padding:10px">
              <img src="https://cuiet.codebrigade.in/images/loader.gif" />
            </div>

            <!-- here goes the content of the div -->
            <div id="reminderContent1" style="display: none;">
              <table width="620" cellspacing="0" cellpadding="0">
                <tr>
                  <td id="showformContainerreminder" colspan="3">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
                      <tr>
                        <td colspan=3>
                          <table width="100%" border="0" cellspacing="0" cellpadding="0" class="modal_top_medium" style="border-collapse:initial;">
                            <tr>
                              <td align="left" class="gridPanelTitle"><b>Reminder(s)</b>
                              </td>
                              <td align='right' class="gridPanelTitle">
                                <div id='cross' title='Close' onclick='visibleReminder();'></div>
                              </td>
                            </tr>
                          </table>
                        </td>
                        <!--	<td>New reminder</td>
          <td height="30" coslpan="3" style="border-bottom:1px solid #eee"><button onclick="visibleReminder();" type="button" title="Close" class="greetingClose" data-dismiss="modal" aria-label="Close"><div><span style="text-align:right;font:13px Roboto;padding-right:13px;position:relative;top:3px;padding-right:18px;">Close</span><span id="cross-red" title="Close"></span></div></button></td>
         -->
                      </tr>
                      <tr>
                        <td align="left" style="padding: 10px 10px 10px 10px">
                          <input type='hidden' name='reminderId' id='reminderId' />
                          <div style="" id="reminderContent" align="left"></div>
                        </td>
                      </tr>

                    </table>
                    <table width="100%" border="0" cellspacing="0" cellpadding="0" class="modal_bottom">
                      <tr>
                        <td colspan="3" align="right" style="padding:10px;">
                          <input id="exit" onclick='visibleReminder();' class="submitBtn button_small" type="button" name="Cancel" value="Close" />
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>

            <!-- Div content ends -->
          </div>
        </td>
        <td width=10 height=10></td>
      </tr>
    </table>
  </div>
  <!-- div for reminder ends-->


  <!-- div for employee reminder starts-->
  <div id="reminderModalEmployee" style="display:none;width:640px;position:absolute;z-index:9999;margin:0 auto;right:0;left:0;top:50px;" align="center">

    <table width="100%" cellspacing=0 border=0 cellpadding=0 border=0>
      <tr>
        <td>
          <div style="background-color:#ffffff; position:relative" class="corner_curves">
            <div id="reminderLoaderEmployee" style="text-align:center; padding:10px">
              <img src="https://cuiet.codebrigade.in/images/loader.gif" />
            </div>

            <!-- here goes the content of the div -->
            <div id="reminderContent1Employee" style="display: none;">
              <table width="620" cellspacing="0" cellpadding="0">
                <tr>
                  <td id="showformContainerreminderEmployee" colspan="3">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
                      <tr>
                        <td colspan=3>
                          <table width="100%" border="0" cellspacing="0" cellpadding="0" class="modal_top_medium" style="border-collapse:initial;    border-radius:5px 5px 0 0;">
                            <tr>
                              <td align="left" class="gridPanelTitle"><b>Daily Worklog Reminder(s)</b>
                              </td>
                              <td align='right' class="gridPanelTitle">
                                <div id='cross' title='Close' onclick='visibleEmployeeReminder();'></div>
                              </td>
                            </tr>
                          </table>
                        </td>
                        <!-- <td>New reminder</td>
          <td height="30" coslpan="3" style="border-bottom:1px solid #eee"><button onclick="visibleReminder();" type="button" title="Close" class="greetingClose" data-dismiss="modal" aria-label="Close"><div><span style="text-align:right;font:13px Roboto;padding-right:13px;position:relative;top:3px;padding-right:18px;">Close</span><span id="cross-red" title="Close"></span></div></button></td>
         -->
                      </tr>
                      <tr>
                        <td align="left" style="padding: 10px 15px">
                          <input type='hidden' name='reminderIdEmployee' id='reminderIdEmployee' />
                          <div style="" id="reminderContentEmployee" align="left"></div>
                        </td>
                      </tr>

                    </table>
                    <table width="100%" border="0" cellspacing="0" cellpadding="0" class="modal_bottom" style="border-radius: 0 0 5px 5px;">
                      <tr>
                        <td colspan="3" align="right" style="padding:10px;">
                          <input id="exit" onclick='visibleEmployeeReminder();' class="submitBtn button_small" type="button" name="Cancel" value="Close" />
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>

            <!-- Div content ends -->
          </div>
        </td>
        <td width=10 height=10></td>
      </tr>
    </table>
  </div>
  <!-- div for employee reminder ends-->


  <div id="bigGreeting" style="display:none;width:660px;position:absolute;z-index:9999;margin:0 auto;right:0;left:0;top:50px;" align="center">

    <table id="greetingTable" width="100%" cellspacing=0 border=0 cellpadding=0 border=0>

      <tr>

        <td>
          <div style="background-color:#ffffff; position:relative" class="corner_curves">
            <div id="bigGreetingLoader" style="text-align:center; padding:10px">
              <img src="https://cuiet.codebrigade.in/images/loader.gif" />
            </div>

            <!-- here goes the content of the div -->
            <div id="bigGreetingContent1" style="box-shadow: 0 3px 9px rgba(0, 0, 0, .5);border-radius:5px;">
              <table width="100%" cellspacing="0" cellpadding="0">

                <tr>
                  <td id="showformContainerGreet" colspan="3">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
                      <tr>
                        <td height="30" coslpan="3" style="border-bottom:1px solid #eee"><button onclick="visible(2);" type="button" title="Close" class="greetingClose" data-dismiss="modal" aria-label="Close">
                            <div><span style="text-align:right;font:13px Roboto;padding-right:13px;position:relative;top:3px;padding-right:18px;">Close</span><span id="cross-red" title="Close"></span></div>
                          </button></td>
                      </tr>
                      <tr>
                        <td align="center" style="padding: 10px 10px 10px 10px">

                          <div style="" id="bigGreetingContent" align="center"></div>
                        </td>
                      </tr>

                    </table>
                  </td>
                </tr>
              </table>
            </div>

            <!-- Div content ends -->
          </div>
        </td>

      </tr>

    </table>
  </div>
  <!-- div for large greeting image ends-->


<!-- div for large greeting image ends-->

					  <table width="100%" height="32" border="0" cellspacing="0" cellpadding="0">
          <tr>
         
            <td width="5"><img src="https://cuiet.codebrigade.in/images/menu_left.gif" width="5" height="32" /></td>
            <td width='110' align='center' class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding:0px 5px 0px 5px;'><a href="/index.htm" style='text-decoration:none;'>Home</a> </td><td class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_break.gif); background-repeat:no-repeat;' width='1px'></td><td width='110' align='center' class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding:0px 5px 0px 5px;'><a href="myinfo.htm" style='text-decoration:none;'>My Info</a> </td><td class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_break.gif); background-repeat:no-repeat;' width='1px'></td><td width='110' align='center' class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding:0px 5px 0px 5px;'><a href=https://cuiet.codebrigade.in/communication style='text-decoration:none;'>Communication</a> </td><td class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_break.gif); background-repeat:no-repeat;' width='1px'></td><td width='110' align='center' class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding:0px 5px 0px 5px;'><a href=https://cuiet.codebrigade.in/studentPerformanceParent/graphDisplay style='text-decoration:none;'>Performance</a> </td><td class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_break.gif); background-repeat:no-repeat;' width='1px'></td><td width='110' align='center' class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding:0px 5px 0px 5px;'><a href=https://cuiet.codebrigade.in/studentImageGallery/display style='text-decoration:none;'>Image Gallery</a> </td><td class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_break.gif); background-repeat:no-repeat;' width='1px'></td><td width='110' align='center' class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding:0px 5px 0px 5px;'><a href=https://cuiet.codebrigade.in/studentChangePassword/displayGrid style='text-decoration:none;'>Change Password</a> </td><td class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_break.gif); background-repeat:no-repeat;' width='1px'></td><td width='110' align='center' class='menuText' style='background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding:0px 5px 0px 5px;'>

            <td class="menuText" style="background-image:url(https://cuiet.codebrigade.in/images/menu_bg.gif); background-repeat:repeat-x; padding-left:5px;"></td>
            <!--<td class="menuText" style="background-image:url(images/menu_break.gif); background-repeat:no-repeat;" width="1px"></td>-->
            <td width="5"><img src="https://cuiet.codebrigade.in/images/menu_right.gif" width="5" height="32" /></td>
            
          </tr>
          
        </table>
          
        <!-- Notification starts here -->
                <link rel="stylesheet" type="text/css" href="https://cuiet.codebrigade.in/css/dhtmlgoodies_calendar.css">
        <!-- Notification ends here -->


					<div class="ui-module-title">

						<div class="title-text">
							<span id="feed-blank">My Timeline</span>
						</div>


						<!--div class="ui-module-search">

								<input type="text" placeholder="Search Module">

						</div-->
					</div>

					

					<div class="ui-timeline-container-parent row">



						<div id="ui-timeline-container" class="col-md-8">

							<div class="ui-new-activity-div" style="display: none">

								<div class="ui-add-new">

									<textarea class="" rows="5" tabindex="0" placeholder="Add a new ..."></textarea>

								</div>

								<div class="add-new-options">

									<div class="add-new-circular anm" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">


									</div>

									<div class="add-new-planner anm">

									</div>

									<div class="add-new-resource anm">

									</div>

									<div class="add-new-image anm">

									</div>

									<div class="add-new-event anm">

									</div>

									<div class="add-new-poll anm">

									</div>

								</div>

							</div>

							<!--div class="ui-timeline" style="width:18em;border-top:none;border-left:none;padding:5em;border-right:5px solid #E7EAEF;">
										<span style="background: #5D82C6;position: absolute;top: -50px;right: -136px;padding: 15px 50px;border-radius: 3px;font: 18px r-light;">Your School Timeline</span>
								</div-->

							<div class="ui-feed-loader"></div>

							<div id="feed">

								 <div class="ui-date-day-div">

												<div style="width: 540px;;position:relative;margin: 0 0 0 7.9em;border-left:5px solid #E7EAEF;padding:1em 0 1em 3.7em;text-align: center;">
													<div style="position:relative">
														<hr style="width:100%;position:absolute;top:-7px;">
														<span style="position:relative;background-color:#FFF;padding:0 20px;font:500 18px Roboto;color:#3D3D3D;">Sep 25, Today</span>
													</div>
												</div>

											</div>
											<div style="width:38.2em;position:relative;margin: 0 0 0 7.9em;border-left:5px solid #E7EAEF;padding:0.5em;"></div>
											<div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_0" onclick="getCircular(2757,'250925161402799300',1,0)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">Seating Plan 26.09.2025 Morning &amp; Evening Session</div><div id='ui-unread-feed-2757' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">Seating Plan 26.09.2025 Morning &amp; Evening Session <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div><div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_1" onclick="getCircular(2756,'250925155907844534',1,1)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">20 students are already living the Indonesia experience &quot;its your turn this Spring!</div><div id='ui-unread-feed-2756' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">Dear Students,
Nominations are now open!
 
20 students are already living the Indonesia experience —it’s your turn this Spring!
We are excited to offer ... <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div><div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_2" onclick="getCircular(2754,'250925153429983545',1,2)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">RESULT OF BE CIVIL BATCH 2022 5TH SEM REGULAR RESULT OF BE CIVIL BATCH 2022 6TH SEM</div><div id='ui-unread-feed-2754' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">The   Regular result(s) of the following program has been declared;1.    BE CIVIL BATCH 2022 6TH SEM REGULAR MAY 2025 <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div><div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_3" onclick="getCircular(2753,'250925153226521378',1,3)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">REGULAR RESULT OF BE MCE BATCH 2022 6TH SEM </div><div id='ui-unread-feed-2753' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">The   Regular result(s) of the following program has been declared;1.    BE MCE BATCH 2022 6TH SEM REGULAR MAY 2025 <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div> <div class="ui-date-day-div">

												<div style="width: 540px;;position:relative;margin: 0 0 0 7.9em;border-left:5px solid #E7EAEF;padding:1em 0 1em 3.7em;text-align: center;">
													<div style="position:relative">
														<hr style="width:100%;position:absolute;top:-7px;">
														<span style="position:relative;background-color:#FFF;padding:0 20px;font:500 18px Roboto;color:#3D3D3D;">Sep 24, Wednesday</span>
													</div>
												</div>

											</div>
											<div style="width:38.2em;position:relative;margin: 0 0 0 7.9em;border-left:5px solid #E7EAEF;padding:0.5em;"></div>
											<div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_4" onclick="getCircular(2751,'250924155925492580',1,4)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">REGULAR RESULT OF BCA BATCH 2024 2ND SEM</div><div id='ui-unread-feed-2751' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">The   Regular result(s) of the following program has been declared;1.    BCA BATCH 2024 2ND SEM REGULAR MAY 2025 <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div><div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_5" onclick="getCircular(2750,'250924152653767115',1,5)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">REGULAR RESULT OF BCA BATCH 2023 4TH SEM</div><div id='ui-unread-feed-2750' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">The   Regular result(s) of the following program has been declared;1.    BCA BATCH 2023 4TH SEM REGULAR MAY 2025 <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div><div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_6" onclick="getCircular(2749,'250924140846007432',1,6)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">REGULAR RESULT OF BE CSE BATCH 2023 4TH SEM</div><div id='ui-unread-feed-2749' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">The   Regular result(s) of the following program has been declared;1.    BE CSE BATCH 2023 4TH SEM REGULAR MAY 2025 <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div> <div class="ui-date-day-div">

												<div style="width: 540px;;position:relative;margin: 0 0 0 7.9em;border-left:5px solid #E7EAEF;padding:1em 0 1em 3.7em;text-align: center;">
													<div style="position:relative">
														<hr style="width:100%;position:absolute;top:-7px;">
														<span style="position:relative;background-color:#FFF;padding:0 20px;font:500 18px Roboto;color:#3D3D3D;">Sep 23, Tuesday</span>
													</div>
												</div>

											</div>
											<div style="width:38.2em;position:relative;margin: 0 0 0 7.9em;border-left:5px solid #E7EAEF;padding:0.5em;"></div>
											<div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_7" onclick="getCircular(2746,'250923160048520043',1,7)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">Join Page Turners-A New Reading Club</div><div id='ui-unread-feed-2746' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">Dear All,
Chitkara Happiness Centre is delighted to launch Page Turners, a new reading club aimed at improving communication and public speaking skills, buil... <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div><div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_8" onclick="getCircular(2745,'250923155513714205',1,8)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">Zumba Workshop for Hostelers</div><div id='ui-unread-feed-2745' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">Dear Students,
This is to inform you that a Zumba Workshop is being organized by Chitkara University on 25th September 2025 from 9:45 PM to 10:45 PM. The wor... <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div><div class="ui-timeline"><div class="ui-feed" data-dialog="someslide_9" onclick="getCircular(2744,'250923154828719919',1,9)"><div class="ui-feed-icon-0 ui-feed-icon"></div><div class="ui-feed-content"><div class="ui-feed-info"><div class="ui-circular-title">Revised Seating Plan 24.09.2025 Morning &amp; Evening Session</div><div id='ui-unread-feed-2744' class='ui-unread-feed'>Unread</div><div class="ui-circular-description">Revised Seating Plan 24.09.2025 Morning &amp; Evening Session <span class="ui-read-more trigger" title="Read More" >More</span></div></div>

															</div>

														</div>

													</div>								<!--div class="loader">Loading ...</div-->
							</div>
							<input type="hidden" id="startFeed" value="0" />
							<input type="hidden" id="limitFeed" value="10" />
							<input type="hidden" id="itemTypeFeed" value="" />

														<div id="ui-load-more-wrap" >

								<button id="loadMoreFeedButton" name="loadMoreFeedButton" onclick="loadMoreFeed()">
									Get More Items
								</button>
								<div class="ui-feed-loader-small"></div>

							</div>
						</div>




								<div class="col-md-4 fixed-scroll" data-0="position:relative;" data-20="position:relative;top:0" data-368="position:relative;top:0" data-740="position:fixed;top:10px;" style="width: 160px; display: inline-block;vertical-align: top; position: relative; height:90vh; overflow-y: auto; overflow-x: hidden !important;">

							
									<div id="ui-timeline-links" style="margin-bottom:30px" class="ui-timeline-filter">
										<div id="filter-menu" class="ui-navigation-title ui-navigation-title-1">Integrations</div>
										<form name="frmIntegration" id="frmIntegration" method="post">
											<input type="hidden" readonly="readonly" name="facilityStatus" id="facilityStatus">
											<ul id="ui-filter-categories" style="margin-top:1.2em; padding-left:0px !important;"">
												<li style='cursor: pointer' onClick="getFacility(1);return false;">
													<span class="ui-ba-filter-title">Access UHostel</span>

												</li>
												<li style='cursor: pointer' onClick="getFacility(2);return false;">
													<span class="ui-ba-filter-title">Access UBus</span>
												</li>
											</ul>
										</form>
									</div>
																<div id="ui-timeline-links" style="margin-bottom:30px" class="ui-timeline-filter">

									<div class="ui-navigation-title ui-navigation-title-2">Payment Link(s)</div>

									<ul id="ui-qlink-filter" style="margin-top:1.2em; padding-left: 0px !important;">

										

									</ul>


																				<ul id="ui-qlink-filter" style="margin-top:1.2em; padding-left: 0px !important;">
												<li style='cursor: pointer'>
													<a href="https://cuiet.codebrigade.in/chalkpadpro/openFeeDetails/displayGrid" class="ui-ba-filter-title">Fee for Fine/Activity </a>&nbsp;<img src="https://stjoseph.schoolpad.in/images/new.gif">
												</li>
											</ul>
											
																								


																<div id="ui-timeline-links" style="margin-bottom:30px" class="ui-timeline-filter">
									<div class="ui-navigation-title ui-navigation-title-2">Links</div>
										<ul id="ui-qlink-filter" style="margin-top:1.2em; padding-left: 0px !important;">
											<li style='cursor: pointer'>
																									<a href="https://paym.chitkara.edu.in/studentcounsellingPBcampus/" class="ui-ba-filter-title">Book Counselling Session</a>
													&nbsp;<img src="https://stjoseph.schoolpad.in/images/new.gif">
																							</li>
										</ul>
									</div>
								

																									<div id="ui-timeline-links" style="margin-bottom:30px" class="ui-timeline-filter">

										<div class="ui-navigation-title ui-navigation-title-2">Links</div>
										<ul id="ui-qlink-filter" style="margin-top:1.2em; padding-left: 0px !important;">
											<li style='cursor: pointer'>
												<a href="https://culms.chitkara.edu.in/d2l/lp/auth/saml/initiate-login?entityId=https://accounts.google.com/o/saml2?idpid=C049vxciv" class="ui-ba-filter-title">Access LMS</a>&nbsp;
											</li>
										</ul>
									</div>

								

								<div id="ui-timeline-navigation" style="margin-top:0px" class="ui-timeline-filter">

									<div id="filter-menu" class="ui-navigation-title ui-navigation-title-1">Filters</div>
									<ul id="ui-filter-categories" style="margin-top:1.2em; padding-left:0px !important;"">
										<li style='cursor: pointer' onclick='getFilterFeed(1)' ><div class="ui-filter-title">Circulars</div><div class="ui-filter-notification ui-notif">242</div></li>									</ul>
									<!-- <ul class="ui-filter-months" style="margin-top:1.2em;">

											<li>Recent</li>
											<li>December</li>
											<li>November</li>
											<li>October</li>
											<li>Older</li>

										</ul> -->


								</div>

								<!--div id="ui-timeline-navigation" style="margin-top:30px" class="ui-timeline-filter">

										<div class="ui-navigation-title ui-navigation-title-2">Quick Links</div>
										<ul id="ui-qlink-filter" style="margin-top:1.2em;">

											<li>Issue Book</li>
											<li>Compose Message</li>
											<li>Apply Leave</li>

										</ul>

									</div-->
								


								<div data-0="display:none;" data-600="display:block;" data-spy="scroll" data-target=".mob_icon" class="ui-back-to-top" onclick="bttIntercom()">
									<a class="btt" href="#navigation">Back To Top</a>
								</div>
								</div>

						</div><!-- ui-timeline-container-parent ends here -->

						<footer style="border-top:1px solid #F2F2F2;padding-top:6px;">

							<div class="ui-footer-wrap">

								<div class="ui-footer-text">Powered by</div>
																	<div id="footer-logo-codebrigade"></div>
								

							</div>

						</footer>

					</div><!-- pad ends here -->

				</div><!-- row ends here -->

			</div><!-- container ends here -->
		</div><!-- container-fluid ends here -->

		<!--div class="ui-modal">
		<div class="ui-modal-title">
			Modal Title
		</div>
		<div class="ui-modal-content">
			<label>Subject</label><input type="text" >
			<label>Circular Content</label><input type="text" >
		</div>
		<div class="ui-modal-buttons">

		</div>
	</div-->

		<div class="modal fade bs-example-modal-lg" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
			<div class="modal-dialog modal-lg">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
						<h4 class="modal-title" id="myModalLabel">Circular Manager</h4>
					</div>
					<div class="modal-body">

						<label>Subject</label>
						<div class="modal-input"><input type="text"></div>

						<label>Circular Text</label>
						<div class="modal-input"><textarea rows="7" style="width:600px;resize:none;"></textarea></div>

						<label>Attachment</label>
						<div class="modal-input"><input type="file"></div>

						<label>Visible From</label>
						<div class="modal-input"><input type="text"></div>

						<label>Visible To</label>
						<div class="modal-input"><input type="text"></div>

						<label>Circular By Department</label>
						<div class="modal-input"><select>
								<option>---All---</option>
							</select></div>

						<label>Circular Type</label>
						<div class="modal-input">
							<input type="radio" class="radio-align"><span>Role-wise</span>
							<input type="radio" class="radio-align"><span>Class-wise</span>
						</div>

						<label>Select Roles</label>
						<div class="modal-input"><select>
								<option>---All---</option>
							</select></div>

						<label>Notify By SMS</label>
						<div class="modal-input"><input type="checkbox" class="checkbox-align"></div>

						<label>Notify By e-mail</label>
						<div class="modal-input"><input type="checkbox" class="checkbox-align"></div>

					</div>
					<div class="modal-footer">

						<button type="button" class="btn ui-button-default ui-button-modal-default" data-dismiss="modal">Close</button>
						<div class="progress-button elastic">
							<button type="button" class="btn ui-button-prime ui-button-modal-prime"><span>Save</span></button>
							<svg class="progress-circle" width="30" height="30">
								<path d="m3.5,15c0,-6.353591 5.146409,-11.5 11.5,-11.5c6.353592,0 11.5,5.146409 11.5,11.5c0,6.353592 -5.146408,11.5 -11.5,11.5c-6.353591,0 -11.5,-5.146408 -11.5,-11.5z" stroke-linecap="null" stroke-linejoin="null" stroke-dasharray="null" stroke-width="1" stroke="#3dd3b0" fill="#ffffff" />
							</svg>
							<svg class="checkmark" width="30" height="30">
								<path fill="black" id="svg_1" d="m12.3125,21.496731l9.362499,-14.196731" />
								<path stroke="null" fill="black" id="svg_2" d="m12.125,22.408091l-4.125,-3.445591" />
							</svg>
							<svg class="cross" width="30" height="30">
								<path d="m35,35l-9.3,-9.3" />
								<path d="m35,35l9.3,9.3" />
								<path d="m35,35l-9.3,9.3" />
								<path d="m35,35l9.3,-9.3" />
							</svg>
						</div>

					</div>
				</div>
			</div>
		</div>

		 <div id="modal-slider"><div id="someslide_0" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_0' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_0' type='file' multiple onchange='showSelectedFileName(this,0);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_0').click(); /><div id='errorDiv_0' class='error-div' style='display:none;'></div><div id='successDiv_0' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_0' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_0'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(0);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_0' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_0' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_0'></div></div></div><input type="hidden" id="rId_0" value="0" /><div id='teacherFeedback_0' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_0'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_1" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_1' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_1' type='file' multiple onchange='showSelectedFileName(this,1);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_1').click(); /><div id='errorDiv_1' class='error-div' style='display:none;'></div><div id='successDiv_1' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_1' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_1'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(1);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_1' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_1' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_1'></div></div></div><input type="hidden" id="rId_1" value="0" /><div id='teacherFeedback_1' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_1'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_2" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_2' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_2' type='file' multiple onchange='showSelectedFileName(this,2);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_2').click(); /><div id='errorDiv_2' class='error-div' style='display:none;'></div><div id='successDiv_2' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_2' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_2'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(2);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_2' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_2' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_2'></div></div></div><input type="hidden" id="rId_2" value="0" /><div id='teacherFeedback_2' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_2'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_3" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_3' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_3' type='file' multiple onchange='showSelectedFileName(this,3);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_3').click(); /><div id='errorDiv_3' class='error-div' style='display:none;'></div><div id='successDiv_3' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_3' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_3'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(3);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_3' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_3' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_3'></div></div></div><input type="hidden" id="rId_3" value="0" /><div id='teacherFeedback_3' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_3'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_4" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_4' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_4' type='file' multiple onchange='showSelectedFileName(this,4);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_4').click(); /><div id='errorDiv_4' class='error-div' style='display:none;'></div><div id='successDiv_4' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_4' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_4'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(4);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_4' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_4' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_4'></div></div></div><input type="hidden" id="rId_4" value="0" /><div id='teacherFeedback_4' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_4'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_5" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_5' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_5' type='file' multiple onchange='showSelectedFileName(this,5);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_5').click(); /><div id='errorDiv_5' class='error-div' style='display:none;'></div><div id='successDiv_5' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_5' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_5'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(5);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_5' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_5' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_5'></div></div></div><input type="hidden" id="rId_5" value="0" /><div id='teacherFeedback_5' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_5'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_6" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_6' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_6' type='file' multiple onchange='showSelectedFileName(this,6);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_6').click(); /><div id='errorDiv_6' class='error-div' style='display:none;'></div><div id='successDiv_6' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_6' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_6'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(6);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_6' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_6' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_6'></div></div></div><input type="hidden" id="rId_6" value="0" /><div id='teacherFeedback_6' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_6'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_7" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_7' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_7' type='file' multiple onchange='showSelectedFileName(this,7);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_7').click(); /><div id='errorDiv_7' class='error-div' style='display:none;'></div><div id='successDiv_7' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_7' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_7'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(7);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_7' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_7' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_7'></div></div></div><input type="hidden" id="rId_7" value="0" /><div id='teacherFeedback_7' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_7'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_8" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_8' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_8' type='file' multiple onchange='showSelectedFileName(this,8);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_8').click(); /><div id='errorDiv_8' class='error-div' style='display:none;'></div><div id='successDiv_8' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_8' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_8'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(8);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_8' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_8' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_8'></div></div></div><input type="hidden" id="rId_8" value="0" /><div id='teacherFeedback_8' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_8'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="someslide_9" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body"> </div> <div class="slide_bottom"><div id='submitCase_9' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Add File : </span><input class='fileUploadInput' name='uploadSubmission[]' id='uploadSubmission_9' type='file' multiple onchange='showSelectedFileName(this,9);' /><input type='button' class='click-here' value='Click here to Upload' onclick=document.getElementById('uploadSubmission_9').click(); /><div id='errorDiv_9' class='error-div' style='display:none;'></div><div id='successDiv_9' class='success-div' style='display:none;'></div></div> <div class='ui-feed-det-subject' id='fileListWrap_9' style='display:none;margin-top:40px;'><span class='ui-feed-det-subject-name'>Selected Files : </span><div id='fileList_9'></div></div><div class='ui-feed-det-subject' onclick='submitAttachments(9);'><div class='ui-submit-res'>Submit Your Work</div><div class='ui-feed-loader-res'></div></div></div><div id='submitCloseCase_9' style='display:none;'><div class='ui-feed-det-subject'><span class='ui-feed-det-subject-name'>Submissions have been closed.</span></div></div><div id='submitDoneCase_9' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Submitted File(s) : </span><div id='submitFileList_9'></div></div></div><input type="hidden" id="rId_9" value="0" /><div id='teacherFeedback_9' style='display:none;margin-top:40px;'> <div class='ui-feed-det-subject' ><span class='ui-feed-det-subject-name'>Feedback : </span><div id='feedback_9'></div></div></div></div>	

										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							 <div id="modal-slider"><div id="pinnedslide" class="slide dialog">

								<div class="slide_overlay"></div>

									<div class="slide_content">

										<div class="slider-buttons">

											<div class="ui-print-icon" target="_blank" onclick=""></div>

											<div class="slide-close-button" onclick="slideCloseIntercom()"></div>

										</div>

										<div class="slide_body">

										</div>


										<!--div class="slide-button" title="Close" data-dialog-close></div-->

									</div>

							</div></div>

							
		<!-- <script type="text/javascript">
		for (i=0; i<2; i++) {

				var abc="ui-feed-popup-indicator_"+i;
				var xyz="ui-feed-popup_"+i;

				$("#"+abc).click(function(){
						alert("#"+abc);
					$("#"+xyz).toggle();
				});

			};
	</script> -->

		<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/timeline/skrollr.min.js"></script>
		<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/timeline/classie.js"></script>

		<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/timeline/slide.js"></script>
		<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/timeline/cbpFWTabs.js"></script>
		<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/tooltips.js"></script>
		<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/timeline/mobile-detect.js"></script>


		<script type="text/javascript">
			(function() {

				[].slice.call(document.querySelectorAll('.tabs')).forEach(function(el) {
					new CBPFWTabs(el);
				});

			})();
		</script>

		<script type="text/javascript">
			$('.slide_overlay').on('click', function() {

				$('.slide_body').html('');
			});
		</script>

		<!--script type="text/javascript">
			$('<span class="ui-read-more" title="Read More" data-dialog="someslide">More</span>').appendTo('.ui-circular-description');
	</script-->

		<script type="text/javascript">
			(function() {

				[].slice.call(document.querySelectorAll('[data-dialog]')).forEach(function(trigger) {
					var dlg = new DialogFx(document.getElementById(trigger.getAttribute('data-dialog')));

					trigger.addEventListener('click', dlg.toggle.bind(dlg));
				});

			})();
		</script>



		<script type="text/javascript">
			$("#ui-timeline-navigation li").click(function() {

				$(".active-nav").removeClass("active-nav");

				$(this).addClass("active-nav");

				return false;

			});


			$("#ui-timeline-navigation li").click(function() {

				$('.active-nav-underline').removeClass("active-nav-underline");

				$(this).find('.ui-filter-title').addClass("active-nav-underline");

				return false;

			});

			$('.slide-close-button').click(function() {

				$('#modal-slider .slide').addClass('slide--close').removeClass('slide--open');

				$('html').removeClass('modal-open');

				$(".active-nav").removeClass("active-nav");

				$(".active-nav-underline").removeClass("active-nav-underline");

			});

			$(".navbar-nav li").click(function() {

				$(".tab-current").removeClass("tab-current");

				$(this).addClass("tab-current");

				return false;

			});
		</script>

		<script type="text/javascript">
			//For adjusting menu lookup
			if (navigator.appName == "Microsoft Internet Explorer") {

				document.getElementById("menuLookupContainer").style.right = (((document.documentElement.clientWidth / 2) - 455) + 18) + "px";
				document.getElementById("menuLookupContainer").style.width = "185px";
				document.getElementById("menuLookupContainer").style.marginTop = "10px";
			} else {

				//document.getElementById("menuLookupContainer").style.right=(((document.documentElement.clientWidth/2)-455)+18) + "px";
				document.getElementById("menuLookupContainer").style.width = "185px"
				document.getElementById("menuLookupContainer").style.marginLeft = "10px"
				document.getElementById("menuLookupContainer").style.marginTop = "0px"

			}
		</script>

		<script type="text/javascript">
			var md = new MobileDetect(window.navigator.userAgent);

			if (md.mobile() || md.phone() || md.tablet()) {
				// do nothing
			} else {
				var s = skrollr.init();
			}
		</script>

		<script type="text/javascript">
			function submitVote(pollId, timeStamp) {

				var option = $('input[name=radio-' + pollId + ']:checked').val();

				//var options=$('input[name=radio-'+pollId+']').val();
				if (option) {
					$('#ui-vote-btn-' + pollId).prop('disabled', true);

					urlPath = "https://cuiet.codebrigade.in/dashboardFeed/submitVote";
					$.ajax({
						url: urlPath,
						type: "POST",
						data: ({
							opSelected: option,
							pollId: pollId,
							timeStamp: timeStamp
						}),
						success: function(msg) {

							$('#ui-unread-feed-' + pollId).hide();
							$('#ui-vote-btn-' + pollId).hide();
							$('input[name=radio-' + pollId + ']').prop('disabled', true);
							$('input[name=radio-' + pollId + ']:checked').replaceWith('<div class="answer-tick"></div>');

							$('#ui-result-btn-' + pollId).show();

							updateNotifCount();

						}
					});

				}

			}



			function showPollFeedResult(pollId, timeStamp) {

				//chart.invalidateSize();chart.animateAgain();
				$.ajax({
					url: "https://cuiet.codebrigade.in/dashboardFeed/getPollResults",
					type: "POST",
					data: ({
						pollId: pollId,
						timeStamp: timeStamp
					}),
					async: false,
					success: function(msg) {

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');


						//alert(msg);
						obj = $.parseJSON(msg);

						if (obj.optionArray.length != 0) {

							var b = new Array();
							var c = new Array();
							var d = 0;
							var total = 0;

							for (var j = 0; j < obj.optionArray.length; j++) {
								b[j] = obj.optionArray[j].count;
								total += parseInt(b[j]);
							}

							for (var k = 0; k < b.length; k++) {
								c[k] = obj.optionArray[k].count;
							}


							var pollOptQuestion = obj.question;

							var str = '';

							str += '	<div id="modal-slider-poll">';

							str += '  <div id="pollslide_' + pollId + '" class="slide dialog poll-results">';

							str += '	<div class="slide_overlay"></div>';

							str += '	<div class="slide_content"> \
										<div class="slider-buttons"> \
												<div class="slide-close-button" onclick="slideCloseIntercom()"></div> \
										</div>';

							str += '		<div class="slide_poll_body">';

							str += '			<h2>' + pollOptQuestion + '</h2>';

							for (var i = 0; i < obj.optionArray.length; i++) {

								var pollOptId = obj.optionArray[i]['optionId'];
								var pollOptName = obj.optionArray[i]['optionName'];
								var pollOptCount = obj.optionArray[i]['count'];



								if (c[i] > 0) {
									str += '<div style="font:1.6em r-regular;text-align:left;">' + pollOptName + '</div> \
						                    <div style="text-align:left;margin-bottom:10px"><img src="https://cuiet.codebrigade.in/images/vote.gif" height="10" width="' + (Math.round((c[i] / total) * 100)) + '">&nbsp;&nbsp;[' + c[i] + ']&nbsp;</div>';
								} else {
									str += "<div style='font:1.6em r-regular;text-align:left;'>" + pollOptName + "</div><div style='text-align:left;margin-bottom:10px'><b>[0]</b>&nbsp;<img src='https://cuiet.codebrigade.in/images/ballot_icon.gif'></div>";
								}


							}

							str += '<div id="chartdiv"></div>';

							//str+='<button class="slide-button" title="Close" data-dialog-close></button>';

							str += '</div>';

							str += '</div>';

							str += '</div>';

							str += '</div>';

						} else {

							var str = '';

							str += '	<div id="modal-slider-poll">';

							str += '  	<div id="pollslide_' + pollId + '" class="slide dialog poll-results">';

							str += '		<div class="slide_overlay"></div>';

							str += '		<div class="slide_content"> \
											<div class="slider-buttons"> \
												<div class="slide-close-button" onclick="slideCloseIntercom()"></div> \
											</div>';

							str += '			<div class="slide_poll_body">';

							str += '      		<div class="ui-blank-feed">Item Not Available</div>';

							str += '			</div>';

							str += '		</div>';

							str += '		</div>';

							str += '	</div>';

						}



						$('.container-fluid').after(str);

						$('#pollslide_' + pollId).removeClass('slide--close').addClass('slide--open');

						$('.slide_overlay, .slide-close-button').on('click', function() {

							$('html').removeClass('modal-open');

							$('#modal-slider-poll .slide').removeClass('slide--open').addClass('slide--close');

						});

						slidetip();
					}



				});


			}

			function printItem(itemType, id) {
				window.open("https://cuiet.codebrigade.in/dashboardFeed/printItem/" + itemType + '/' + id, '', 'location=1,status=1,scrollbars=1,width=890,height=600');
			}

			function getCircular(id, timeStamp, readBit, slideId) {
			
				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/display";
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id,
						timeStamp: timeStamp,
						readBit: readBit
					}),
					success: function(msg) {

						if (readBit == 1) {
							updateNotifCount();
						}

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');
						$('#ui-unread-feed-' + id).hide();
						$('#ui-update-feed-' + id).hide();

						$('#someslide_' + slideId).removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');
							$('#someslide_' + slideId).removeClass('slide--open').addClass('slide--close');
							//$('#someslide_'+slideId).delay(500).removeClass('slide--close');

						});

						//msg=$.parseJSON(responseMsg2);
						// alert(msg);
						$('.ui-print-icon').show();
						$('.ui-print-icon').attr('onClick', 'printItem(1,' + id + ')');
						$('.slide_body').html($.trim(msg));

					}
				});
			}
			// Created Jan 2020 - Amanpreet - to display pinned item circular detail
			function getCircular1(id) {

				$('.ui-feed-loader').show();
				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/display1";
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id
					}),
					success: function(msg) {

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#pinnedslide').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {
							$('html').removeClass('modal-open');
							$('#pinnedslide').removeClass('slide--open').addClass('slide--close');
						});

						$('.ui-print-icon').show();
						$('.ui-print-icon').attr('onClick', 'printItem(1,' + id + ')');
						$('.slide_body').html($.trim(msg));
					}
				});
			}

			function getPlanner(id, timeStamp, readBit, slideId) {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/displayPlanners";
				// showModal('ViewPlanners',20);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id,
						timeStamp: timeStamp,
						readBit: readBit
					}),
					success: function(msg) {

						if (readBit == 1) {
							updateNotifCount();
						}

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');
						$('#ui-unread-feed-' + id).hide();
						$('#ui-update-feed-' + id).hide();

						$('#someslide_' + slideId).removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');
							$('#someslide_' + slideId).addClass('slide--close').removeClass('slide--open');
							//$('#someslide_'+slideId).delay(500).removeClass('slide--close');

						});

						//    hideLoader();
						//alert($.trim(msg));
						$('.ui-print-icon').show();
						$('.ui-print-icon').attr('onClick', 'printItem(2,' + id + ')');
						$('.slide_body').html($.trim(msg));

						//openPlannerId=id;
						//$("#innerTextPlanner").html($.trim(msg));
						//document.getElementById("loadingPlanner").style.display="none";
						//    document.getElementById("contentPlanners").style.display="";
						//
					}
				});
			}
			// Created Jan 2020 - Amanpreet - to display pinned item planner detail
			function getPlanner1(id) {

				$('.ui-feed-loader').show();
				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/displayPlanners1";
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id
					}),
					success: function(msg) {

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#pinnedslide').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {
							$('html').removeClass('modal-open');
							$('#pinnedslide').removeClass('slide--open').addClass('slide--close');
						});

						$('.ui-print-icon').show();
						$('.ui-print-icon').attr('onClick', 'printItem(2,' + id + ')');
						$('.slide_body').html($.trim(msg));
					}
				});
			}

			function getResource(id, timeStamp, readBit, slideId) {
				$('#fileList_' + slideId).html("");
				$('#fileListWrap_' + slideId).hide();

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/displayResources";
				// showModal('ViewResources',50);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id,
						timeStamp: timeStamp,
						readBit: readBit,
						slideId: slideId
					}),
					success: function(msg) {
						obj = $.parseJSON(msg);


						if (readBit == 1) {
							updateNotifCount();
						}

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');
						$('#ui-unread-feed-' + id).hide();
						$('#ui-update-feed-' + id).hide();

						$('#someslide_' + slideId).removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');
							$('#someslide_' + slideId).removeClass('slide--open').addClass('slide--close');
							//$('#someslide_'+slideId).delay(500).removeClass('slide--close');

						});

						// alert(msg);
						// hideLoader();
						// alert($.trim(msg));
						$('.ui-print-icon').show();
						$('.ui-print-icon').attr('onClick', 'printItem(3,' + id + ')');
						$('.slide_body').html($.trim(obj.content));

						// Amanpreet
						$('#rId_' + slideId).val(id);
						if (obj.onlineSubmissionBit == 1) {
							if (obj.allowBit == 1) {
								document.getElementById('uploadSubmission_' + slideId).value = "";
								$('#submitCase_' + slideId).show();
								$('#submitCloseCase_' + slideId).hide();
							} else {
								$('#submitCase_' + slideId).hide();
								$('#submitCloseCase_' + slideId).show();
							}
						}
						if (obj.prevUpload != "") {
							$('#submitFileList_' + slideId).html(obj.prevUpload);
							$('#submitDoneCase_' + slideId).show();
						} else {
							$('#submitFileList_' + slideId).html("");
							$('#submitDoneCase_' + slideId).hide();
						}
						if (obj.teacherFeedback != "") {
							$('#feedback_' + slideId).html(obj.teacherFeedback);
							$('#teacherFeedback_' + slideId).show();
						}
						// code ends

						// openResourceId=id;
						// $("#innerTextResource").html($.trim(msg));
						// document.getElementById("loadingResource").style.display="none";
						// document.getElementById("contentResources").style.display="";
					}
				});
			}
			// Created Jan 2020 - Amanpreet - to display pinned item resource detail
			function getResource1(id) {

				$('.ui-feed-loader').show();
				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/displayResources1";
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id
					}),
					success: function(msg) {

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#pinnedslide').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {
							$('html').removeClass('modal-open');
							$('#pinnedslide').removeClass('slide--open').addClass('slide--close');
						});

						$('.ui-print-icon').show();
						$('.ui-print-icon').attr('onClick', 'printItem(3,' + id + ')');
						$('.slide_body').html($.trim(msg));
					}
				});
			}
			// Created Mar 2020 - Amanpreet - to display selected filenames at time of submission
			function showSelectedFileName(input, c) {
				$('#fileList_' + c).html("");
				$('#fileListWrap_' + c).hide();
				$('#errorDiv_' + c).html("");
				$('#errorDiv_' + c).hide();
				$('#successDiv_' + c).html("");
				$('#successDiv_' + c).hide();

				var numOfFile = input.files.length; //alert(numOfFile);
				var fNameList = "";
				var errorMsg1 = "";
				var errorMsg2 = "";
				var errorMsg3 = "";
				for (var i = 0; i < numOfFile; i++) {
					var file = input.files[i];

					if (file.name != "") {

						var fileExtArr = file.name.split(".").pop();

						var fileExt = "." + fileExtArr.toLowerCase(); //alert (fileExt);

						if (fileExt != "") {
							if (fileExt.indexOf(".pdf") !== -1 ||
								fileExt.indexOf(".doc") !== -1 ||
								fileExt.indexOf(".docx") !== -1 ||
								fileExt.indexOf(".ppt") !== -1 ||
								fileExt.indexOf(".pptx") !== -1 ||
								fileExt.indexOf(".xls") !== -1 ||
								fileExt.indexOf(".xlsx") !== -1 ||
								fileExt.indexOf(".txt") !== -1 ||
								fileExt.indexOf(".csv") !== -1 ||
								fileExt.indexOf(".htm") !== -1 ||
								fileExt.indexOf(".html") !== -1 ||
								fileExt.indexOf(".rtf") !== -1 ||
								fileExt.indexOf(".wav") !== -1 ||
								fileExt.indexOf(".mov") !== -1 ||
								fileExt.indexOf(".3gp") !== -1 ||
								fileExt.indexOf(".mp4") !== -1 ||
								fileExt.indexOf(".mp3") !== -1 ||
								fileExt.indexOf(".wma") !== -1 ||
								fileExt.indexOf(".flv") !== -1 ||
								fileExt.indexOf(".avi") !== -1 ||
								fileExt.indexOf(".jpg") !== -1 ||
								fileExt.indexOf(".jpeg") !== -1 ||
								fileExt.indexOf(".png") !== -1 ||
								fileExt.indexOf(".gif") !== -1 ||
								fileExt.indexOf(".bmp") !== -1 ||
								fileExt.indexOf(".zip") !== -1
							) {
								$('#fileList_' + c).append(file.name + "<br>");
							} else {
								errorMsg1 += fileExt + " ";
							}
						} else {
							errorMsg2 += file.name + " ";
						}
					} else {
						errorMsg3 += file.name + " ";
					}
				}
				if (errorMsg3 != "") {
					$('#errorDiv_' + c).html("File Name Error on " + errorMsg3);
					$('#errorDiv_' + c).show();
					input.value = "";

				} else if (errorMsg2 != "") {
					$('#errorDiv_' + c).html("File Extension Error on " + errorMsg2);
					$('#errorDiv_' + c).show();
					input.value = "";

				} else if (errorMsg1 != "") {
					$('#errorDiv_' + c).html("Please upload valid file. Following file type not allowed - " + errorMsg1);
					$('#errorDiv_' + c).show();
					input.value = "";

				} else {
					$('#fileListWrap_' + c).show();
				}
			}
			// Created Mar 2020 - Amanpreet - to upload and save attachments for submission
			function submitAttachments(slideId) {
				$('#errorDiv_' + slideId).html("");
				$('#errorDiv_' + slideId).hide();
				$('#successDiv_' + slideId).html("");
				$('#successDiv_' + slideId).hide();
				var data = new FormData();
				var input1 = document.getElementById('uploadSubmission_' + slideId);
				var numOfFile = input1.files.length; //alert(numOfFile);
				$('.ui-feed-loader-res').show();
				$('.ui-submit-res').hide();
				if (numOfFile > 0) {
					for (var i = 0; i < numOfFile; i++) {
						data.append('attachments[]', input1.files[i]);
					}
					rId = document.getElementById('rId_' + slideId).value;
					data.append('id', rId);
					$.ajax({
						url: "https://cuiet.codebrigade.in/dashboardFeed/submitAttachments/",
						type: "POST",
						processData: false, // important
						contentType: false, // important
						data: data,
						dataType: 'json',
						success: function(msg) {
							obj = msg;
							if (obj.success == 1) {
								$('#fileList_' + slideId).html("");
								$('#fileListWrap_' + slideId).hide();
								if (obj.prevUpload != "") {
									$('#submitFileList_' + slideId).html(obj.prevUpload);
									$('#submitDoneCase_' + slideId).show();
								} else {
									$('#submitFileList_' + slideId).html("");
									$('#submitDoneCase_' + slideId).hide();
								}
								$('#successDiv_' + slideId).html("Submitted Successfully.");
								$('#successDiv_' + slideId).show();
								document.getElementById('uploadSubmission_' + slideId).value = "";
							} else {
								$('#errorDiv_' + slideId).html(obj.errMsg);
								$('#errorDiv_' + slideId).show();
								document.getElementById('uploadSubmission_' + slideId).value = "";
								$('.ui-feed-loader-res').hide();
								$('.ui-submit-res').show();
							}
							$('.ui-feed-loader-res').hide();
							$('.ui-submit-res').show();
							document.getElementById('uploadSubmission_' + slideId).value = "";
						}
					});
				} else {
					$('#errorDiv_' + slideId).html("Please select a file first.");
					$('#errorDiv_' + slideId).show();
					document.getElementById('uploadSubmission_' + slideId).value = "";
					$('.ui-feed-loader-res').hide();
					$('.ui-submit-res').show();
				}
			}

			function markFeedbackRead(id) {
				$('#feed-loader-big' + id).show();
				$("#markRead_" + id).hide();
				$.ajax({
					url: "https://cuiet.codebrigade.in/dashboardFeed/markFeedbackRead/",
					type: "POST",
					data: ({
						id: id
					}),
					success: function(msg) {

						obj = $.parseJSON(msg);
						$('#feed-loader-big' + id).hide();
						$("#feedBackRead_" + id).html(obj.html);
						$("#feedBackRead_" + id).show();
					}
				});

			}

			function getEvent(id, timeStamp, readBit) {

				 // Intercom script ends

				updateEvent(id, timeStamp);

				$('#ui-unread-feed-' + id).hide();
				$('#ui-update-feed-' + id).hide();

				if (readBit == 1) {
					updateNotifCount();
				}

				urlPath = "https://cuiet.codebrigade.in/eventsPg/disp/" + id;
				//alert(1);
				window.open(
					urlPath,
					'_blank' // <- This is what makes it open in a new window.
				);

			}
			// Created Jan 2020 - Amanpreet - to display pinned item event detail
			function getEvent1(id) {
				urlPath = "https://cuiet.codebrigade.in/eventsPg/disp/" + id;
				window.open(
					urlPath,
					'_blank' // <- This is what makes it open in a new window.
				);
			}

			function getGallery(id, timeStamp, readBit) {

				 // Intercom script ends

				updateEvent(id, timeStamp);

				$('#ui-unread-feed-' + id).hide();
				$('#ui-update-feed-' + id).hide();

				if (readBit == 1) {
					updateNotifCount();
				}

				roleId = 4;
				if (roleId == 2) {
					urlPath = "https://cuiet.codebrigade.in/parentAlbumImages/display/" + id;
				} else if (roleId == 4) {
					urlPath = "https://cuiet.codebrigade.in/studentAlbumImages/display/" + id;
				} else if (roleId == 3) {
					urlPath = "https://cuiet.codebrigade.in/teacherAlbumImages/display/" + id;
				} else if (roleId == 5) {
					urlPath = "https://cuiet.codebrigade.in/teacherAlbumImages/display/" + id;
				} else {
					urlPath = "https://cuiet.codebrigade.in/albumImages/display/" + id;
				}
				//alert(1);
				window.open(
					urlPath,
					'_blank' // <- This is what makes it open in a new window.
				);

			}

			function getActivity(id, timeStamp, readBit) {

				 // Intercom script ends

				updateEvent(id, timeStamp);

				$('#ui-unread-feed-' + id).hide();
				$('#ui-update-feed-' + id).hide();

				if (readBit == 1) {
					updateNotifCount();
				}

				roleId = 4;
				if (roleId == 2) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoParent/display/" + id;
				} else if (roleId == 4) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoStudent/displayEntries/" + id;
				} else if (roleId == 3) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoTeacher/display/" + id;
				} else if (roleId == 5) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoTeacher/display/" + id;
				} else {
					urlPath = "https://cuiet.codebrigade.in/activityInfo/display/" + id;
				}
				//alert(1);
				window.open(
					urlPath,
					'_blank' // <- This is what makes it open in a new window.
				);

			}

			function getActivity1(id) {

				roleId = 4;
				if (roleId == 2) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoParent/display/" + id;
				} else if (roleId == 4) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoStudent/display/" + id;
				} else if (roleId == 3) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoTeacher/display/" + id;
				} else if (roleId == 5) {
					urlPath = "https://cuiet.codebrigade.in/activityInfoTeacher/display/" + id;
				} else {
					urlPath = "https://cuiet.codebrigade.in/activityInfo/display/" + id;
				}
				//alert(1);
				window.open(
					urlPath,
					'_blank' // <- This is what makes it open in a new window.
				);

			}

			function getLessons(id, timeStamp, readBit, slideId) {
				 // Intercom script ends
				$('.ui-feed-loader').show();
				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/displayLessonPlanner";
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id,
						timeStamp: timeStamp,
						readBit: readBit
					}),
					success: function(msg) {
						if (readBit == 1) {
							updateNotifCount();
						}
						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');
						$('#ui-unread-feed-' + id).hide();
						$('#ui-update-feed-' + id).hide();
						$('#someslide_' + slideId).removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {
							$('html').removeClass('modal-open');
							$('#someslide_' + slideId).removeClass('slide--open').addClass('slide--close');
							//$('#someslide_'+slideId).delay(500).removeClass('slide--close');
						});
						//msg=$.parseJSON(responseMsg2);
						// alert(msg);
						$('.ui-print-icon').hide();

						$('.slide_body').html($.trim(msg));

					}
				});
			}

			function updateEvent(id, timeStamp) {

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/updateEvent";
				// showModal('ViewResources',50);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						id: id,
						timeStamp: timeStamp
					}),
					success: function(msg) {

					}
				});
			}

			function getFilterFeed(itemType) {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/filterFeedHtml/";
				//urlPath = "http://cis.schoolpad.in/loginManager/filterFeedHtml";
				// showModal('ViewResources',50);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					data: ({
						itemType: itemType,
						start: 0,
						limit: 10,
						loadMore: 0
					}),
					success: function(msg) {

						updateNotifCount();

						obj = msg.split('|');
						$('#ui-load-more-wrap').show();
						if (obj[0] == 0) {

							window.scrollTo(0, 0);

							$('body').css('height', '');

							$('.ui-feed-loader').hide();

							$('#loadMoreFeedButton').hide();

							$('.ui-back-to-top').hide();

							//$('.ui-timeline-container-parent').('height','');

							$('#feed').html('<div class="ui-blank-message">No Feeds</div>');

						} else {

							window.scrollTo(0, 0);

							$('body').css('height', '');

							$('.ui-feed-loader').hide();

							$('#loadMoreFeedButton').show();

							$('#feed').html(obj[0]);

						}
						$('#itemTypeFeed').val(itemType);

						if (obj[1] < 10) {
							//$('#ui-load-more-wrap').hide();
						}

						loadqtip();
					}

				});

			}


			function getStudentBirthDays() {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/getStudentBirthDays";
				// showModal('ViewPlanners',20);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					success: function(msg) {

						updateNotifCount();

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#someslide_0').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');

							$('#someslide_0').removeClass('slide--open').addClass('slide--close');
							//$('#someslide_0').delay(500).removeClass('slide--close')

							$(".active-nav").removeClass("active-nav");

							$('.active-nav-underline').removeClass("active-nav-underline");

						});

						$('.ui-print-icon').hide();

						//    hideLoader();
						//alert($.trim(msg));
						$('.slide_body').html($.trim(msg));
						//openPlannerId=id;
						//$("#innerTextPlanner").html($.trim(msg));
						//document.getElementById("loadingPlanner").style.display="none";
						//    document.getElementById("contentPlanners").style.display="";
						//
					}
				});
			}

			function getEmployeeBirthDays() {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/getEmployeeBirthDays";
				// showModal('ViewPlanners',20);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					success: function(msg) {

						//updateNotifCount();

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#someslide_0').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');
							$('#someslide_0').removeClass('slide--open').addClass('slide--close');
							//$('#someslide_0').delay(500).removeClass('slide--close')

							$(".active-nav").removeClass("active-nav");

							$('.active-nav-underline').removeClass("active-nav-underline");

						});
						$('.ui-print-icon').hide();
						//    hideLoader();
						//alert($.trim(msg));
						$('.slide_body').html($.trim(msg));
						//openPlannerId=id;
						//$("#innerTextPlanner").html($.trim(msg));
						//document.getElementById("loadingPlanner").style.display="none";
						//    document.getElementById("contentPlanners").style.display="";
						//
					}
				});
			}

			function getEmployeeAnniversary() {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/getEmployeeAnniversary";
				// showModal('ViewPlanners',20);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					success: function(msg) {

						//updateNotifCount();

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#someslide_0').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');
							$('#someslide_0').removeClass('slide--open').addClass('slide--close');
							//$('#someslide_0').delay(500).removeClass('slide--close')

							$(".active-nav").removeClass("active-nav");

							$('.active-nav-underline').removeClass("active-nav-underline");

						});
						$('.ui-print-icon').hide();
						//    hideLoader();
						//alert($.trim(msg));
						$('.slide_body').html($.trim(msg));
						//openPlannerId=id;
						//$("#innerTextPlanner").html($.trim(msg));
						//document.getElementById("loadingPlanner").style.display="none";
						//    document.getElementById("contentPlanners").style.display="";
						//
					}
				});
			}

			function loadMoreFeed() {

				$('.ui-feed-loader-small').show();
				$('#loadMoreFeedButton').hide();

				start = parseInt($('#startFeed').val()) + 10;
				limit = parseInt($('#limitFeed').val()) + 10;
				itemType = $('#itemTypeFeed').val();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/filterFeedHtml";

				$.ajax({
					url: urlPath,
					type: "POST",

					data: ({
						start: start,
						limit: limit,
						itemType: itemType,
						loadMore: 1
					}),
					success: function(msg) {

						updateNotifCount();

						obj = msg.split('|');
						$('#ui-load-more-wrap').show();

						if (obj[0] == 0) {
							$('.ui-feed-loader-small').hide();
							$('#ui-load-more-wrap').hide();
							$('#feed').append('<div class="no-feeds">No More Items To Display</div>');
						} else {
							$('.ui-feed-loader-small').hide();
							$('#loadMoreFeedButton').show();
							$('#startFeed').val(start + 10);
							$('#limitFeed').val(limit + 10);
							$('#feed').append(obj[0]);
						}

						if (obj[1] < 10) {
							$('#ui-load-more-wrap').hide();
						}

						loadqtip();
					}

				});

			}


			function getStudentRemindersDueToday() {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/getStudentRemindersDueToday";
				// showModal('ViewPlanners',20);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					success: function(msg) {

						//updateNotifCount();

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#someslide_0').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');

							$('#someslide_0').removeClass('slide--open').addClass('slide--close');
							//$('#someslide_0').delay(500).removeClass('slide--close')

							$(".active-nav").removeClass("active-nav");

							$('.active-nav-underline').removeClass("active-nav-underline");

						});

						$('.ui-print-icon').hide();
						//alert($.trim(msg));
						$('.slide_body').html($.trim(msg));
					}
				});
			}


			function getStudentRemindersUpcoming() {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/getStudentRemindersUpcoming";
				// showModal('ViewPlanners',20);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					success: function(msg) {

						//updateNotifCount();

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#someslide_0').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');

							$('#someslide_0').removeClass('slide--open').addClass('slide--close');
							//$('#someslide_0').delay(500).removeClass('slide--close')

							$(".active-nav").removeClass("active-nav");

							$('.active-nav-underline').removeClass("active-nav-underline");

						});

						$('.ui-print-icon').hide();
						//alert($.trim(msg));
						$('.slide_body').html($.trim(msg));
					}
				});
			}


			function getStudentRemindersCompleted() {

				 // Intercom script ends

				$('.ui-feed-loader').show();

				urlPath = "https://cuiet.codebrigade.in/dashboardFeed/getStudentRemindersCompleted";
				// showModal('ViewPlanners',20);
				// showLoader();
				$.ajax({
					url: urlPath,
					type: "POST",
					success: function(msg) {

						//updateNotifCount();

						$('.ui-feed-loader').hide();
						$('html').addClass('modal-open');

						$('#someslide_0').removeClass('slide--close').addClass('slide--open');
						$('.slide_overlay').on('click', function() {

							$('html').removeClass('modal-open');

							$('#someslide_0').removeClass('slide--open').addClass('slide--close');
							//$('#someslide_0').delay(500).removeClass('slide--close')

							$(".active-nav").removeClass("active-nav");

							$('.active-nav-underline').removeClass("active-nav-underline");

						});

						$('.ui-print-icon').hide();
						//alert($.trim(msg));
						$('.slide_body').html($.trim(msg));
					}
				});
			}
		</script>

		<script type="text/javascript">
			function bttIntercom() {

				 // Intercom script ends

			}

			function slideCloseIntercom() {

				 // Intercom script ends

			}

			function managetaskdashboard() {
				$url = "https://cuiet.codebrigade.in/";
				window.location.href = $url+'managetask/dashboard';
			}
		</script>

				<script src="https://cuiet.codebrigade.in/scripts/togetherjs.js"></script>
		<script type="text/javascript" src="https://cuiet.codebrigade.in/scripts/swiper.js"></script>

		<script>
			var swiper = new Swiper('.swiper-container', {
				pagination: {
					el: '.swiper-pagination',
					type: 'fraction',
				},
				navigation: {
					nextEl: '.swiper-button-next',
					prevEl: '.swiper-button-prev',
				},
				autoplay: {
					delay: 9000,
					disableOnInteraction: false
				},
			});
		</script>
				<iframe id="uploadTargetAdd" name="uploadTargetAdd" style="display:none;"></iframe>

<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</body>

</html>